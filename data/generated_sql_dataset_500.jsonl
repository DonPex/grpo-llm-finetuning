{"sql_prompt": "List the IDs and severities of all alarms that are currently inhibited.", "sql": "SELECT id, severity FROM alarm WHERE inhibit = TRUE;", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), inhibit boolean);\nINSERT INTO alarm (id, severity, inhibit) VALUES (101, 'critical', TRUE);\nINSERT INTO alarm (id, severity, inhibit) VALUES (102, 'major', FALSE);"}
{"sql_prompt": "Show the incident number and description for incidents that have been reopened more than once.", "sql": "SELECT incident_number, description FROM incident WHERE reopen_count > 1;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), description text, reopen_count integer);\nINSERT INTO incident (incident_number, description, reopen_count) VALUES ('INC00123', 'Network outage in sector 7', 2);\nINSERT INTO incident (incident_number, description, reopen_count) VALUES ('INC00124', 'Service degradation reported', 0);"}
{"sql_prompt": "What are the site names and addresses located in the 'Roma' province?", "sql": "SELECT \"SITE_NAME\", \"ADDRESS\" FROM sites WHERE \"PROVINCIA\" = 'Roma';", "sql_context": "CREATE TABLE sites (\"SITE_ID\" text, \"SITE_NAME\" text, \"ADDRESS\" text, \"PROVINCIA\" text);\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"ADDRESS\", \"PROVINCIA\") VALUES ('S001', 'Roma Termini Station', 'Piazza dei Cinquecento', 'Roma');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"ADDRESS\", \"PROVINCIA\") VALUES ('S002', 'Milano Centrale', 'Piazza Duca d Aosta', 'Milano');"}
{"sql_prompt": "Count the number of alarms for each severity level.", "sql": "SELECT severity, COUNT(*) AS alarm_count FROM alarm GROUP BY severity;", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250));\nINSERT INTO alarm (id, severity) VALUES (201, 'critical');\nINSERT INTO alarm (id, severity) VALUES (202, 'major');\nINSERT INTO alarm (id, severity) VALUES (203, 'critical');"}
{"sql_prompt": "Find the distinct device types associated with alarms having 'critical' severity.", "sql": "SELECT DISTINCT device_type FROM alarm WHERE severity = 'critical';", "sql_context": "CREATE TABLE alarm (id bigint, device_type character varying(250), severity character varying(250));\nINSERT INTO alarm (id, device_type, severity) VALUES (301, 'Router', 'critical');\nINSERT INTO alarm (id, device_type, severity) VALUES (302, 'Switch', 'major');\nINSERT INTO alarm (id, device_type, severity) VALUES (303, 'Router', 'critical');"}
{"sql_prompt": "List the alarm ID, equipment name, and severity for alarms raised after '2023-10-26 10:00:00'.", "sql": "SELECT id, eqp_name, severity FROM alarm WHERE time_raised > '2023-10-26 10:00:00';", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), severity character varying(250), time_raised timestamp without time zone);\nINSERT INTO alarm (id, eqp_name, severity, time_raised) VALUES (401, 'EQP-A', 'minor', '2023-10-26 09:30:00');\nINSERT INTO alarm (id, eqp_name, severity, time_raised) VALUES (402, 'EQP-B', 'critical', '2023-10-26 11:00:00');"}
{"sql_prompt": "Show the alarm ID and the corresponding slogan from the alarm label table.", "sql": "SELECT T1.id, T2.slogan FROM alarm AS T1 INNER JOIN alarm_label AS T2 ON T1.id = T2.id;", "sql_context": "CREATE TABLE alarm (id bigint);\nCREATE TABLE alarm_label (id bigint, slogan character varying(250));\nINSERT INTO alarm (id) VALUES (501);\nINSERT INTO alarm (id) VALUES (502);\nINSERT INTO alarm_label (id, slogan) VALUES (501, 'System Overload');\nINSERT INTO alarm_label (id, slogan) VALUES (502, 'Link Down');"}
{"sql_prompt": "Find the incident number, affected service, and status for incidents assigned to 'Network Team Alpha'.", "sql": "SELECT incident_number, affected_service, status FROM incident WHERE assignment_group = 'Network Team Alpha';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), status integer);\nINSERT INTO incident (incident_number, affected_service, assignment_group, status) VALUES ('INC00201', 'VPN Service', 'Network Team Alpha', 2);\nINSERT INTO incident (incident_number, affected_service, assignment_group, status) VALUES ('INC00202', 'Internet Access', 'Service Desk', 1);"}
{"sql_prompt": "List the top 5 most recent alarms based on the time they were raised.", "sql": "SELECT id, severity, time_raised FROM alarm ORDER BY time_raised DESC LIMIT 5;", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), time_raised timestamp without time zone);\nINSERT INTO alarm (id, severity, time_raised) VALUES (601, 'major', '2023-10-27 08:00:00');\nINSERT INTO alarm (id, severity, time_raised) VALUES (602, 'critical', '2023-10-27 09:15:00');\nINSERT INTO alarm (id, severity, time_raised) VALUES (603, 'warning', '2023-10-27 07:30:00');"}
{"sql_prompt": "Get the node name and IP address for network elements with model code 'ASR9K'.", "sql": "SELECT \"NODE_NAME\", \"IP_ADDRESS\" FROM equipment_ip_address WHERE \"MODEL_CODE\" = 'ASR9K';", "sql_context": "CREATE TABLE equipment_ip_address (index bigint, \"NODE_NAME\" text, \"MODEL_CODE\" text, \"IP_ADDRESS\" text);\nINSERT INTO equipment_ip_address (index, \"NODE_NAME\", \"MODEL_CODE\", \"IP_ADDRESS\") VALUES (1, 'Router-Core-1', 'ASR9K', '10.0.0.1');\nINSERT INTO equipment_ip_address (index, \"NODE_NAME\", \"MODEL_CODE\", \"IP_ADDRESS\") VALUES (2, 'Router-Edge-1', 'NCS5500', '10.1.0.1');"}
{"sql_prompt": "Show the alarm ID, severity, and equipment name from the alarms view for alarms related to 'EQP-XYZ'.", "sql": "SELECT alarm_id, severity, eqp_name FROM v_alarms WHERE eqp_name = 'EQP-XYZ';", "sql_context": "CREATE TABLE alarm ( id bigint, severity character varying(250), eqp_name character varying(250), from_site character varying(250), remote_eqp_name character varying(250), time_up timestamp without time zone, time_down timestamp without time zone, additional_text character varying(250), vendor character varying(250), raw_alarm_type character varying(250), device_name character varying(250), device_type character varying(250), tt_id character varying(250), ems_name character varying(250), time_cleared timestamp without time zone );\nCREATE TABLE alarm_label ( id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250) );\nCREATE VIEW v_alarms AS SELECT a.id AS alarm_id, a.severity, a.eqp_name, a.from_site, a.remote_eqp_name, a.time_up, a.time_down, l.slogan AS description, a.additional_text, a.vendor, a.raw_alarm_type AS alarm_type, a.device_name, a.device_type, l.domain_id AS domain, a.tt_id, a.ems_name, a.time_cleared AS ts_cleared FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO alarm (id, severity, eqp_name) VALUES (701, 'critical', 'EQP-XYZ');\nINSERT INTO alarm_label (id, slogan, domain_id) VALUES (701, 'High Temp', 'Network');"}
{"sql_prompt": "What is the average assignment count for incidents in the 'Hardware' category?", "sql": "SELECT AVG(assignment_count) FROM incident WHERE category = 'Hardware';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), category character varying(100), assignment_count integer);\nINSERT INTO incident (incident_number, category, assignment_count) VALUES ('INC00301', 'Hardware', 3);\nINSERT INTO incident (incident_number, category, assignment_count) VALUES ('INC00302', 'Software', 1);\nINSERT INTO incident (incident_number, category, assignment_count) VALUES ('INC00303', 'Hardware', 5);"}
{"sql_prompt": "List the equipment short names and their locations from the equipment details table.", "sql": "SELECT \"SHORT_NAME\", \"LOCATION\" FROM equipment_details;", "sql_context": "CREATE TABLE equipment_details (index bigint, \"SHORT_NAME\" text, \"LOCATION\" text);\nINSERT INTO equipment_details (index, \"SHORT_NAME\", \"LOCATION\") VALUES (1, 'RTR-01', 'Data Center A');\nINSERT INTO equipment_details (index, \"SHORT_NAME\", \"LOCATION\") VALUES (2, 'SW-01', 'Floor 3 Closet');"}
{"sql_prompt": "Show network elements that are routers and their vendor names.", "sql": "SELECT \"NODE_NAME\", \"VENDOR_NAME\" FROM network_elements WHERE \"ELEMENT_CLASS_DESC\" = 'Router';", "sql_context": "CREATE TABLE network_elements (index bigint, \"NODE_NAME\" text, \"VENDOR_NAME\" text, \"ELEMENT_CLASS_DESC\" text);\nINSERT INTO network_elements (index, \"NODE_NAME\", \"VENDOR_NAME\", \"ELEMENT_CLASS_DESC\") VALUES (1, 'core-rtr-1', 'Cisco', 'Router');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"VENDOR_NAME\", \"ELEMENT_CLASS_DESC\") VALUES (2, 'access-sw-1', 'Juniper', 'Switch');"}
{"sql_prompt": "Find the total number of distinct sites listed in the outage table.", "sql": "SELECT COUNT(DISTINCT site_id) FROM outage;", "sql_context": "CREATE TABLE outage (outage_id integer, site_id character varying(50));\nINSERT INTO outage (outage_id, site_id) VALUES (1, 'SiteA');\nINSERT INTO outage (outage_id, site_id) VALUES (2, 'SiteB');\nINSERT INTO outage (outage_id, site_id) VALUES (3, 'SiteA');"}
{"sql_prompt": "Get the details of alarms (ID, severity, additional text) whose additional text contains the word 'power'.", "sql": "SELECT id, severity, additional_text FROM alarm WHERE additional_text LIKE '%power%';", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), additional_text character varying(250));\nINSERT INTO alarm (id, severity, additional_text) VALUES (801, 'critical', 'Primary power supply failed');\nINSERT INTO alarm (id, severity, additional_text) VALUES (802, 'warning', 'High temperature reading');\nINSERT INTO alarm (id, severity, additional_text) VALUES (803, 'major', 'Redundant power unit offline');"}
{"sql_prompt": "List the cable system name and type for systems connecting 'SiteA' and 'SiteB'.", "sql": "SELECT \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\" FROM cable_system WHERE (\"SITE_A_ID\" = 'SiteA' AND \"SITE_B_ID\" = 'SiteB') OR (\"SITE_A_ID\" = 'SiteB' AND \"SITE_B_ID\" = 'SiteA');", "sql_context": "CREATE TABLE cable_system (index bigint, \"CABLE_SYSTEM_NAME\" text, \"CABLE_TYPE\" text, \"SITE_A_ID\" text, \"SITE_B_ID\" text);\nINSERT INTO cable_system (index, \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\", \"SITE_A_ID\", \"SITE_B_ID\") VALUES (1, 'Sys-AB-1', 'Fiber', 'SiteA', 'SiteB');\nINSERT INTO cable_system (index, \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\", \"SITE_A_ID\", \"SITE_B_ID\") VALUES (2, 'Sys-AC-1', 'Copper', 'SiteA', 'SiteC');"}
{"sql_prompt": "Find the incident number and the time it took to resolve (resolved time - created date) for resolved incidents.", "sql": "SELECT incident_number, (resolved - created_date) AS resolution_time FROM incident WHERE resolved IS NOT NULL;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), created_date timestamp without time zone, resolved timestamp without time zone);\nINSERT INTO incident (incident_number, created_date, resolved) VALUES ('INC00401', '2023-10-26 10:00:00', '2023-10-26 14:30:00');\nINSERT INTO incident (incident_number, created_date, resolved) VALUES ('INC00402', '2023-10-27 09:00:00', NULL);"}
{"sql_prompt": "Show the PE name and status for Mobile PEs associated with VLAN ID 100.", "sql": "SELECT \"PE_NAME\", \"PE_STATUS\" FROM mobile_pe WHERE \"VLAN_ID\" = 100;", "sql_context": "CREATE TABLE mobile_pe (index bigint, \"VLAN_ID\" double precision, \"PE_NAME\" text, \"PE_STATUS\" text);\nINSERT INTO mobile_pe (index, \"VLAN_ID\", \"PE_NAME\", \"PE_STATUS\") VALUES (1, 100, 'PE-Router-1', 'Active');\nINSERT INTO mobile_pe (index, \"VLAN_ID\", \"PE_NAME\", \"PE_STATUS\") VALUES (2, 200, 'PE-Router-2', 'Active');"}
{"sql_prompt": "List distinct vendors from the network elements table, ordered alphabetically.", "sql": "SELECT DISTINCT \"VENDOR_NAME\" FROM network_elements ORDER BY \"VENDOR_NAME\" ASC;", "sql_context": "CREATE TABLE network_elements (index bigint, \"VENDOR_NAME\" text);\nINSERT INTO network_elements (index, \"VENDOR_NAME\") VALUES (1, 'Cisco');\nINSERT INTO network_elements (index, \"VENDOR_NAME\") VALUES (2, 'Juniper');\nINSERT INTO network_elements (index, \"VENDOR_NAME\") VALUES (3, 'Cisco');"}
{"sql_prompt": "What is the maximum repeated count for any alarm?", "sql": "SELECT MAX(repeated_count) FROM alarm;", "sql_context": "CREATE TABLE alarm (id bigint, repeated_count integer);\nINSERT INTO alarm (id, repeated_count) VALUES (901, 5);\nINSERT INTO alarm (id, repeated_count) VALUES (902, 15);\nINSERT INTO alarm (id, repeated_count) VALUES (903, 2);"}
{"sql_prompt": "Show the card name and status code for cards in shelf 'Shelf-1'.", "sql": "SELECT \"CARD_NAME\", \"CARD_STATUS_CODE\" FROM rmm_equipment_details WHERE \"SHELF_NAME\" = 'Shelf-1';", "sql_context": "CREATE TABLE rmm_equipment_details (\"SHELF_NAME\" text, \"CARD_NAME\" text, \"CARD_STATUS_CODE\" text);\nINSERT INTO rmm_equipment_details (\"SHELF_NAME\", \"CARD_NAME\", \"CARD_STATUS_CODE\") VALUES ('Shelf-1', 'LineCard-1', 'ACTIVE');\nINSERT INTO rmm_equipment_details (\"SHELF_NAME\", \"CARD_NAME\", \"CARD_STATUS_CODE\") VALUES ('Shelf-2', 'MgmtCard-1', 'STANDBY');"}
{"sql_prompt": "Find the service name and status for services with access type 'Fiber'.", "sql": "SELECT \"SERVICE_NAME\", \"STATUS\" FROM service WHERE \"ACCESS_TYPE\" = 'Fiber';", "sql_context": "CREATE TABLE service (\"SERVICE_ID\" text, \"SERVICE_NAME\" text, \"STATUS\" text, \"ACCESS_TYPE\" text);\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"STATUS\", \"ACCESS_TYPE\") VALUES ('Svc001', 'Business Internet 1G', 'Active', 'Fiber');\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"STATUS\", \"ACCESS_TYPE\") VALUES ('Svc002', 'VoIP Service', 'Active', 'Copper');"}
{"sql_prompt": "Get the alarm ID and the user ID who acknowledged the alarm (ack_user_id) for alarms acknowledged by 'user123'.", "sql": "SELECT id, ack_user_id FROM alarm WHERE ack_user_id = 'user123';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250));\nINSERT INTO alarm (id, ack_user_id) VALUES (1001, 'user123');\nINSERT INTO alarm (id, ack_user_id) VALUES (1002, 'admin');\nINSERT INTO alarm (id, ack_user_id) VALUES (1003, 'user123');"}
{"sql_prompt": "Show site ID and start time for outages that are currently in 'Investigating' status.", "sql": "SELECT site_id, ts_start_disruption FROM outage WHERE status = 'Investigating';", "sql_context": "CREATE TABLE outage (outage_id integer, site_id character varying(50), ts_start_disruption timestamp without time zone, status character varying(50));\nINSERT INTO outage (outage_id, site_id, ts_start_disruption, status) VALUES (10, 'SiteC', '2023-10-27 11:00:00', 'Investigating');\nINSERT INTO outage (outage_id, site_id, ts_start_disruption, status) VALUES (11, 'SiteD', '2023-10-27 10:00:00', 'Resolved');"}
{"sql_prompt": "List the incident number, category, and subcategory (level1) for incidents created after '2023-10-01'.", "sql": "SELECT incident_number, category, level1 FROM incident WHERE created_date > '2023-10-01';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), category character varying(100), level1 character varying(100), created_date timestamp without time zone);\nINSERT INTO incident (incident_number, category, level1, created_date) VALUES ('INC00501', 'Network', 'Connectivity', '2023-10-15 08:00:00');\nINSERT INTO incident (incident_number, category, level1, created_date) VALUES ('INC00502', 'Software', 'Application Error', '2023-09-20 14:00:00');"}
{"sql_prompt": "Find the equipment name (eqp_name) and vendor for alarms associated with trouble ticket 'TT12345'.", "sql": "SELECT eqp_name, vendor FROM alarm WHERE tt_id = 'TT12345';", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), vendor character varying(250), tt_id character varying(250));\nINSERT INTO alarm (id, eqp_name, vendor, tt_id) VALUES (1101, 'Router-A1', 'Cisco', 'TT12345');\nINSERT INTO alarm (id, eqp_name, vendor, tt_id) VALUES (1102, 'Switch-B2', 'Juniper', 'TT67890');"}
{"sql_prompt": "Show the count of network elements grouped by their activity status code.", "sql": "SELECT \"ACTIVITY_STATUS_CODE\", COUNT(*) AS element_count FROM network_elements GROUP BY \"ACTIVITY_STATUS_CODE\";", "sql_context": "CREATE TABLE network_elements (index bigint, \"NODE_NAME\" text, \"ACTIVITY_STATUS_CODE\" text);\nINSERT INTO network_elements (index, \"NODE_NAME\", \"ACTIVITY_STATUS_CODE\") VALUES (1, 'node1', 'ACTIVE');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"ACTIVITY_STATUS_CODE\") VALUES (2, 'node2', 'INACTIVE');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"ACTIVITY_STATUS_CODE\") VALUES (3, 'node3', 'ACTIVE');"}
{"sql_prompt": "List the short name and description for leased lines whose description contains 'backup'.", "sql": "SELECT \"SHORT_NAME\", \"DESCRIPTION\" FROM leased_lines WHERE \"DESCRIPTION\" ILIKE '%backup%';", "sql_context": "CREATE TABLE leased_lines (index bigint, \"SHORT_NAME\" text, \"DESCRIPTION\" text);\nINSERT INTO leased_lines (index, \"SHORT_NAME\", \"DESCRIPTION\") VALUES (1, 'LL-001', 'Primary link to Branch Office');\nINSERT INTO leased_lines (index, \"SHORT_NAME\", \"DESCRIPTION\") VALUES (2, 'LL-002', 'Backup MPLS circuit');"}
{"sql_prompt": "Find the alarm ID and time cleared for alarms where the time cleared is not null and the severity is 'major'.", "sql": "SELECT id, time_cleared FROM alarm WHERE time_cleared IS NOT NULL AND severity = 'major';", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), time_cleared timestamp without time zone);\nINSERT INTO alarm (id, severity, time_cleared) VALUES (1201, 'major', '2023-10-26 15:00:00');\nINSERT INTO alarm (id, severity, time_cleared) VALUES (1202, 'critical', '2023-10-26 16:00:00');\nINSERT INTO alarm (id, severity, time_cleared) VALUES (1203, 'major', NULL);"}
{"sql_prompt": "Count the number of alarms for each severity level.", "sql": "SELECT severity, COUNT(*) FROM alarm GROUP BY severity;", "sql_context": "CREATE TABLE alarm (severity character varying(250));\nINSERT INTO alarm (severity) VALUES ('Critical');\nINSERT INTO alarm (severity) VALUES ('Major');\nINSERT INTO alarm (severity) VALUES ('Critical');"}
{"sql_prompt": "Show all alarms raised between '2023-10-26 08:00:00' and '2023-10-26 12:00:00'.", "sql": "SELECT id, device_name, severity, time_raised FROM alarm WHERE time_raised BETWEEN '2023-10-26 08:00:00' AND '2023-10-26 12:00:00';", "sql_context": "CREATE TABLE alarm (id bigint, device_name character varying(250), severity character varying(250), time_raised timestamp without time zone);\nINSERT INTO alarm (id, device_name, severity, time_raised) VALUES (1, 'RouterA', 'Major', '2023-10-26 09:15:00');\nINSERT INTO alarm (id, device_name, severity, time_raised) VALUES (2, 'SwitchB', 'Critical', '2023-10-26 13:00:00');"}
{"sql_prompt": "What are the unique device types that have generated alarms?", "sql": "SELECT DISTINCT device_type FROM alarm WHERE device_type IS NOT NULL;", "sql_context": "CREATE TABLE alarm (device_type character varying(250));\nINSERT INTO alarm (device_type) VALUES ('Router');\nINSERT INTO alarm (device_type) VALUES ('Switch');\nINSERT INTO alarm (device_type) VALUES ('Router');"}
{"sql_prompt": "Display the ID, severity, and acknowledgment time for alarms acknowledged by user 'john.doe'.", "sql": "SELECT id, severity, time_ack FROM alarm WHERE ack_user_id = 'john.doe';", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), time_ack timestamp without time zone, ack_user_id character varying(250));\nINSERT INTO alarm (id, severity, time_ack, ack_user_id) VALUES (101, 'Warning', '2023-10-27 10:00:00', 'john.doe');\nINSERT INTO alarm (id, severity, time_ack, ack_user_id) VALUES (102, 'Minor', NULL, 'jane.smith');"}
{"sql_prompt": "Get the description (slogan) for alarm ID 12345 from the alarms view.", "sql": "SELECT description FROM v_alarms WHERE alarm_id = 12345;", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), eqp_name character varying(250), from_site character varying(250), remote_eqp_name character varying(250), time_up double precision, time_down timestamp without time zone, additional_text character varying(250), vendor character varying(250), raw_alarm_type character varying(250), device_name character varying(250), device_type character varying(250), tt_id character varying(250), ems_name character varying(250), time_cleared timestamp without time zone);\nCREATE TABLE alarm_label (id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250));\nCREATE VIEW v_alarms AS SELECT a.id AS alarm_id, a.severity, a.eqp_name, a.from_site, a.remote_eqp_name, a.time_up, a.time_down, l.slogan AS description, a.additional_text, a.vendor, a.raw_alarm_type AS alarm_type, a.device_name, a.device_type, l.domain_id AS domain, a.tt_id, a.ems_name, a.time_cleared AS ts_cleared FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO alarm (id, severity) VALUES (12345, 'Critical');\nINSERT INTO alarm_label (id, slogan) VALUES (12345, 'Link Down Event');"}
{"sql_prompt": "List incidents with an impact level greater than 3.", "sql": "SELECT incident_number, short_description, impact FROM incident WHERE impact > 3;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), short_description text, impact integer);\nINSERT INTO incident (incident_number, short_description, impact) VALUES ('INC001', 'Network Outage', 4);\nINSERT INTO incident (incident_number, short_description, impact) VALUES ('INC002', 'Slow Performance', 2);"}
{"sql_prompt": "Show the incident number and affected service for incidents created by 'Operator B'.", "sql": "SELECT incident_number, affected_service FROM incident WHERE opened_by = 'Operator B';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), opened_by character varying(100));\nINSERT INTO incident (incident_number, affected_service, opened_by) VALUES ('INC003', 'Email Service', 'Operator A');\nINSERT INTO incident (incident_number, affected_service, opened_by) VALUES ('INC004', 'VPN Access', 'Operator B');"}
{"sql_prompt": "How many incidents are there in each category?", "sql": "SELECT category, COUNT(*) FROM incident GROUP BY category;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), category character varying(100));\nINSERT INTO incident (incident_number, category) VALUES ('INC005', 'Network');\nINSERT INTO incident (incident_number, category) VALUES ('INC006', 'Software');\nINSERT INTO incident (incident_number, category) VALUES ('INC007', 'Network');"}
{"sql_prompt": "Find all sites located in 'Rome'.", "sql": "SELECT \"SITE_ID\", \"SITE_NAME\", \"ADDRESS\" FROM sites WHERE \"CITY_NAME\" = 'Rome';", "sql_context": "CREATE TABLE sites (\"SITE_ID\" text, \"SITE_NAME\" text, \"ADDRESS\" text, \"CITY_NAME\" text);\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"ADDRESS\", \"CITY_NAME\") VALUES ('S001', 'Rome Central Office', 'Via Roma 1', 'Rome');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"ADDRESS\", \"CITY_NAME\") VALUES ('S002', 'Milan Hub', 'Via Milano 2', 'Milan');"}
{"sql_prompt": "Get the location and description for equipment with short name 'EQP-XYZ'.", "sql": "SELECT \"LOCATION\", \"DESCRIPTION\" FROM equipment_details WHERE \"SHORT_NAME\" = 'EQP-XYZ';", "sql_context": "CREATE TABLE equipment_details (index bigint, \"SHORT_NAME\" text, \"LOCATION\" text, \"DESCRIPTION\" text);\nINSERT INTO equipment_details (index, \"SHORT_NAME\", \"LOCATION\", \"DESCRIPTION\") VALUES (1, 'EQP-XYZ', 'Rack 5, Shelf 2', 'Core Router Interface Card');\nINSERT INTO equipment_details (index, \"SHORT_NAME\", \"LOCATION\", \"DESCRIPTION\") VALUES (2, 'EQP-ABC', 'Rack 1, Shelf 1', 'Main Power Supply');"}
{"sql_prompt": "What are the IP addresses associated with node 'CORE-RTR-01'?", "sql": "SELECT \"IP_ADDRESS\", \"CODE\" FROM equipment_ip_address WHERE \"NODE_NAME\" = 'CORE-RTR-01';", "sql_context": "CREATE TABLE equipment_ip_address (index bigint, \"NODE_NAME\" text, \"CODE\" text, \"IP_ADDRESS\" text);\nINSERT INTO equipment_ip_address (index, \"NODE_NAME\", \"CODE\", \"IP_ADDRESS\") VALUES (1, 'CORE-RTR-01', 'GE0/0/1', '192.168.1.1');\nINSERT INTO equipment_ip_address (index, \"NODE_NAME\", \"CODE\", \"IP_ADDRESS\") VALUES (2, 'CORE-RTR-01', 'LO0', '10.0.0.1');"}
{"sql_prompt": "List network elements of type 'ROUTER' provided by vendor 'VendorX'.", "sql": "SELECT \"NODE_NAME\", \"MODEL_CODE\", \"LOCATION\" FROM network_elements WHERE \"NETWORK_ELEMENT_TYPE_CODE\" = 'ROUTER' AND \"VENDOR_NAME\" = 'VendorX';", "sql_context": "CREATE TABLE network_elements (index bigint, \"NODE_NAME\" text, \"NETWORK_ELEMENT_TYPE_CODE\" text, \"VENDOR_NAME\" text, \"MODEL_CODE\" text, \"LOCATION\" text);\nINSERT INTO network_elements (index, \"NODE_NAME\", \"NETWORK_ELEMENT_TYPE_CODE\", \"VENDOR_NAME\", \"MODEL_CODE\", \"LOCATION\") VALUES (10, 'RTR01', 'ROUTER', 'VendorX', 'ModelA', 'SiteA');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"NETWORK_ELEMENT_TYPE_CODE\", \"VENDOR_NAME\", \"MODEL_CODE\", \"LOCATION\") VALUES (11, 'SW01', 'SWITCH', 'VendorY', 'ModelB', 'SiteA');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"NETWORK_ELEMENT_TYPE_CODE\", \"VENDOR_NAME\", \"MODEL_CODE\", \"LOCATION\") VALUES (12, 'RTR02', 'ROUTER', 'VendorX', 'ModelC', 'SiteB');"}
{"sql_prompt": "Show outage details for site 'SITE-ABC'.", "sql": "SELECT outage_id, ts_start_disruption, status, equipment_list FROM outage WHERE site_id = 'SITE-ABC';", "sql_context": "CREATE TABLE outage (outage_id integer, site_id character varying(50), ts_start_disruption timestamp without time zone, equipment_list character varying(100), status character varying(50));\nINSERT INTO outage (outage_id, site_id, ts_start_disruption, equipment_list, status) VALUES (1, 'SITE-ABC', '2023-10-26 14:00:00', 'Router1, Switch2', 'Ongoing');\nINSERT INTO outage (outage_id, site_id, ts_start_disruption, equipment_list, status) VALUES (2, 'SITE-XYZ', '2023-10-25 10:00:00', 'Server3', 'Resolved');"}
{"sql_prompt": "List the names and IDs of cable systems that are of type 'Submarine'.", "sql": "SELECT \"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\" FROM cable_system WHERE \"CABLE_TYPE\" = 'Submarine';", "sql_context": "CREATE TABLE cable_system (index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SYSTEM_NAME\" text, \"CABLE_TYPE\" text);\nINSERT INTO cable_system (index, \"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\") VALUES (1, 'CS001', 'Atlantic Link', 'Submarine');\nINSERT INTO cable_system (index, \"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\") VALUES (2, 'CS002', 'Metro Ring', 'Terrestrial');"}
{"sql_prompt": "Find alarms containing the keyword 'Power Supply Failure'.", "sql": "SELECT id, device_name, time_raised FROM alarm WHERE keyword = 'Power Supply Failure';", "sql_context": "CREATE TABLE alarm (id bigint, device_name character varying(250), time_raised timestamp without time zone, keyword character varying(250));\nINSERT INTO alarm (id, device_name, time_raised, keyword) VALUES (201, 'ServerX', '2023-10-27 11:00:00', 'Power Supply Failure');\nINSERT INTO alarm (id, device_name, time_raised, keyword) VALUES (202, 'SwitchY', '2023-10-27 11:05:00', 'Link Down');"}
{"sql_prompt": "List the primary keys of alarms that are currently inhibited.", "sql": "SELECT alarm_primary_key FROM alarm WHERE inhibit = TRUE;", "sql_context": "CREATE TABLE alarm (alarm_primary_key character varying(250), inhibit boolean);\nINSERT INTO alarm (alarm_primary_key, inhibit) VALUES ('ALM-001', TRUE);\nINSERT INTO alarm (alarm_primary_key, inhibit) VALUES ('ALM-002', FALSE);"}
{"sql_prompt": "Show the 10 most recently raised critical alarms.", "sql": "SELECT id, device_name, time_raised FROM alarm WHERE severity = 'Critical' ORDER BY time_raised DESC LIMIT 10;", "sql_context": "CREATE TABLE alarm (id bigint, device_name character varying(250), time_raised timestamp without time zone, severity character varying(250));\nINSERT INTO alarm (id, device_name, time_raised, severity) VALUES (301, 'RouterA', '2023-10-27 14:00:00', 'Critical');\nINSERT INTO alarm (id, device_name, time_raised, severity) VALUES (302, 'FirewallB', '2023-10-27 14:05:00', 'Critical');\nINSERT INTO alarm (id, device_name, time_raised, severity) VALUES (303, 'SwitchC', '2023-10-27 13:55:00', 'Critical');"}
{"sql_prompt": "Display the alarm ID, device name, and alarm description (slogan) for alarms related to 'RouterX'.", "sql": "SELECT a.id, a.device_name, l.slogan FROM alarm a JOIN alarm_label l ON a.id = l.id WHERE a.device_name = 'RouterX';", "sql_context": "CREATE TABLE alarm (id bigint, device_name character varying(250));\nCREATE TABLE alarm_label (id bigint, slogan character varying(250));\nINSERT INTO alarm (id, device_name) VALUES (401, 'RouterX');\nINSERT INTO alarm (id, device_name) VALUES (402, 'SwitchY');\nINSERT INTO alarm_label (id, slogan) VALUES (401, 'High CPU Usage');\nINSERT INTO alarm_label (id, slogan) VALUES (402, 'Port Flapping');"}
{"sql_prompt": "Find incidents assigned to the 'Network Support' group that have a status indicating they are still open (e.g., status = 1 for 'Open').", "sql": "SELECT incident_number, short_description, assigned_to FROM incident WHERE assignment_group = 'Network Support' AND status = 1;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), short_description text, assigned_to character varying(100), assignment_group character varying(100), status integer);\nINSERT INTO incident (incident_number, short_description, assigned_to, assignment_group, status) VALUES ('INC008', 'Cannot connect to VPN', 'tech1', 'Network Support', 1);\nINSERT INTO incident (incident_number, short_description, assigned_to, assignment_group, status) VALUES ('INC009', 'Printer issue', 'tech2', 'Desktop Support', 1);\nINSERT INTO incident (incident_number, short_description, assigned_to, assignment_group, status) VALUES ('INC010', 'Router down', 'tech1', 'Network Support', 5); -- Assuming 5 means Resolved/Closed"}
{"sql_prompt": "Count the number of alarms reported for each equipment name (eqp_name).", "sql": "SELECT eqp_name, COUNT(*) AS alarm_count FROM alarm WHERE eqp_name IS NOT NULL GROUP BY eqp_name ORDER BY alarm_count DESC;", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250));\nINSERT INTO alarm (id, eqp_name) VALUES (501, 'EQP-A');\nINSERT INTO alarm (id, eqp_name) VALUES (502, 'EQP-B');\nINSERT INTO alarm (id, eqp_name) VALUES (503, 'EQP-A');"}
{"sql_prompt": "What are the distinct areas where alarms have occurred?", "sql": "SELECT DISTINCT area FROM alarm WHERE area IS NOT NULL;", "sql_context": "CREATE TABLE alarm (id bigint, area character varying(250));\nINSERT INTO alarm (id, area) VALUES (601, 'North Region');\nINSERT INTO alarm (id, area) VALUES (602, 'South Region');\nINSERT INTO alarm (id, area) VALUES (603, 'North Region');"}
{"sql_prompt": "Show the IDs and comments for alarms that have comments recorded.", "sql": "SELECT id, comments FROM alarm WHERE comments IS NOT NULL AND comments != '';", "sql_context": "CREATE TABLE alarm (id bigint, comments text);\nINSERT INTO alarm (id, comments) VALUES (701, 'Investigating link flap.');\nINSERT INTO alarm (id, comments) VALUES (702, NULL);\nINSERT INTO alarm (id, comments) VALUES (703, 'Power cycle resolved the issue.');"}
{"sql_prompt": "What is the average repeated count for alarms with 'Critical' severity?", "sql": "SELECT AVG(repeated_count) FROM alarm WHERE severity = 'Critical';", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), repeated_count integer);\nINSERT INTO alarm (id, severity, repeated_count) VALUES (801, 'Critical', 5);\nINSERT INTO alarm (id, severity, repeated_count) VALUES (802, 'Major', 2);\nINSERT INTO alarm (id, severity, repeated_count) VALUES (803, 'Critical', 10);"}
{"sql_prompt": "Show the severity, description, and time cleared for alarms from equipment 'EQP-123' using the v_alarms view.", "sql": "SELECT severity, description, ts_cleared FROM v_alarms WHERE eqp_name = 'EQP-123';", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), eqp_name character varying(250), from_site character varying(250), remote_eqp_name character varying(250), time_up double precision, time_down timestamp without time zone, additional_text character varying(250), vendor character varying(250), raw_alarm_type character varying(250), device_name character varying(250), device_type character varying(250), tt_id character varying(250), ems_name character varying(250), time_cleared timestamp without time zone);\nCREATE TABLE alarm_label (id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250));\nCREATE VIEW v_alarms AS SELECT a.id AS alarm_id, a.severity, a.eqp_name, a.from_site, a.remote_eqp_name, a.time_up, a.time_down, l.slogan AS description, a.additional_text, a.vendor, a.raw_alarm_type AS alarm_type, a.device_name, a.device_type, l.domain_id AS domain, a.tt_id, a.ems_name, a.time_cleared AS ts_cleared FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO alarm (id, severity, eqp_name, time_cleared) VALUES (901, 'Major', 'EQP-123', '2023-10-27 15:00:00');\nINSERT INTO alarm (id, severity, eqp_name, time_cleared) VALUES (902, 'Warning', 'EQP-456', NULL);\nINSERT INTO alarm_label (id, slogan) VALUES (901, 'Interface Down');\nINSERT INTO alarm_label (id, slogan) VALUES (902, 'High Temperature');"}
{"sql_prompt": "Find the node name and location of network elements with model code 'ASR9K'.", "sql": "SELECT \"NODE_NAME\", \"LOCATION\" FROM network_elements WHERE \"MODEL_CODE\" = 'ASR9K';", "sql_context": "CREATE TABLE network_elements (index bigint, \"NODE_NAME\" text, \"MODEL_CODE\" text, \"LOCATION\" text);\nINSERT INTO network_elements (index, \"NODE_NAME\", \"MODEL_CODE\", \"LOCATION\") VALUES (20, 'CoreRtr1', 'ASR9K', 'DataCenter1');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"MODEL_CODE\", \"LOCATION\") VALUES (21, 'EdgeRtr2', 'MX480', 'POP2');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"MODEL_CODE\", \"LOCATION\") VALUES (22, 'CoreRtr3', 'ASR9K', 'DataCenter2');"}
{"sql_prompt": "List all cable segment IDs that belong to cable system 'CS-NORTH-RING'.", "sql": "SELECT \"CABLE_SEGMENT_ID\" FROM cl_clsegm_rel WHERE \"CABLE_SYSTEM_ID\" = 'CS-NORTH-RING';", "sql_context": "CREATE TABLE cl_clsegm_rel (index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SEGMENT_ID\" text);\nINSERT INTO cl_clsegm_rel (index, \"CABLE_SYSTEM_ID\", \"CABLE_SEGMENT_ID\") VALUES (1, 'CS-NORTH-RING', 'SEG-N-01');\nINSERT INTO cl_clsegm_rel (index, \"CABLE_SYSTEM_ID\", \"CABLE_SEGMENT_ID\") VALUES (2, 'CS-SOUTH-LINK', 'SEG-S-01');\nINSERT INTO cl_clsegm_rel (index, \"CABLE_SYSTEM_ID\", \"CABLE_SEGMENT_ID\") VALUES (3, 'CS-NORTH-RING', 'SEG-N-02');"}
{"sql_prompt": "Show incident numbers and descriptions for incidents closed between '2023-10-20 00:00:00' and '2023-10-27 23:59:59'.", "sql": "SELECT incident_number, description FROM incident WHERE closed BETWEEN '2023-10-20 00:00:00' AND '2023-10-27 23:59:59';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), description text, closed timestamp without time zone);\nINSERT INTO incident (incident_number, description, closed) VALUES ('INC011', 'User login issue resolved', '2023-10-22 10:30:00');\nINSERT INTO incident (incident_number, description, closed) VALUES ('INC012', 'Network switch rebooted', '2023-10-19 15:00:00');\nINSERT INTO incident (incident_number, description, closed) VALUES ('INC013', 'Database backup failed', NULL);"}
{"sql_prompt": "Find alarms that have not yet been cleared (time_cleared is null).", "sql": "SELECT id, device_name, severity, time_raised FROM alarm WHERE time_cleared IS NULL;", "sql_context": "CREATE TABLE alarm (id bigint, device_name character varying(250), severity character varying(250), time_raised timestamp without time zone, time_cleared timestamp without time zone);\nINSERT INTO alarm (id, device_name, severity, time_raised, time_cleared) VALUES (1001, 'DeviceA', 'Major', '2023-10-27 09:00:00', NULL);\nINSERT INTO alarm (id, device_name, severity, time_raised, time_cleared) VALUES (1002, 'DeviceB', 'Warning', '2023-10-26 11:00:00', '2023-10-26 11:30:00');"}
{"sql_prompt": "Get the name and description of services with status 'Active'.", "sql": "SELECT \"SERVICE_NAME\", \"SERVICE_ID\" FROM service WHERE \"STATUS\" = 'Active';", "sql_context": "CREATE TABLE service (\"SERVICE_ID\" text, \"SERVICE_NAME\" text, \"STATUS\" text);\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"STATUS\") VALUES ('SVC001', 'Premium Internet Access', 'Active');\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"STATUS\") VALUES ('SVC002', 'VoIP Line', 'Inactive');\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"STATUS\") VALUES ('SVC003', 'MPLS VPN', 'Active');"}
{"sql_prompt": "List alarm IDs, severities, and the city name of the site they originated from, for alarms originating from sites in 'Milan'.", "sql": "SELECT a.id, a.severity, s.\"CITY_NAME\" FROM alarm a JOIN sites s ON a.from_site = s.\"SITE_ID\" WHERE s.\"CITY_NAME\" = 'Milan';", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), from_site character varying(250));\nCREATE TABLE sites (\"SITE_ID\" text, \"CITY_NAME\" text);\nINSERT INTO alarm (id, severity, from_site) VALUES (1101, 'Critical', 'SITE-MIL-01');\nINSERT INTO alarm (id, severity, from_site) VALUES (1102, 'Major', 'SITE-ROM-01');\nINSERT INTO alarm (id, severity, from_site) VALUES (1103, 'Warning', 'SITE-MIL-02');\nINSERT INTO sites (\"SITE_ID\", \"CITY_NAME\") VALUES ('SITE-MIL-01', 'Milan');\nINSERT INTO sites (\"SITE_ID\", \"CITY_NAME\") VALUES ('SITE-ROM-01', 'Rome');\nINSERT INTO sites (\"SITE_ID\", \"CITY_NAME\") VALUES ('SITE-MIL-02', 'Milan');"}
{"sql_prompt": "Find all critical alarms, showing their ID, equipment name, and time raised.", "sql": "SELECT id, eqp_name, time_raised FROM alarm WHERE severity = 'critical';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_name, time_raised, severity) VALUES (101, 'RouterA', '2023-10-26 10:00:00', 'critical');\nINSERT INTO alarm (id, eqp_name, time_raised, severity) VALUES (102, 'SwitchB', '2023-10-26 11:00:00', 'major');"}
{"sql_prompt": "What are the 5 most recently raised alarms? Show their ID and the time they were raised.", "sql": "SELECT id, time_raised FROM alarm ORDER BY time_raised DESC LIMIT 5;", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, time_raised) VALUES (201, '2023-10-27 09:00:00');\nINSERT INTO alarm (id, time_raised) VALUES (202, '2023-10-27 09:15:00');"}
{"sql_prompt": "Get the alarm ID, severity, and slogan description for alarms related to domain 'NetworkInfra'.", "sql": "SELECT a.id, a.severity, l.slogan FROM alarm a JOIN alarm_label l ON a.id = l.id WHERE l.domain_id = 'NetworkInfra';", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250));\nCREATE TABLE alarm_label (id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250));\nINSERT INTO alarm (id, severity) VALUES (301, 'major');\nINSERT INTO alarm_label (id, domain_id, slogan) VALUES (301, 'NetworkInfra', 'Connectivity Issue Detected');\nINSERT INTO alarm (id, severity) VALUES (302, 'warning');\nINSERT INTO alarm_label (id, domain_id, slogan) VALUES (302, 'Application', 'High CPU Usage');"}
{"sql_prompt": "Count the number of alarms for each severity level.", "sql": "SELECT severity, COUNT(*) AS alarm_count FROM alarm GROUP BY severity;", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, severity) VALUES (401, 'critical');\nINSERT INTO alarm (id, severity) VALUES (402, 'major');\nINSERT INTO alarm (id, severity) VALUES (403, 'critical');"}
{"sql_prompt": "How many alarms have been acknowledged by the user 'jsmith'?", "sql": "SELECT COUNT(*) FROM alarm WHERE ack_user_id = 'jsmith';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, ack_user_id) VALUES (501, 'jsmith');\nINSERT INTO alarm (id, ack_user_id) VALUES (502, 'another_user');\nINSERT INTO alarm (id, ack_user_id) VALUES (503, 'jsmith');"}
{"sql_prompt": "Calculate the average assignment count for incidents belonging to the 'Network' category.", "sql": "SELECT AVG(assignment_count) FROM incident WHERE category = 'Network';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), assigned_to character varying(100), assignment_count integer, business_service character varying(100), caller character varying(100), category character varying(100), closed timestamp without time zone, configuration_item character varying(100), contact_type character varying(100), correlation_id character varying(100), created_date timestamp without time zone, customer_type character varying(100), description text, domain character varying(100), end_fault timestamp without time zone, end_inefficiency timestamp without time zone, expected_resolution_date timestamp without time zone, first_configuration_item character varying(100), impact integer, in_validation boolean, incident_alert boolean, incident_parent character varying(100), inefficiency boolean, inefficiency_type character varying(100), level1 character varying(100), level2 character varying(100), level3 character varying(100), level4 character varying(100), msisdn character varying(100), network_element_type character varying(100), opened_by character varying(100), originating_system character varying(100), owner_group character varying(100), process_cause character varying(100), product_type character varying(100), reopen_count integer, resolution_code character varying(100), resolution_entity character varying(100), resolved timestamp without time zone, root_cause character varying(100), sequence_id integer, short_description text, source character varying(100), start_fault timestamp without time zone, start_inefficiency timestamp without time zone, status integer, updated timestamp without time zone, updated_by character varying(100), urgency integer, vendor character varying(100), wfm_id character varying(100));\nINSERT INTO incident (incident_number, category, assignment_count) VALUES ('INC001', 'Network', 3);\nINSERT INTO incident (incident_number, category, assignment_count) VALUES ('INC002', 'Software', 1);\nINSERT INTO incident (incident_number, category, assignment_count) VALUES ('INC003', 'Network', 5);"}
{"sql_prompt": "List alarms with 'major' severity that were raised between midnight and noon on October 1st, 2023. Include their ID, equipment name, severity, and time raised.", "sql": "SELECT id, eqp_name, severity, time_raised FROM alarm WHERE time_raised >= '2023-10-01 00:00:00' AND time_raised < '2023-10-01 12:00:00' AND severity = 'major';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_name, severity, time_raised) VALUES (701, 'SwitchC', 'major', '2023-10-01 08:30:00');\nINSERT INTO alarm (id, eqp_name, severity, time_raised) VALUES (702, 'FirewallX', 'major', '2023-10-01 14:00:00');"}
{"sql_prompt": "Find incident numbers, short descriptions, and assignees for incidents assigned to 'Jane Doe' with status code 3.", "sql": "SELECT incident_number, short_description, assigned_to FROM incident WHERE assigned_to = 'Jane Doe' AND status = 3;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), assigned_to character varying(100), assignment_count integer, business_service character varying(100), caller character varying(100), category character varying(100), closed timestamp without time zone, configuration_item character varying(100), contact_type character varying(100), correlation_id character varying(100), created_date timestamp without time zone, customer_type character varying(100), description text, domain character varying(100), end_fault timestamp without time zone, end_inefficiency timestamp without time zone, expected_resolution_date timestamp without time zone, first_configuration_item character varying(100), impact integer, in_validation boolean, incident_alert boolean, incident_parent character varying(100), inefficiency boolean, inefficiency_type character varying(100), level1 character varying(100), level2 character varying(100), level3 character varying(100), level4 character varying(100), msisdn character varying(100), network_element_type character varying(100), opened_by character varying(100), originating_system character varying(100), owner_group character varying(100), process_cause character varying(100), product_type character varying(100), reopen_count integer, resolution_code character varying(100), resolution_entity character varying(100), resolved timestamp without time zone, root_cause character varying(100), sequence_id integer, short_description text, source character varying(100), start_fault timestamp without time zone, start_inefficiency timestamp without time zone, status integer, updated timestamp without time zone, updated_by character varying(100), urgency integer, vendor character varying(100), wfm_id character varying(100));\nINSERT INTO incident (incident_number, short_description, assigned_to, status) VALUES ('INC004', 'Cannot connect to VPN', 'Jane Doe', 3);\nINSERT INTO incident (incident_number, short_description, assigned_to, status) VALUES ('INC005', 'Email sync issue', 'John Smith', 3);\nINSERT INTO incident (incident_number, short_description, assigned_to, status) VALUES ('INC006', 'Server down', 'Jane Doe', 2);"}
{"sql_prompt": "Search for alarms where the equipment name contains the substring 'Switch'. Show the alarm ID, equipment name, and severity.", "sql": "SELECT id, eqp_name, severity FROM alarm WHERE eqp_name LIKE '%Switch%';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_name, severity) VALUES (901, 'CoreSwitch-1', 'major');\nINSERT INTO alarm (id, eqp_name, severity) VALUES (902, 'Router-Main', 'critical');\nINSERT INTO alarm (id, eqp_name, severity) VALUES (903, 'AccessSwitch-Floor3', 'warning');"}
{"sql_prompt": "Show alarms that have not yet been acknowledged (where ack_user_id is NULL). Display the ID, equipment name, and time raised.", "sql": "SELECT id, eqp_name, time_raised FROM alarm WHERE ack_user_id IS NULL;", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_name, time_raised, ack_user_id) VALUES (1001, 'ServerX', '2023-10-27 10:00:00', NULL);\nINSERT INTO alarm (id, eqp_name, time_raised, ack_user_id) VALUES (1002, 'ServerY', '2023-10-27 10:05:00', 'admin');"}
{"sql_prompt": "List incidents categorized as either 'Hardware' or 'Software'. Show the incident number, category, and short description.", "sql": "SELECT incident_number, category, short_description FROM incident WHERE category IN ('Hardware', 'Software');", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), assigned_to character varying(100), assignment_count integer, business_service character varying(100), caller character varying(100), category character varying(100), closed timestamp without time zone, configuration_item character varying(100), contact_type character varying(100), correlation_id character varying(100), created_date timestamp without time zone, customer_type character varying(100), description text, domain character varying(100), end_fault timestamp without time zone, end_inefficiency timestamp without time zone, expected_resolution_date timestamp without time zone, first_configuration_item character varying(100), impact integer, in_validation boolean, incident_alert boolean, incident_parent character varying(100), inefficiency boolean, inefficiency_type character varying(100), level1 character varying(100), level2 character varying(100), level3 character varying(100), level4 character varying(100), msisdn character varying(100), network_element_type character varying(100), opened_by character varying(100), originating_system character varying(100), owner_group character varying(100), process_cause character varying(100), product_type character varying(100), reopen_count integer, resolution_code character varying(100), resolution_entity character varying(100), resolved timestamp without time zone, root_cause character varying(100), sequence_id integer, short_description text, source character varying(100), start_fault timestamp without time zone, start_inefficiency timestamp without time zone, status integer, updated timestamp without time zone, updated_by character varying(100), urgency integer, vendor character varying(100), wfm_id character varying(100));\nINSERT INTO incident (incident_number, category, short_description) VALUES ('INC1101', 'Hardware', 'Disk failure on server Z');\nINSERT INTO incident (incident_number, category, short_description) VALUES ('INC1102', 'Network', 'Latency issues');\nINSERT INTO incident (incident_number, category, short_description) VALUES ('INC1103', 'Software', 'Application crash');"}
{"sql_prompt": "Find the names of cable systems and the names of their connected sites (Site A and Site B) for systems that utilize cable segment 'CSG-001'.", "sql": "SELECT cs.\"CABLE_SYSTEM_NAME\", s1.\"SITE_NAME\" AS site_a_name, s2.\"SITE_NAME\" AS site_b_name FROM cable_system cs JOIN cl_clsegm_rel rel ON cs.\"CABLE_SYSTEM_ID\" = rel.\"CABLE_SYSTEM_ID\" JOIN sites s1 ON cs.\"SITE_A_ID\" = s1.\"SITE_ID\" JOIN sites s2 ON cs.\"SITE_B_ID\" = s2.\"SITE_ID\" WHERE rel.\"CABLE_SEGMENT_ID\" = 'CSG-001';", "sql_context": "CREATE TABLE cable_system (index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SYSTEM_NAME\" text, \"CABLE_TYPE\" text, \"SITE_A_ID\" text, \"SITE_B_ID\" text);\nCREATE TABLE cl_clsegm_rel (index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SEGMENT_ID\" text);\nCREATE TABLE sites (\"SITE_ID\" text, \"SITE_NAME\" text, \"LONGITUDE\" text, \"LATITUDE\" text, \"DISTRICT\" text, \"ADDRESS\" text, \"CIVICO\" text, \"CITY_NAME\" text, \"SITE_TYPE\" text, \"CUSTOMER\" text, \"SHORT_NAME\" text, \"ALTERNATIVE_NAME\" text, \"PROVINCE\" text, \"BUILDING_UNIQUE_ID\" text, \"CODICE_ISTAT\" double precision, \"REGIONE\" text, \"PROVINCIA\" text);\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\") VALUES ('SiteA', 'London Central Office');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\") VALUES ('SiteB', 'Manchester Hub');\nINSERT INTO cable_system (\"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\", \"SITE_A_ID\", \"SITE_B_ID\") VALUES ('CSYS-01', 'UK-Backbone-1', 'SiteA', 'SiteB');\nINSERT INTO cl_clsegm_rel (\"CABLE_SYSTEM_ID\", \"CABLE_SEGMENT_ID\") VALUES ('CSYS-01', 'CSG-001');\nINSERT INTO cl_clsegm_rel (\"CABLE_SYSTEM_ID\", \"CABLE_SEGMENT_ID\") VALUES ('CSYS-01', 'CSG-002');"}
{"sql_prompt": "List alarms (ID, equipment name, severity) that have an associated incident ticket (tt_id links to incident_number).", "sql": "SELECT a.id, a.eqp_name, a.severity, a.tt_id FROM alarm a JOIN incident i ON a.tt_id = i.incident_number;", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), severity character varying(250), tt_id character varying(250));\nCREATE TABLE incident (incident_number character varying(50), short_description text);\nINSERT INTO alarm (id, eqp_name, severity, tt_id) VALUES (1301, 'RouterA', 'critical', 'INC1301');\nINSERT INTO alarm (id, eqp_name, severity, tt_id) VALUES (1302, 'SwitchB', 'major', NULL);\nINSERT INTO incident (incident_number, short_description) VALUES ('INC1301', 'Router A down');\nINSERT INTO incident (incident_number, short_description) VALUES ('INC1303', 'Other issue');"}
{"sql_prompt": "Show equipment names (eqp_name) that have generated more than 5 alarms, along with the count of alarms for each.", "sql": "SELECT eqp_name, COUNT(*) AS alarm_count FROM alarm GROUP BY eqp_name HAVING COUNT(*) > 5;", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_name) VALUES (1, 'EQP-001');\nINSERT INTO alarm (id, eqp_name) VALUES (2, 'EQP-001');\nINSERT INTO alarm (id, eqp_name) VALUES (3, 'EQP-001');\nINSERT INTO alarm (id, eqp_name) VALUES (4, 'EQP-001');\nINSERT INTO alarm (id, eqp_name) VALUES (5, 'EQP-001');\nINSERT INTO alarm (id, eqp_name) VALUES (6, 'EQP-001');\nINSERT INTO alarm (id, eqp_name) VALUES (7, 'EQP-002');"}
{"sql_prompt": "Get the alarm ID, severity, and description from the v_alarms view for alarms with 'warning' severity.", "sql": "SELECT alarm_id, severity, description FROM v_alarms WHERE severity = 'warning';", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), eqp_name character varying(250), from_site character varying(250), remote_eqp_name character varying(250), time_up timestamp without time zone, time_down timestamp without time zone, additional_text character varying(250), vendor character varying(250), raw_alarm_type character varying(250), device_name character varying(250), device_type character varying(250), tt_id character varying(250), ems_name character varying(250), time_cleared timestamp without time zone);\nCREATE TABLE alarm_label (id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250));\nCREATE VIEW v_alarms AS SELECT a.id AS alarm_id, a.severity, a.eqp_name, a.from_site, a.remote_eqp_name, a.time_up, a.time_down, l.slogan AS description, a.additional_text, a.vendor, a.raw_alarm_type AS alarm_type, a.device_name, a.device_type, l.domain_id AS domain, a.tt_id, a.ems_name, a.time_cleared AS ts_cleared FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO alarm (id, severity) VALUES (1501, 'warning');\nINSERT INTO alarm_label (id, slogan) VALUES (1501, 'High Temperature Alert');\nINSERT INTO alarm (id, severity) VALUES (1502, 'critical');\nINSERT INTO alarm_label (id, slogan) VALUES (1502, 'Link Down');"}
{"sql_prompt": "Find all inhibited alarms, showing their ID and equipment name.", "sql": "SELECT id, eqp_name FROM alarm WHERE inhibit = TRUE;", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_name, inhibit) VALUES (1601, 'SensorA', TRUE);\nINSERT INTO alarm (id, eqp_name, inhibit) VALUES (1602, 'SensorB', FALSE);"}
{"sql_prompt": "What is the IP address associated with the network element named 'CoreRouter-NYC'?", "sql": "SELECT T1.\"IP_ADDRESS\" FROM equipment_ip_address AS T1 JOIN network_elements AS T2 ON T1.\"NETWORK_ELEMENT_ID\" = T2.\"NETWORK_ELEMENT_ID\" WHERE T2.\"NODE_NAME\" = 'CoreRouter-NYC';", "sql_context": "CREATE TABLE equipment_ip_address (index bigint, \"NODE_NAME\" text, \"MODEL_CODE\" text, \"NETWORK_ELEMENT_ID\" bigint, \"CODE\" text, \"IP_ADDRESS\" text);\nCREATE TABLE network_elements (index bigint, \"LOCATION\" text, \"NODE_NAME\" text, \"NETWORK_ELEMENT_ID\" bigint, \"NETWORK_ELEMENT_TYPE_CODE\" text, \"SERIAL_NUMBER\" bigint, \"ACTIVITY_STATUS_CODE\" text, \"MODEL_CODE\" text, \"VENDOR_NAME\" text, \"ELEMENT_CLASS_CODE\" text, \"ELEMENT_CLASS_DESC\" text, \"CARD_TYPE_ID\" double precision, \"SYSTEM_NAME\" text, \"LOCATION_SHORT_NAME\" text);\nINSERT INTO network_elements (\"NETWORK_ELEMENT_ID\", \"NODE_NAME\") VALUES (17001, 'CoreRouter-NYC');\nINSERT INTO network_elements (\"NETWORK_ELEMENT_ID\", \"NODE_NAME\") VALUES (17002, 'EdgeSwitch-LA');\nINSERT INTO equipment_ip_address (\"NETWORK_ELEMENT_ID\", \"IP_ADDRESS\") VALUES (17001, '10.0.0.1');\nINSERT INTO equipment_ip_address (\"NETWORK_ELEMENT_ID\", \"IP_ADDRESS\") VALUES (17002, '192.168.1.1');"}
{"sql_prompt": "List alarms that were cleared within one hour of being raised. Show the alarm ID, equipment name, time raised, and time cleared.", "sql": "SELECT id, eqp_name, time_raised, time_cleared FROM alarm WHERE time_cleared IS NOT NULL AND time_raised IS NOT NULL AND time_cleared <= time_raised + interval '1 hour';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_name, time_raised, time_cleared) VALUES (1801, 'EQP-FAST', '2023-10-27 11:00:00', '2023-10-27 11:45:00');\nINSERT INTO alarm (id, eqp_name, time_raised, time_cleared) VALUES (1802, 'EQP-SLOW', '2023-10-27 12:00:00', '2023-10-27 14:00:00');"}
{"sql_prompt": "What is the PE name (mobile_pe) associated with VLAN ID 100?", "sql": "SELECT T1.\"PE_NAME\" FROM mobile_pe AS T1 WHERE T1.\"VLAN_ID\" = 100 LIMIT 1;", "sql_context": "CREATE TABLE mobile_pe (index bigint, \"VLAN_ID\" double precision, \"LOGICAL_LINK_ID\" double precision, \"PE_ID\" bigint, \"PE_NAME\" text, \"PE_STATUS\" text, \"ENTITY_TYPE\" text, \"POSITION\" bigint);\nINSERT INTO mobile_pe (\"VLAN_ID\", \"PE_NAME\") VALUES (100, 'PE-Router-01');\nINSERT INTO mobile_pe (\"VLAN_ID\", \"PE_NAME\") VALUES (200, 'PE-Router-02');"}
{"sql_prompt": "Find alarms where the comments field contains the phrase 'intermittent issue'. Show the alarm ID and the comments.", "sql": "SELECT id, comments FROM alarm WHERE comments LIKE '%intermittent issue%';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, comments) VALUES (2001, 'User reports intermittent issue with connection.');\nINSERT INTO alarm (id, comments) VALUES (2002, 'Link is down.');"}
{"sql_prompt": "List all unique vendor names recorded in the alarm table.", "sql": "SELECT DISTINCT vendor FROM alarm WHERE vendor IS NOT NULL;", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, vendor) VALUES (2101, 'VendorA');\nINSERT INTO alarm (id, vendor) VALUES (2102, 'VendorB');\nINSERT INTO alarm (id, vendor) VALUES (2103, 'VendorA');"}
{"sql_prompt": "How many incidents currently have a status code different from 6 (assuming 6 represents 'Closed')?", "sql": "SELECT COUNT(*) FROM incident WHERE status != 6;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), assigned_to character varying(100), assignment_count integer, business_service character varying(100), caller character varying(100), category character varying(100), closed timestamp without time zone, configuration_item character varying(100), contact_type character varying(100), correlation_id character varying(100), created_date timestamp without time zone, customer_type character varying(100), description text, domain character varying(100), end_fault timestamp without time zone, end_inefficiency timestamp without time zone, expected_resolution_date timestamp without time zone, first_configuration_item character varying(100), impact integer, in_validation boolean, incident_alert boolean, incident_parent character varying(100), inefficiency boolean, inefficiency_type character varying(100), level1 character varying(100), level2 character varying(100), level3 character varying(100), level4 character varying(100), msisdn character varying(100), network_element_type character varying(100), opened_by character varying(100), originating_system character varying(100), owner_group character varying(100), process_cause character varying(100), product_type character varying(100), reopen_count integer, resolution_code character varying(100), resolution_entity character varying(100), resolved timestamp without time zone, root_cause character varying(100), sequence_id integer, short_description text, source character varying(100), start_fault timestamp without time zone, start_inefficiency timestamp without time zone, status integer, updated timestamp without time zone, updated_by character varying(100), urgency integer, vendor character varying(100), wfm_id character varying(100));\nINSERT INTO incident (incident_number, status) VALUES ('INC2201', 2);\nINSERT INTO incident (incident_number, status) VALUES ('INC2202', 6);\nINSERT INTO incident (incident_number, status) VALUES ('INC2203', 3);"}
{"sql_prompt": "What is the location of the equipment identified by the short name 'EQP-A1'?", "sql": "SELECT \"LOCATION\" FROM equipment_details WHERE \"SHORT_NAME\" = 'EQP-A1';", "sql_context": "CREATE TABLE equipment_details (index bigint, \"SHORT_NAME\" text, \"LOCATION\" text, \"TRAIL_NAME\" text, \"NUMERO_TD\" text, \"CODE\" text, \"DESCRIPTION\" text);\nINSERT INTO equipment_details (\"SHORT_NAME\", \"LOCATION\") VALUES ('EQP-A1', 'Data Center Floor 1 Rack 2');\nINSERT INTO equipment_details (\"SHORT_NAME\", \"LOCATION\") VALUES ('EQP-B2', 'Office Building West Wing');"}
{"sql_prompt": "List all outages that are not marked as 'Closed'. Show the outage ID, site ID, and equipment list.", "sql": "SELECT outage_id, site_id, equipment_list FROM outage WHERE status != 'Closed';", "sql_context": "CREATE TABLE outage (outage_id integer, site_id character varying(50), ts_start_disruption timestamp without time zone, equipment_list character varying(100), status character varying(50), username character varying(100), latitude numeric(9,6), longitude numeric(9,6));\nINSERT INTO outage (outage_id, site_id, equipment_list, status) VALUES (1, 'SiteX', 'Router1, Switch2', 'Investigating');\nINSERT INTO outage (outage_id, site_id, equipment_list, status) VALUES (2, 'SiteY', 'Server3', 'Closed');"}
{"sql_prompt": "Show the names of all services that have a status of 'ACTIVE'.", "sql": "SELECT \"SERVICE_NAME\" FROM service WHERE \"STATUS\" = 'ACTIVE';", "sql_context": "CREATE TABLE service (\"SERVICE_ID\" text, \"HIERARCHY_ID\" double precision, \"SERVICE_NAME\" text, \"STATUS\" text, \"A_NETWORK_ADDRESS\" text, \"B_NETWORK_ADDRESS\" text, \"V52_NUMBER\" double precision, \"LINK_ID\" double precision, \"NA_IMA_GROUP\" text, \"CIRCUIT_COUNT\" bigint, \"CHANNEL_COUNT\" double precision, \"MARKET_DESTINATION\" text, \"ACCESS_TYPE\" text, \"ASSOCIATED_SERVICE\" text, \"PROVISIONING_STATUS\" text, \"CLI\" text, \"DOMAIN\" bigint);\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"STATUS\") VALUES ('Svc001', 'VPN Access', 'ACTIVE');\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"STATUS\") VALUES ('Svc002', 'Legacy System', 'INACTIVE');\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"STATUS\") VALUES ('Svc003', 'Internet Access', 'ACTIVE');"}
{"sql_prompt": "Get the name and status of the Ethernet path associated with VLAN ID 500.", "sql": "SELECT T1.\"NAME\", T1.\"PATH_ETHERNET_STATUS\" FROM path_ethernet AS T1 JOIN path_ethernet_serv AS T2 ON T1.\"PATH_ETHERNET_ID\" = T2.\"PATH_ETHERNET_ID\" WHERE T2.\"VLAN_IN_ID\" = 500 LIMIT 1;", "sql_context": "CREATE TABLE path_ethernet (index bigint, \"VLAN_ID\" bigint, \"VPLS_ID\" double precision, \"PATH_ETHERNET_ID\" bigint, \"PATH_ETHERNET_STATUS\" text, \"NAME\" text);\nCREATE TABLE path_ethernet_serv (index bigint, \"PATH_ETHERNET_ID\" bigint, \"PATH_ETHERNET_SECTION_ID\" bigint, \"POSITION_IN_PATH\" bigint, \"VLAN_IN_ID\" bigint, \"VPLS_ID\" double precision, \"VLAN_OUT_ID\" bigint);\nINSERT INTO path_ethernet (\"PATH_ETHERNET_ID\", \"NAME\", \"PATH_ETHERNET_STATUS\") VALUES (5001, 'Path-A-to-B', 'UP');\nINSERT INTO path_ethernet_serv (\"PATH_ETHERNET_ID\", \"VLAN_IN_ID\") VALUES (5001, 500);\nINSERT INTO path_ethernet (\"PATH_ETHERNET_ID\", \"NAME\", \"PATH_ETHERNET_STATUS\") VALUES (6001, 'Path-C-to-D', 'DOWN');\nINSERT INTO path_ethernet_serv (\"PATH_ETHERNET_ID\", \"VLAN_IN_ID\") VALUES (6001, 600);"}
{"sql_prompt": "Show the top 3 most repeated 'critical' or 'major' alarms that are not currently inhibited. Display the ID, equipment name, severity, and repeated count, ordered by the highest repeated count first.", "sql": "SELECT id, eqp_name, severity, repeated_count FROM alarm WHERE severity IN ('critical', 'major') AND (inhibit IS NULL OR inhibit = FALSE) ORDER BY repeated_count DESC NULLS LAST LIMIT 3;", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_name, severity, repeated_count, inhibit) VALUES (2701, 'RouterA', 'critical', 150, false);\nINSERT INTO alarm (id, eqp_name, severity, repeated_count, inhibit) VALUES (2702, 'SwitchB', 'major', 120, false);\nINSERT INTO alarm (id, eqp_name, severity, repeated_count, inhibit) VALUES (2703, 'FirewallX', 'critical', 200, true);\nINSERT INTO alarm (id, eqp_name, severity, repeated_count, inhibit) VALUES (2704, 'ServerY', 'major', 90, false);\nINSERT INTO alarm (id, eqp_name, severity, repeated_count, inhibit) VALUES (2705, 'RouterC', 'critical', 180, false);"}
{"sql_prompt": "List the site IDs and site names for all sites located in the 'Central' district.", "sql": "SELECT \"SITE_ID\", \"SITE_NAME\" FROM sites WHERE \"DISTRICT\" = 'Central';", "sql_context": "CREATE TABLE sites (\"SITE_ID\" text, \"SITE_NAME\" text, \"LONGITUDE\" text, \"LATITUDE\" text, \"DISTRICT\" text, \"ADDRESS\" text, \"CIVICO\" text, \"CITY_NAME\" text, \"SITE_TYPE\" text, \"CUSTOMER\" text, \"SHORT_NAME\" text, \"ALTERNATIVE_NAME\" text, \"PROVINCE\" text, \"BUILDING_UNIQUE_ID\" text, \"CODICE_ISTAT\" double precision, \"REGIONE\" text, \"PROVINCIA\" text);\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"DISTRICT\") VALUES ('LON-01', 'London Main', 'Central');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"DISTRICT\") VALUES ('MAN-01', 'Manchester North', 'North');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"DISTRICT\") VALUES ('BIR-01', 'Birmingham Exchange', 'Central');"}
{"sql_prompt": "Show all alarm IDs and their equipment names. Also include the corresponding incident number (tt_id) if an incident ticket exists for the alarm.", "sql": "SELECT a.id, a.eqp_name, i.incident_number FROM alarm a LEFT JOIN incident i ON a.tt_id = i.incident_number;", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), severity character varying(250), tt_id character varying(250));\nCREATE TABLE incident (incident_number character varying(50), short_description text);\nINSERT INTO alarm (id, eqp_name, tt_id) VALUES (2901, 'RouterA', 'INC2901');\nINSERT INTO alarm (id, eqp_name, tt_id) VALUES (2902, 'SwitchB', NULL);\nINSERT INTO alarm (id, eqp_name, tt_id) VALUES (2903, 'ServerC', 'INC2903');\nINSERT INTO incident (incident_number, short_description) VALUES ('INC2901', 'Router A issue');\nINSERT INTO incident (incident_number, short_description) VALUES ('INC2903', 'Server C unresponsive');"}
{"sql_prompt": "How many distinct alarms were raised today?", "sql": "SELECT count(DISTINCT id) FROM alarm WHERE date_trunc('day', time_raised) = date_trunc('day', CURRENT_TIMESTAMP);", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, time_raised) VALUES (3001, NOW());\nINSERT INTO alarm (id, time_raised) VALUES (3002, NOW() - interval '2 days');\nINSERT INTO alarm (id, time_raised) VALUES (3003, NOW() - interval '1 hour');"}
{"sql_prompt": "Show me all alarms with 'Critical' severity.", "sql": "SELECT id, eqp_name, severity FROM alarm WHERE severity = 'Critical';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_name, severity) VALUES (101, 'RouterA', 'Critical');\nINSERT INTO alarm (id, eqp_name, severity) VALUES (102, 'SwitchB', 'Major');"}
{"sql_prompt": "What are the distinct device types present in the alarms table?", "sql": "SELECT DISTINCT device_type FROM alarm;", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, device_type) VALUES (201, 'Router');\nINSERT INTO alarm (id, device_type) VALUES (202, 'Switch');"}
{"sql_prompt": "Count the number of alarms for each severity level.", "sql": "SELECT severity, COUNT(*) FROM alarm GROUP BY severity;", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, severity) VALUES (301, 'Critical');\nINSERT INTO alarm (id, severity) VALUES (302, 'Major');"}
{"sql_prompt": "List the incident numbers and their descriptions that were created after January 1st, 2023.", "sql": "SELECT incident_number, description FROM incident WHERE created_date > '2023-01-01 00:00:00';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), assigned_to character varying(100), assignment_count integer, business_service character varying(100), caller character varying(100), category character varying(100), closed timestamp without time zone, configuration_item character varying(100), contact_type character varying(100), correlation_id character varying(100), created_date timestamp without time zone, customer_type character varying(100), description text, domain character varying(100), end_fault timestamp without time zone, end_inefficiency timestamp without time zone, expected_resolution_date timestamp without time zone, first_configuration_item character varying(100), impact integer, in_validation boolean, incident_alert boolean, incident_parent character varying(100), inefficiency boolean, inefficiency_type character varying(100), level1 character varying(100), level2 character varying(100), level3 character varying(100), level4 character varying(100), msisdn character varying(100), network_element_type character varying(100), opened_by character varying(100), originating_system character varying(100), owner_group character varying(100), process_cause character varying(100), product_type character varying(100), reopen_count integer, resolution_code character varying(100), resolution_entity character varying(100), resolved timestamp without time zone, root_cause character varying(100), sequence_id integer, short_description text, source character varying(100), start_fault timestamp without time zone, start_inefficiency timestamp without time zone, status integer, updated timestamp without time zone, updated_by character varying(100), urgency integer, vendor character varying(100), wfm_id character varying(100));\nINSERT INTO incident (incident_number, description, created_date) VALUES ('INC001', 'Network outage reported', '2023-02-15 10:00:00');\nINSERT INTO incident (incident_number, description, created_date) VALUES ('INC002', 'Service degradation', '2022-12-20 09:30:00');"}
{"sql_prompt": "Find the alarm ID, severity, and description (slogan) for alarms associated with domain 'Network'.", "sql": "SELECT T1.id, T1.severity, T2.slogan FROM alarm AS T1 INNER JOIN alarm_label AS T2 ON T1.id = T2.id WHERE T2.domain_id = 'Network';", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250));\nCREATE TABLE alarm_label (id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250));\nINSERT INTO alarm (id, severity) VALUES (401, 'Major');\nINSERT INTO alarm_label (id, domain_id, slogan) VALUES (401, 'Network', 'Link Down');\nINSERT INTO alarm (id, severity) VALUES (402, 'Minor');\nINSERT INTO alarm_label (id, domain_id, slogan) VALUES (402, 'System', 'CPU High');"}
{"sql_prompt": "Show the site ID and equipment list for outages with status 'Active'.", "sql": "SELECT site_id, equipment_list FROM outage WHERE status = 'Active';", "sql_context": "CREATE TABLE outage (outage_id integer, site_id character varying(50), ts_start_disruption timestamp without time zone, equipment_list character varying(100), status character varying(50), username character varying(100), latitude numeric(9,6), longitude numeric(9,6));\nINSERT INTO outage (outage_id, site_id, equipment_list, status) VALUES (501, 'SiteA', 'Router1, Switch2', 'Active');\nINSERT INTO outage (outage_id, site_id, equipment_list, status) VALUES (502, 'SiteB', 'Server3', 'Resolved');"}
{"sql_prompt": "What are the names and types of cable systems?", "sql": "SELECT \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\" FROM cable_system;", "sql_context": "CREATE TABLE cable_system (index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SYSTEM_NAME\" text, \"CABLE_TYPE\" text, \"SITE_A_ID\" text, \"SITE_B_ID\" text);\nINSERT INTO cable_system (index, \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\") VALUES (1, 'Transatlantic-1', 'Submarine');\nINSERT INTO cable_system (index, \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\") VALUES (2, 'MetroFiber-X', 'Terrestrial');"}
{"sql_prompt": "List all alarms raised between '2023-05-01' and '2023-05-10'. Show the alarm id and time raised.", "sql": "SELECT id, time_raised FROM alarm WHERE time_raised >= '2023-05-01 00:00:00' AND time_raised < '2023-05-10 00:00:00';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, time_raised) VALUES (601, '2023-05-02 11:30:00');\nINSERT INTO alarm (id, time_raised) VALUES (602, '2023-05-11 09:00:00');"}
{"sql_prompt": "Show the top 5 alarms with the highest repeated count.", "sql": "SELECT id, eqp_name, repeated_count FROM alarm ORDER BY repeated_count DESC LIMIT 5;", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_name, repeated_count) VALUES (701, 'SensorX', 150);\nINSERT INTO alarm (id, eqp_name, repeated_count) VALUES (702, 'GatewayY', 200);"}
{"sql_prompt": "Find the node name and IP address for equipment with model code 'CSR-1000V'.", "sql": "SELECT T1.\"NODE_NAME\", T1.\"IP_ADDRESS\" FROM equipment_ip_address AS T1 WHERE T1.\"MODEL_CODE\" = 'CSR-1000V';", "sql_context": "CREATE TABLE equipment_ip_address (index bigint, \"NODE_NAME\" text, \"MODEL_CODE\" text, \"NETWORK_ELEMENT_ID\" bigint, \"CODE\" text, \"IP_ADDRESS\" text);\nINSERT INTO equipment_ip_address (index, \"NODE_NAME\", \"MODEL_CODE\", \"IP_ADDRESS\") VALUES (1, 'CoreRouter1', 'CSR-1000V', '10.0.0.1');\nINSERT INTO equipment_ip_address (index, \"NODE_NAME\", \"MODEL_CODE\", \"IP_ADDRESS\") VALUES (2, 'EdgeSwitch2', 'NEXUS-9K', '192.168.1.1');"}
{"sql_prompt": "List all incidents assigned to 'Network Team Alpha' that are not yet closed.", "sql": "SELECT incident_number, short_description, created_date FROM incident WHERE assignment_group = 'Network Team Alpha' AND closed IS NULL;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), assigned_to character varying(100), assignment_count integer, business_service character varying(100), caller character varying(100), category character varying(100), closed timestamp without time zone, configuration_item character varying(100), contact_type character varying(100), correlation_id character varying(100), created_date timestamp without time zone, customer_type character varying(100), description text, domain character varying(100), end_fault timestamp without time zone, end_inefficiency timestamp without time zone, expected_resolution_date timestamp without time zone, first_configuration_item character varying(100), impact integer, in_validation boolean, incident_alert boolean, incident_parent character varying(100), inefficiency boolean, inefficiency_type character varying(100), level1 character varying(100), level2 character varying(100), level3 character varying(100), level4 character varying(100), msisdn character varying(100), network_element_type character varying(100), opened_by character varying(100), originating_system character varying(100), owner_group character varying(100), process_cause character varying(100), product_type character varying(100), reopen_count integer, resolution_code character varying(100), resolution_entity character varying(100), resolved timestamp without time zone, root_cause character varying(100), sequence_id integer, short_description text, source character varying(100), start_fault timestamp without time zone, start_inefficiency timestamp without time zone, status integer, updated timestamp without time zone, updated_by character varying(100), urgency integer, vendor character varying(100), wfm_id character varying(100));\nINSERT INTO incident (incident_number, short_description, assignment_group, closed) VALUES ('INC003', 'Router flapping', 'Network Team Alpha', NULL);\nINSERT INTO incident (incident_number, short_description, assignment_group, closed) VALUES ('INC004', 'Firewall config issue', 'Network Team Alpha', '2023-06-01 14:00:00');"}
{"sql_prompt": "Show the equipment name, from site, and alarm description (slogan) using the v_alarms view.", "sql": "SELECT eqp_name, from_site, description FROM v_alarms LIMIT 10;", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), from_site character varying(250), severity character varying(250), time_up timestamp without time zone, time_down timestamp without time zone, additional_text character varying(250), vendor character varying(250), raw_alarm_type character varying(250), device_name character varying(250), device_type character varying(250), tt_id character varying(250), ems_name character varying(250), time_cleared timestamp without time zone);\nCREATE TABLE alarm_label (id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250));\nCREATE VIEW v_alarms AS SELECT a.id AS alarm_id, a.severity, a.eqp_name, a.from_site, a.remote_eqp_name, a.time_up, a.time_down, l.slogan AS description, a.additional_text, a.vendor, a.raw_alarm_type AS alarm_type, a.device_name, a.device_type, l.domain_id AS domain, a.tt_id, a.ems_name, a.time_cleared AS ts_cleared FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO alarm (id, eqp_name, from_site) VALUES (801, 'EquipX', 'SiteY');\nINSERT INTO alarm_label (id, slogan) VALUES (801, 'Power Supply Failed');"}
{"sql_prompt": "Get the site name and address for sites located in 'Rome'.", "sql": "SELECT \"SITE_NAME\", \"ADDRESS\" FROM sites WHERE \"CITY_NAME\" = 'Rome';", "sql_context": "CREATE TABLE sites (\"SITE_ID\" text, \"SITE_NAME\" text, \"LONGITUDE\" text, \"LATITUDE\" text, \"DISTRICT\" text, \"ADDRESS\" text, \"CIVICO\" text, \"CITY_NAME\" text, \"SITE_TYPE\" text, \"CUSTOMER\" text, \"SHORT_NAME\" text, \"ALTERNATIVE_NAME\" text, \"PROVINCE\" text, \"BUILDING_UNIQUE_ID\" text, \"CODICE_ISTAT\" double precision, \"REGIONE\" text, \"PROVINCIA\" text);\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"ADDRESS\", \"CITY_NAME\") VALUES ('S001', 'Rome Central Office', 'Via Roma 1', 'Rome');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"ADDRESS\", \"CITY_NAME\") VALUES ('S002', 'Milan Hub', 'Via Milano 2', 'Milan');"}
{"sql_prompt": "Show the network element ID, node name, and vendor for elements with activity status 'ACTIVE'.", "sql": "SELECT \"NETWORK_ELEMENT_ID\", \"NODE_NAME\", \"VENDOR_NAME\" FROM network_elements WHERE \"ACTIVITY_STATUS_CODE\" = 'ACTIVE';", "sql_context": "CREATE TABLE network_elements (index bigint, \"LOCATION\" text, \"NODE_NAME\" text, \"NETWORK_ELEMENT_ID\" bigint, \"NETWORK_ELEMENT_TYPE_CODE\" text, \"SERIAL_NUMBER\" bigint, \"ACTIVITY_STATUS_CODE\" text, \"MODEL_CODE\" text, \"VENDOR_NAME\" text, \"ELEMENT_CLASS_CODE\" text, \"ELEMENT_CLASS_DESC\" text, \"CARD_TYPE_ID\" double precision, \"SYSTEM_NAME\" text, \"LOCATION_SHORT_NAME\" text);\nINSERT INTO network_elements (index, \"NETWORK_ELEMENT_ID\", \"NODE_NAME\", \"VENDOR_NAME\", \"ACTIVITY_STATUS_CODE\") VALUES (1, 1001, 'Router_A', 'Cisco', 'ACTIVE');\nINSERT INTO network_elements (index, \"NETWORK_ELEMENT_ID\", \"NODE_NAME\", \"VENDOR_NAME\", \"ACTIVITY_STATUS_CODE\") VALUES (2, 1002, 'Switch_B', 'Juniper', 'INACTIVE');"}
{"sql_prompt": "List the service name and status for services with access type 'Fiber'.", "sql": "SELECT \"SERVICE_NAME\", \"STATUS\" FROM service WHERE \"ACCESS_TYPE\" = 'Fiber';", "sql_context": "CREATE TABLE service (\"SERVICE_ID\" text, \"HIERARCHY_ID\" double precision, \"SERVICE_NAME\" text, \"STATUS\" text, \"A_NETWORK_ADDRESS\" text, \"B_NETWORK_ADDRESS\" text, \"V52_NUMBER\" double precision, \"LINK_ID\" double precision, \"NA_IMA_GROUP\" text, \"CIRCUIT_COUNT\" bigint, \"CHANNEL_COUNT\" double precision, \"MARKET_DESTINATION\" text, \"ACCESS_TYPE\" text, \"ASSOCIATED_SERVICE\" text, \"PROVISIONING_STATUS\" text, \"CLI\" text, \"DOMAIN\" bigint);\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"STATUS\", \"ACCESS_TYPE\") VALUES ('SRV001', 'Corp VPN', 'Active', 'Fiber');\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"STATUS\", \"ACCESS_TYPE\") VALUES ('SRV002', 'Internet Access', 'Provisioning', 'DSL');"}
{"sql_prompt": "Find the number of incidents per category.", "sql": "SELECT category, COUNT(*) AS incident_count FROM incident GROUP BY category ORDER BY incident_count DESC;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), assigned_to character varying(100), assignment_count integer, business_service character varying(100), caller character varying(100), category character varying(100), closed timestamp without time zone, configuration_item character varying(100), contact_type character varying(100), correlation_id character varying(100), created_date timestamp without time zone, customer_type character varying(100), description text, domain character varying(100), end_fault timestamp without time zone, end_inefficiency timestamp without time zone, expected_resolution_date timestamp without time zone, first_configuration_item character varying(100), impact integer, in_validation boolean, incident_alert boolean, incident_parent character varying(100), inefficiency boolean, inefficiency_type character varying(100), level1 character varying(100), level2 character varying(100), level3 character varying(100), level4 character varying(100), msisdn character varying(100), network_element_type character varying(100), opened_by character varying(100), originating_system character varying(100), owner_group character varying(100), process_cause character varying(100), product_type character varying(100), reopen_count integer, resolution_code character varying(100), resolution_entity character varying(100), resolved timestamp without time zone, root_cause character varying(100), sequence_id integer, short_description text, source character varying(100), start_fault timestamp without time zone, start_inefficiency timestamp without time zone, status integer, updated timestamp without time zone, updated_by character varying(100), urgency integer, vendor character varying(100), wfm_id character varying(100));\nINSERT INTO incident (incident_number, category) VALUES ('INC005', 'Network');\nINSERT INTO incident (incident_number, category) VALUES ('INC006', 'Software');\nINSERT INTO incident (incident_number, category) VALUES ('INC007', 'Network');"}
{"sql_prompt": "Show alarms acknowledged by user 'admin'. List alarm ID and acknowledgment time.", "sql": "SELECT id, time_ack FROM alarm WHERE ack_user_id = 'admin';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, ack_user_id, time_ack) VALUES (901, 'admin', '2023-07-01 10:00:00');\nINSERT INTO alarm (id, ack_user_id, time_ack) VALUES (902, 'user1', '2023-07-01 11:00:00');"}
{"sql_prompt": "What is the average assignment count for incidents?", "sql": "SELECT AVG(assignment_count) FROM incident;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), assigned_to character varying(100), assignment_count integer, business_service character varying(100), caller character varying(100), category character varying(100), closed timestamp without time zone, configuration_item character varying(100), contact_type character varying(100), correlation_id character varying(100), created_date timestamp without time zone, customer_type character varying(100), description text, domain character varying(100), end_fault timestamp without time zone, end_inefficiency timestamp without time zone, expected_resolution_date timestamp without time zone, first_configuration_item character varying(100), impact integer, in_validation boolean, incident_alert boolean, incident_parent character varying(100), inefficiency boolean, inefficiency_type character varying(100), level1 character varying(100), level2 character varying(100), level3 character varying(100), level4 character varying(100), msisdn character varying(100), network_element_type character varying(100), opened_by character varying(100), originating_system character varying(100), owner_group character varying(100), process_cause character varying(100), product_type character varying(100), reopen_count integer, resolution_code character varying(100), resolution_entity character varying(100), resolved timestamp without time zone, root_cause character varying(100), sequence_id integer, short_description text, source character varying(100), start_fault timestamp without time zone, start_inefficiency timestamp without time zone, status integer, updated timestamp without time zone, updated_by character varying(100), urgency integer, vendor character varying(100), wfm_id character varying(100));\nINSERT INTO incident (incident_number, assignment_count) VALUES ('INC008', 3);\nINSERT INTO incident (incident_number, assignment_count) VALUES ('INC009', 5);"}
{"sql_prompt": "List the equipment short name and description from equipment_details.", "sql": "SELECT \"SHORT_NAME\", \"DESCRIPTION\" FROM equipment_details;", "sql_context": "CREATE TABLE equipment_details (index bigint, \"SHORT_NAME\" text, \"LOCATION\" text, \"TRAIL_NAME\" text, \"NUMERO_TD\" text, \"CODE\" text, \"DESCRIPTION\" text);\nINSERT INTO equipment_details (index, \"SHORT_NAME\", \"DESCRIPTION\") VALUES (1, 'RTR01', 'Core Router Site A');\nINSERT INTO equipment_details (index, \"SHORT_NAME\", \"DESCRIPTION\") VALUES (2, 'SW01', 'Access Switch Floor 1');"}
{"sql_prompt": "Show the cable segment name and status for segments of type 'Fiber Optic'.", "sql": "SELECT \"CABLE_SEGMENT_NAME\", \"STATUS\" FROM cablesegment WHERE \"CABLE_TYPE\" = 'Fiber Optic';", "sql_context": "CREATE TABLE cablesegment (index bigint, \"CABLE_SEGMENT_ID\" text, \"CABLE_SEGMENT_NAME\" text, \"CABLE_TYPE\" text, \"STATUS\" double precision, \"SITE_CABINET_A_ID\" text, \"SITE_CABINET_B_ID\" text, \"SYNTHETIC_NAME\" text);\nINSERT INTO cablesegment (index, \"CABLE_SEGMENT_NAME\", \"CABLE_TYPE\", \"STATUS\") VALUES (1, 'SegmentA-B', 'Fiber Optic', 1.0);\nINSERT INTO cablesegment (index, \"CABLE_SEGMENT_NAME\", \"CABLE_TYPE\", \"STATUS\") VALUES (2, 'SegmentC-D', 'Copper', 1.0);"}
{"sql_prompt": "Find the PE name and status for Mobile PEs associated with VLAN ID 100.", "sql": "SELECT \"PE_NAME\", \"PE_STATUS\" FROM mobile_pe WHERE \"VLAN_ID\" = 100;", "sql_context": "CREATE TABLE mobile_pe (index bigint, \"VLAN_ID\" double precision, \"LOGICAL_LINK_ID\" double precision, \"PE_ID\" bigint, \"PE_NAME\" text, \"PE_STATUS\" text, \"ENTITY_TYPE\" text, \"POSITION\" bigint);\nINSERT INTO mobile_pe (index, \"VLAN_ID\", \"PE_NAME\", \"PE_STATUS\") VALUES (1, 100, 'PE-Router-1', 'Active');\nINSERT INTO mobile_pe (index, \"VLAN_ID\", \"PE_NAME\", \"PE_STATUS\") VALUES (2, 200, 'PE-Router-2', 'Maintenance');"}
{"sql_prompt": "List network element names, models, and card types from RMM equipment details.", "sql": "SELECT \"NETWORK_ELEMENT_NAME\", \"NETWORK_ELEMENT_MODEL\", \"CARD_TYPE\" FROM rmm_equipment_details;", "sql_context": "CREATE TABLE rmm_equipment_details (\"NETWORK_ELEMENT_NAME\" text, \"NETWORK_ELEMENT_MODEL\" text, \"NODE_NAME\" text, \"SLOT_NAME\" text, \"SLOT_NUMBER\" double precision, \"SHELF_NAME\" text, \"SHELF_DESCRIPTION\" text, \"CARD_TYPE\" text, \"CARD_NAME\" text, \"VENDOR_CARD_CODE\" text, \"CARD_STATUS_CODE\" text, \"CARD_VENDOR_NAME\" text);\nINSERT INTO rmm_equipment_details (\"NETWORK_ELEMENT_NAME\", \"NETWORK_ELEMENT_MODEL\", \"CARD_TYPE\") VALUES ('CoreDevice1', 'ASR9K', 'Line Card');\nINSERT INTO rmm_equipment_details (\"NETWORK_ELEMENT_NAME\", \"NETWORK_ELEMENT_MODEL\", \"CARD_TYPE\") VALUES ('EdgeDevice2', 'MX10K', 'Control Card');"}
{"sql_prompt": "Show the alarm id, equipment name, and comments for alarms that have comments.", "sql": "SELECT id, eqp_name, comments FROM alarm WHERE comments IS NOT NULL AND comments != '';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_name, comments) VALUES (1001, 'DeviceA', 'Checked logs, requires reboot.');\nINSERT INTO alarm (id, eqp_name, comments) VALUES (1002, 'DeviceB', NULL);"}
{"sql_prompt": "Find incidents with impact level 1 (High) and list their number and short description.", "sql": "SELECT incident_number, short_description FROM incident WHERE impact = 1;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), assigned_to character varying(100), assignment_count integer, business_service character varying(100), caller character varying(100), category character varying(100), closed timestamp without time zone, configuration_item character varying(100), contact_type character varying(100), correlation_id character varying(100), created_date timestamp without time zone, customer_type character varying(100), description text, domain character varying(100), end_fault timestamp without time zone, end_inefficiency timestamp without time zone, expected_resolution_date timestamp without time zone, first_configuration_item character varying(100), impact integer, in_validation boolean, incident_alert boolean, incident_parent character varying(100), inefficiency boolean, inefficiency_type character varying(100), level1 character varying(100), level2 character varying(100), level3 character varying(100), level4 character varying(100), msisdn character varying(100), network_element_type character varying(100), opened_by character varying(100), originating_system character varying(100), owner_group character varying(100), process_cause character varying(100), product_type character varying(100), reopen_count integer, resolution_code character varying(100), resolution_entity character varying(100), resolved timestamp without time zone, root_cause character varying(100), sequence_id integer, short_description text, source character varying(100), start_fault timestamp without time zone, start_inefficiency timestamp without time zone, status integer, updated timestamp without time zone, updated_by character varying(100), urgency integer, vendor character varying(100), wfm_id character varying(100));\nINSERT INTO incident (incident_number, short_description, impact) VALUES ('INC010', 'Major service outage', 1);\nINSERT INTO incident (incident_number, short_description, impact) VALUES ('INC011', 'Minor performance issue', 3);"}
{"sql_prompt": "Show the alarm ID and the associated Trouble Ticket ID (tt_id) for alarms that have one.", "sql": "SELECT id, tt_id FROM alarm WHERE tt_id IS NOT NULL AND tt_id != '';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, tt_id) VALUES (1101, 'TT12345');\nINSERT INTO alarm (id, tt_id) VALUES (1102, NULL);"}
{"sql_prompt": "List the PE IP address model and status for Mobile PE IPs.", "sql": "SELECT \"PEIP_MODEL\", \"STATUS\" FROM mobile_peip;", "sql_context": "CREATE TABLE mobile_peip (index bigint, \"VLAN_ID\" double precision, \"PEIP_ID\" bigint, \"SUBNET\" double precision, \"TXP\" text, \"ENTITY_TYPE\" text, \"VPNL3_ID\" double precision, \"PEIP_MODEL\" text, \"POSITION\" bigint, \"STATUS\" text);\nINSERT INTO mobile_peip (index, \"PEIP_MODEL\", \"STATUS\") VALUES (1, 'ModelX', 'Active');\nINSERT INTO mobile_peip (index, \"PEIP_MODEL\", \"STATUS\") VALUES (2, 'ModelY', 'Pending');"}
{"sql_prompt": "Find the site ID, longitude, and latitude for sites in the 'West' district.", "sql": "SELECT \"SITE_ID\", \"LONGITUDE\", \"LATITUDE\" FROM sites WHERE \"DISTRICT\" = 'West';", "sql_context": "CREATE TABLE sites (\"SITE_ID\" text, \"SITE_NAME\" text, \"LONGITUDE\" text, \"LATITUDE\" text, \"DISTRICT\" text, \"ADDRESS\" text, \"CIVICO\" text, \"CITY_NAME\" text, \"SITE_TYPE\" text, \"CUSTOMER\" text, \"SHORT_NAME\" text, \"ALTERNATIVE_NAME\" text, \"PROVINCE\" text, \"BUILDING_UNIQUE_ID\" text, \"CODICE_ISTAT\" double precision, \"REGIONE\" text, \"PROVINCIA\" text);\nINSERT INTO sites (\"SITE_ID\", \"LONGITUDE\", \"LATITUDE\", \"DISTRICT\") VALUES ('S003', '-122.4194', '37.7749', 'West');\nINSERT INTO sites (\"SITE_ID\", \"LONGITUDE\", \"LATITUDE\", \"DISTRICT\") VALUES ('S004', '-74.0060', '40.7128', 'East');"}
{"sql_prompt": "Show the number of alarms per vendor, ordered from most to least.", "sql": "SELECT vendor, COUNT(*) AS alarm_count FROM alarm GROUP BY vendor ORDER BY alarm_count DESC;", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, vendor) VALUES (1201, 'Cisco');\nINSERT INTO alarm (id, vendor) VALUES (1202, 'Juniper');\nINSERT INTO alarm (id, vendor) VALUES (1203, 'Cisco');"}
{"sql_prompt": "What are the names and IP addresses of ports associated with node 'EdgeRouter5'?", "sql": "SELECT \"CODE\", \"IP_ADDRESS\" FROM ports WHERE \"NODE_NAME\" = 'EdgeRouter5';", "sql_context": "CREATE TABLE ports (index bigint, \"NODE_NAME\" text, \"MODEL_CODE\" text, \"NETWORK_ELEMENT_ID\" bigint, \"CODE\" text, \"IP_ADDRESS\" text);\nINSERT INTO ports (index, \"NODE_NAME\", \"CODE\", \"IP_ADDRESS\") VALUES (1, 'EdgeRouter5', 'GigabitEthernet0/0', '192.168.5.1');\nINSERT INTO ports (index, \"NODE_NAME\", \"CODE\", \"IP_ADDRESS\") VALUES (2, 'CoreSwitch1', 'TenGigabitEthernet1/1', '10.1.1.1');"}
{"sql_prompt": "List incidents that have been reopened (reopen_count > 0). Show the incident number and reopen count.", "sql": "SELECT incident_number, reopen_count FROM incident WHERE reopen_count > 0;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), assigned_to character varying(100), assignment_count integer, business_service character varying(100), caller character varying(100), category character varying(100), closed timestamp without time zone, configuration_item character varying(100), contact_type character varying(100), correlation_id character varying(100), created_date timestamp without time zone, customer_type character varying(100), description text, domain character varying(100), end_fault timestamp without time zone, end_inefficiency timestamp without time zone, expected_resolution_date timestamp without time zone, first_configuration_item character varying(100), impact integer, in_validation boolean, incident_alert boolean, incident_parent character varying(100), inefficiency boolean, inefficiency_type character varying(100), level1 character varying(100), level2 character varying(100), level3 character varying(100), level4 character varying(100), msisdn character varying(100), network_element_type character varying(100), opened_by character varying(100), originating_system character varying(100), owner_group character varying(100), process_cause character varying(100), product_type character varying(100), reopen_count integer, resolution_code character varying(100), resolution_entity character varying(100), resolved timestamp without time zone, root_cause character varying(100), sequence_id integer, short_description text, source character varying(100), start_fault timestamp without time zone, start_inefficiency timestamp without time zone, status integer, updated timestamp without time zone, updated_by character varying(100), urgency integer, vendor character varying(100), wfm_id character varying(100));\nINSERT INTO incident (incident_number, reopen_count) VALUES ('INC012', 1);\nINSERT INTO incident (incident_number, reopen_count) VALUES ('INC013', 0);"}
{"sql_prompt": "Show me all the critical alarms.", "sql": "SELECT id, eqp_name, additional_text FROM alarm WHERE severity = 'Critical';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_name, additional_text, severity) VALUES (101, 'Router-A', 'High temperature detected', 'Critical');\nINSERT INTO alarm (id, eqp_name, additional_text, severity) VALUES (102, 'Switch-B', 'Port flapping', 'Major');"}
{"sql_prompt": "How many incidents are currently assigned to the 'Network Operations' group?", "sql": "SELECT count(*) FROM incident WHERE assignment_group = 'Network Operations';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), assigned_to character varying(100), assignment_count integer, business_service character varying(100), caller character varying(100), category character varying(100), closed timestamp without time zone, configuration_item character varying(100), contact_type character varying(100), correlation_id character varying(100), created_date timestamp without time zone, customer_type character varying(100), description text, domain character varying(100), end_fault timestamp without time zone, end_inefficiency timestamp without time zone, expected_resolution_date timestamp without time zone, first_configuration_item character varying(100), impact integer, in_validation boolean, incident_alert boolean, incident_parent character varying(100), inefficiency boolean, inefficiency_type character varying(100), level1 character varying(100), level2 character varying(100), level3 character varying(100), level4 character varying(100), msisdn character varying(100), network_element_type character varying(100), opened_by character varying(100), originating_system character varying(100), owner_group character varying(100), process_cause character varying(100), product_type character varying(100), reopen_count integer, resolution_code character varying(100), resolution_entity character varying(100), resolved timestamp without time zone, root_cause character varying(100), sequence_id integer, short_description text, source character varying(100), start_fault timestamp without time zone, start_inefficiency timestamp without time zone, status integer, updated timestamp without time zone, updated_by character varying(100), urgency integer, vendor character varying(100), wfm_id character varying(100));\nINSERT INTO incident (incident_number, assignment_group) VALUES ('INC001', 'Network Operations');\nINSERT INTO incident (incident_number, assignment_group) VALUES ('INC002', 'Service Desk');"}
{"sql_prompt": "List the names and types of all cable systems.", "sql": "SELECT \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\" FROM cable_system;", "sql_context": "CREATE TABLE cable_system ( index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SYSTEM_NAME\" text, \"CABLE_TYPE\" text, \"SITE_A_ID\" text, \"SITE_B_ID\" text );\nINSERT INTO cable_system (\"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\") VALUES ('CS001', 'Atlantic Link', 'Submarine');\nINSERT INTO cable_system (\"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\") VALUES ('CS002', 'Metro Ring', 'Terrestrial');"}
{"sql_prompt": "Find all alarms raised between '2023-10-26 08:00:00' and '2023-10-26 12:00:00'. Show their ID, severity, and equipment name.", "sql": "SELECT id, severity, eqp_name FROM alarm WHERE time_raised BETWEEN '2023-10-26 08:00:00' AND '2023-10-26 12:00:00';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, severity, eqp_name, time_raised) VALUES (201, 'Major', 'Server-X', '2023-10-26 09:15:00');\nINSERT INTO alarm (id, severity, eqp_name, time_raised) VALUES (202, 'Minor', 'Switch-Y', '2023-10-26 13:00:00');"}
{"sql_prompt": "Count the number of alarms for each severity level.", "sql": "SELECT severity, count(*) FROM alarm GROUP BY severity;", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, severity) VALUES (301, 'Critical');\nINSERT INTO alarm (id, severity) VALUES (302, 'Major');\nINSERT INTO alarm (id, severity) VALUES (303, 'Critical');"}
{"sql_prompt": "Show the 5 most recent incidents based on their creation date.", "sql": "SELECT incident_number, short_description, created_date FROM incident ORDER BY created_date DESC LIMIT 5;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), assigned_to character varying(100), assignment_count integer, business_service character varying(100), caller character varying(100), category character varying(100), closed timestamp without time zone, configuration_item character varying(100), contact_type character varying(100), correlation_id character varying(100), created_date timestamp without time zone, customer_type character varying(100), description text, domain character varying(100), end_fault timestamp without time zone, end_inefficiency timestamp without time zone, expected_resolution_date timestamp without time zone, first_configuration_item character varying(100), impact integer, in_validation boolean, incident_alert boolean, incident_parent character varying(100), inefficiency boolean, inefficiency_type character varying(100), level1 character varying(100), level2 character varying(100), level3 character varying(100), level4 character varying(100), msisdn character varying(100), network_element_type character varying(100), opened_by character varying(100), originating_system character varying(100), owner_group character varying(100), process_cause character varying(100), product_type character varying(100), reopen_count integer, resolution_code character varying(100), resolution_entity character varying(100), resolved timestamp without time zone, root_cause character varying(100), sequence_id integer, short_description text, source character varying(100), start_fault timestamp without time zone, start_inefficiency timestamp without time zone, status integer, updated timestamp without time zone, updated_by character varying(100), urgency integer, vendor character varying(100), wfm_id character varying(100));\nINSERT INTO incident (incident_number, short_description, created_date) VALUES ('INC003', 'Network outage', '2023-10-27 10:00:00');\nINSERT INTO incident (incident_number, short_description, created_date) VALUES ('INC004', 'Slow connection', '2023-10-27 11:00:00');\nINSERT INTO incident (incident_number, short_description, created_date) VALUES ('INC005', 'Router config issue', '2023-10-26 09:00:00');"}
{"sql_prompt": "Get the alarm description and severity for alarm ID 12345.", "sql": "SELECT description, severity FROM v_alarms WHERE alarm_id = 12345;", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), eqp_name character varying(250), from_site character varying(250), remote_eqp_name character varying(250), time_up timestamp without time zone, time_down timestamp without time zone, additional_text character varying(250), vendor character varying(250), raw_alarm_type character varying(250), device_name character varying(250), device_type character varying(250), tt_id character varying(250), ems_name character varying(250), time_cleared timestamp without time zone); CREATE TABLE alarm_label (id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250)); CREATE VIEW v_alarms AS SELECT a.id AS alarm_id, a.severity, a.eqp_name, a.from_site, a.remote_eqp_name, a.time_up, a.time_down, l.slogan AS description, a.additional_text, a.vendor, a.raw_alarm_type AS alarm_type, a.device_name, a.device_type, l.domain_id AS domain, a.tt_id, a.ems_name, a.time_cleared AS ts_cleared FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO alarm (id, severity) VALUES (12345, 'Major');\nINSERT INTO alarm_label (id, slogan) VALUES (12345, 'Link Down Event');"}
{"sql_prompt": "List all sites located in the 'Milan' province.", "sql": "SELECT \"SITE_ID\", \"SITE_NAME\", \"ADDRESS\" FROM sites WHERE \"PROVINCIA\" = 'Milan';", "sql_context": "CREATE TABLE sites ( \"SITE_ID\" text, \"SITE_NAME\" text, \"LONGITUDE\" text, \"LATITUDE\" text, \"DISTRICT\" text, \"ADDRESS\" text, \"CIVICO\" text, \"CITY_NAME\" text, \"SITE_TYPE\" text, \"CUSTOMER\" text, \"SHORT_NAME\" text, \"ALTERNATIVE_NAME\" text, \"PROVINCE\" text, \"BUILDING_UNIQUE_ID\" text, \"CODICE_ISTAT\" double precision, \"REGIONE\" text, \"PROVINCIA\" text );\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"ADDRESS\", \"PROVINCIA\") VALUES ('SITE01', 'Milan Central Office', 'Via Roma 1', 'Milan');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"ADDRESS\", \"PROVINCIA\") VALUES ('SITE02', 'Rome Hub', 'Piazza Venezia 5', 'Rome');"}
{"sql_prompt": "Find the IP address for the network element with NODE_NAME 'CoreRouter-1'.", "sql": "SELECT T1.\"IP_ADDRESS\" FROM equipment_ip_address AS T1 WHERE T1.\"NODE_NAME\" = 'CoreRouter-1'", "sql_context": "CREATE TABLE equipment_ip_address ( index bigint, \"NODE_NAME\" text, \"MODEL_CODE\" text, \"NETWORK_ELEMENT_ID\" bigint, \"CODE\" text, \"IP_ADDRESS\" text );\nINSERT INTO equipment_ip_address (\"NODE_NAME\", \"IP_ADDRESS\") VALUES ('CoreRouter-1', '10.0.0.1');\nINSERT INTO equipment_ip_address (\"NODE_NAME\", \"IP_ADDRESS\") VALUES ('EdgeSwitch-2', '192.168.1.1');"}
{"sql_prompt": "What is the average repeated count for alarms with severity 'Warning'?", "sql": "SELECT avg(repeated_count) FROM alarm WHERE severity = 'Warning';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, severity, repeated_count) VALUES (401, 'Warning', 5);\nINSERT INTO alarm (id, severity, repeated_count) VALUES (402, 'Warning', 10);"}
{"sql_prompt": "List all network elements provided by 'VendorA', showing their node name and model code.", "sql": "SELECT \"NODE_NAME\", \"MODEL_CODE\" FROM network_elements WHERE \"VENDOR_NAME\" = 'VendorA';", "sql_context": "CREATE TABLE network_elements ( index bigint, \"LOCATION\" text, \"NODE_NAME\" text, \"NETWORK_ELEMENT_ID\" bigint, \"NETWORK_ELEMENT_TYPE_CODE\" text, \"SERIAL_NUMBER\" bigint, \"ACTIVITY_STATUS_CODE\" text, \"MODEL_CODE\" text, \"VENDOR_NAME\" text, \"ELEMENT_CLASS_CODE\" text, \"ELEMENT_CLASS_DESC\" text, \"CARD_TYPE_ID\" double precision, \"SYSTEM_NAME\" text, \"LOCATION_SHORT_NAME\" text );\nINSERT INTO network_elements (\"NODE_NAME\", \"MODEL_CODE\", \"VENDOR_NAME\") VALUES ('RouterX', 'RX-1000', 'VendorA');\nINSERT INTO network_elements (\"NODE_NAME\", \"MODEL_CODE\", \"VENDOR_NAME\") VALUES ('SwitchY', 'SY-500', 'VendorB');"}
{"sql_prompt": "Show the incident number, configuration item, and description for incidents related to 'Database' category.", "sql": "SELECT incident_number, configuration_item, description FROM incident WHERE category = 'Database';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), assigned_to character varying(100), assignment_count integer, business_service character varying(100), caller character varying(100), category character varying(100), closed timestamp without time zone, configuration_item character varying(100), contact_type character varying(100), correlation_id character varying(100), created_date timestamp without time zone, customer_type character varying(100), description text, domain character varying(100), end_fault timestamp without time zone, end_inefficiency timestamp without time zone, expected_resolution_date timestamp without time zone, first_configuration_item character varying(100), impact integer, in_validation boolean, incident_alert boolean, incident_parent character varying(100), inefficiency boolean, inefficiency_type character varying(100), level1 character varying(100), level2 character varying(100), level3 character varying(100), level4 character varying(100), msisdn character varying(100), network_element_type character varying(100), opened_by character varying(100), originating_system character varying(100), owner_group character varying(100), process_cause character varying(100), product_type character varying(100), reopen_count integer, resolution_code character varying(100), resolution_entity character varying(100), resolved timestamp without time zone, root_cause character varying(100), sequence_id integer, short_description text, source character varying(100), start_fault timestamp without time zone, start_inefficiency timestamp without time zone, status integer, updated timestamp without time zone, updated_by character varying(100), urgency integer, vendor character varying(100), wfm_id character varying(100));\nINSERT INTO incident (incident_number, configuration_item, description, category) VALUES ('INC006', 'DBServer01', 'Database connection refused', 'Database');\nINSERT INTO incident (incident_number, configuration_item, description, category) VALUES ('INC007', 'WebServer02', 'Website unavailable', 'Application');"}
{"sql_prompt": "Find the cable segments associated with cable system 'CS001'.", "sql": "SELECT T2.\"CABLE_SEGMENT_NAME\", T2.\"CABLE_TYPE\" FROM cl_clsegm_rel AS T1 INNER JOIN cablesegment AS T2 ON T1.\"CABLE_SEGMENT_ID\" = T2.\"CABLE_SEGMENT_ID\" WHERE T1.\"CABLE_SYSTEM_ID\" = 'CS001';", "sql_context": "CREATE TABLE cablesegment ( index bigint, \"CABLE_SEGMENT_ID\" text, \"CABLE_SEGMENT_NAME\" text, \"CABLE_TYPE\" text, \"STATUS\" double precision, \"SITE_CABINET_A_ID\" text, \"SITE_CABINET_B_ID\" text, \"SYNTHETIC_NAME\" text ); CREATE TABLE cl_clsegm_rel ( index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SEGMENT_ID\" text );\nINSERT INTO cl_clsegm_rel (\"CABLE_SYSTEM_ID\", \"CABLE_SEGMENT_ID\") VALUES ('CS001', 'SEG01');\nINSERT INTO cl_clsegm_rel (\"CABLE_SYSTEM_ID\", \"CABLE_SEGMENT_ID\") VALUES ('CS001', 'SEG02');\nINSERT INTO cablesegment (\"CABLE_SEGMENT_ID\", \"CABLE_SEGMENT_NAME\", \"CABLE_TYPE\") VALUES ('SEG01', 'Segment A-B', 'Fiber');\nINSERT INTO cablesegment (\"CABLE_SEGMENT_ID\", \"CABLE_SEGMENT_NAME\", \"CABLE_TYPE\") VALUES ('SEG02', 'Segment B-C', 'Fiber');"}
{"sql_prompt": "What alarms have comments associated with them? Show alarm ID and the comment.", "sql": "SELECT id, comments FROM alarm WHERE comments IS NOT NULL AND comments <> '';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, comments) VALUES (501, 'Checked by engineer, seems hardware issue.');\nINSERT INTO alarm (id, comments) VALUES (502, NULL);"}
{"sql_prompt": "List distinct equipment types present in the alarm table.", "sql": "SELECT DISTINCT eqp_type FROM alarm WHERE eqp_type IS NOT NULL;", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_type) VALUES (601, 'Router');\nINSERT INTO alarm (id, eqp_type) VALUES (602, 'Switch');\nINSERT INTO alarm (id, eqp_type) VALUES (603, 'Router');"}
{"sql_prompt": "Find the names and locations of equipment detailed in the 'equipment_details' table with the code 'EQP-001'.", "sql": "SELECT \"SHORT_NAME\", \"LOCATION\" FROM equipment_details WHERE \"CODE\" = 'EQP-001';", "sql_context": "CREATE TABLE equipment_details ( index bigint, \"SHORT_NAME\" text, \"LOCATION\" text, \"TRAIL_NAME\" text, \"NUMERO_TD\" text, \"CODE\" text, \"DESCRIPTION\" text );\nINSERT INTO equipment_details (\"SHORT_NAME\", \"LOCATION\", \"CODE\") VALUES ('Main Router', 'Data Center A', 'EQP-001');\nINSERT INTO equipment_details (\"SHORT_NAME\", \"LOCATION\", \"CODE\") VALUES ('Backup Switch', 'Data Center B', 'EQP-002');"}
{"sql_prompt": "Show the outage ID and start time for outages affecting site 'SITE-ABC'.", "sql": "SELECT outage_id, ts_start_disruption FROM outage WHERE site_id = 'SITE-ABC';", "sql_context": "CREATE TABLE outage ( outage_id integer, site_id character varying(50), ts_start_disruption timestamp without time zone, equipment_list character varying(100), status character varying(50), username character varying(100), latitude numeric(9,6), longitude numeric(9,6) );\nINSERT INTO outage (outage_id, site_id, ts_start_disruption) VALUES (1, 'SITE-ABC', '2023-10-27 14:30:00');\nINSERT INTO outage (outage_id, site_id, ts_start_disruption) VALUES (2, 'SITE-XYZ', '2023-10-27 15:00:00');"}
{"sql_prompt": "Which alarms are associated with trouble ticket 'TT12345'? Show the alarm ID and the equipment name.", "sql": "SELECT id, eqp_name FROM alarm WHERE tt_id = 'TT12345';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_name, tt_id) VALUES (701, 'Router-C', 'TT12345');\nINSERT INTO alarm (id, eqp_name, tt_id) VALUES (702, 'Switch-D', 'TT67890');"}
{"sql_prompt": "List all services with status 'Active'.", "sql": "SELECT \"SERVICE_ID\", \"SERVICE_NAME\" FROM service WHERE \"STATUS\" = 'Active';", "sql_context": "CREATE TABLE service ( \"SERVICE_ID\" text, \"HIERARCHY_ID\" double precision, \"SERVICE_NAME\" text, \"STATUS\" text, \"A_NETWORK_ADDRESS\" text, \"B_NETWORK_ADDRESS\" text, \"V52_NUMBER\" double precision, \"LINK_ID\" double precision, \"NA_IMA_GROUP\" text, \"CIRCUIT_COUNT\" bigint, \"CHANNEL_COUNT\" double precision, \"MARKET_DESTINATION\" text, \"ACCESS_TYPE\" text, \"ASSOCIATED_SERVICE\" text, \"PROVISIONING_STATUS\" text, \"CLI\" text, \"DOMAIN\" bigint );\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"STATUS\") VALUES ('SVC001', 'Premium Internet', 'Active');\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"STATUS\") VALUES ('SVC002', 'Basic VPN', 'Inactive');"}
{"sql_prompt": "What are the different types of network elements recorded?", "sql": "SELECT DISTINCT \"NETWORK_ELEMENT_TYPE_CODE\" FROM network_elements;", "sql_context": "CREATE TABLE network_elements ( index bigint, \"LOCATION\" text, \"NODE_NAME\" text, \"NETWORK_ELEMENT_ID\" bigint, \"NETWORK_ELEMENT_TYPE_CODE\" text, \"SERIAL_NUMBER\" bigint, \"ACTIVITY_STATUS_CODE\" text, \"MODEL_CODE\" text, \"VENDOR_NAME\" text, \"ELEMENT_CLASS_CODE\" text, \"ELEMENT_CLASS_DESC\" text, \"CARD_TYPE_ID\" double precision, \"SYSTEM_NAME\" text, \"LOCATION_SHORT_NAME\" text );\nINSERT INTO network_elements (\"NETWORK_ELEMENT_TYPE_CODE\") VALUES ('ROUTER');\nINSERT INTO network_elements (\"NETWORK_ELEMENT_TYPE_CODE\") VALUES ('SWITCH');\nINSERT INTO network_elements (\"NETWORK_ELEMENT_TYPE_CODE\") VALUES ('ROUTER');"}
{"sql_prompt": "Show incidents that have been reopened (reopen_count > 0).", "sql": "SELECT incident_number, assigned_to, reopen_count FROM incident WHERE reopen_count > 0;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), assigned_to character varying(100), assignment_count integer, business_service character varying(100), caller character varying(100), category character varying(100), closed timestamp without time zone, configuration_item character varying(100), contact_type character varying(100), correlation_id character varying(100), created_date timestamp without time zone, customer_type character varying(100), description text, domain character varying(100), end_fault timestamp without time zone, end_inefficiency timestamp without time zone, expected_resolution_date timestamp without time zone, first_configuration_item character varying(100), impact integer, in_validation boolean, incident_alert boolean, incident_parent character varying(100), inefficiency boolean, inefficiency_type character varying(100), level1 character varying(100), level2 character varying(100), level3 character varying(100), level4 character varying(100), msisdn character varying(100), network_element_type character varying(100), opened_by character varying(100), originating_system character varying(100), owner_group character varying(100), process_cause character varying(100), product_type character varying(100), reopen_count integer, resolution_code character varying(100), resolution_entity character varying(100), resolved timestamp without time zone, root_cause character varying(100), sequence_id integer, short_description text, source character varying(100), start_fault timestamp without time zone, start_inefficiency timestamp without time zone, status integer, updated timestamp without time zone, updated_by character varying(100), urgency integer, vendor character varying(100), wfm_id character varying(100));\nINSERT INTO incident (incident_number, assigned_to, reopen_count) VALUES ('INC008', 'John Doe', 1);\nINSERT INTO incident (incident_number, assigned_to, reopen_count) VALUES ('INC009', 'Jane Smith', 0);"}
{"sql_prompt": "Get the alarm ID, equipment name, and TT status for all alarms that have a TT status of 'Closed'.", "sql": "SELECT id, eqp_name, tt_status FROM alarm WHERE tt_status = 'Closed';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_name, tt_status) VALUES (801, 'Firewall-1', 'Closed');\nINSERT INTO alarm (id, eqp_name, tt_status) VALUES (802, 'Server-2', 'Open');"}
{"sql_prompt": "Find the details (short name, location, description) for leased line with TRAIL_NAME 'LL-WEST-01'.", "sql": "SELECT \"SHORT_NAME\", \"LOCATION\", \"DESCRIPTION\" FROM leased_lines WHERE \"TRAIL_NAME\" = 'LL-WEST-01';", "sql_context": "CREATE TABLE leased_lines ( index bigint, \"SHORT_NAME\" text, \"LOCATION\" text, \"TRAIL_NAME\" text, \"NUMERO_TD\" text, \"CODE\" text, \"DESCRIPTION\" text );\nINSERT INTO leased_lines (\"SHORT_NAME\", \"LOCATION\", \"TRAIL_NAME\", \"DESCRIPTION\") VALUES ('West Link', 'Site West', 'LL-WEST-01', 'Primary leased line');\nINSERT INTO leased_lines (\"SHORT_NAME\", \"LOCATION\", \"TRAIL_NAME\", \"DESCRIPTION\") VALUES ('East Link', 'Site East', 'LL-EAST-02', 'Backup leased line');"}
{"sql_prompt": "How many alarms are currently inhibited?", "sql": "SELECT count(*) FROM alarm WHERE inhibit = TRUE;", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, inhibit) VALUES (901, TRUE);\nINSERT INTO alarm (id, inhibit) VALUES (902, FALSE);"}
{"sql_prompt": "List the trail name and description for synthetic trails with function code 'BACKBONE'.", "sql": "SELECT \"TRAIL_NAME\", \"TRAIL_DESCRIPTION\" FROM synthetic_name_trail WHERE \"FUNCTION_CODE\" = 'BACKBONE';", "sql_context": "CREATE TABLE synthetic_name_trail ( \"TRANSMEDIA_NAME\" text, \"TRATTA\" text, \"TRAIL_NAME\" text, \"ACTIVITY_STATUS_TRAIL\" text, \"TRAIL_DESCRIPTION\" text, \"FUNCTION_CODE\" text );\nINSERT INTO synthetic_name_trail (\"TRAIL_NAME\", \"TRAIL_DESCRIPTION\", \"FUNCTION_CODE\") VALUES ('BB-CORE-1', 'Core Backbone Link 1', 'BACKBONE');\nINSERT INTO synthetic_name_trail (\"TRAIL_NAME\", \"TRAIL_DESCRIPTION\", \"FUNCTION_CODE\") VALUES ('ACCESS-CUST-A', 'Customer Access Link A', 'ACCESS');"}
{"sql_prompt": "Show the card type, card name, and vendor name for equipment on NODE_NAME 'EDGE-ROUTER-5'.", "sql": "SELECT \"CARD_TYPE\", \"CARD_NAME\", \"CARD_VENDOR_NAME\" FROM rmm_equipment_details WHERE \"NODE_NAME\" = 'EDGE-ROUTER-5';", "sql_context": "CREATE TABLE rmm_equipment_details ( \"NETWORK_ELEMENT_NAME\" text, \"NETWORK_ELEMENT_MODEL\" text, \"NODE_NAME\" text, \"SLOT_NAME\" text, \"SLOT_NUMBER\" double precision, \"SHELF_NAME\" text, \"SHELF_DESCRIPTION\" text, \"CARD_TYPE\" text, \"CARD_NAME\" text, \"VENDOR_CARD_CODE\" text, \"CARD_STATUS_CODE\" text, \"CARD_VENDOR_NAME\" text );\nINSERT INTO rmm_equipment_details (\"NODE_NAME\", \"CARD_TYPE\", \"CARD_NAME\", \"CARD_VENDOR_NAME\") VALUES ('EDGE-ROUTER-5', 'Line Card', 'LC-10G-8P', 'VendorX');\nINSERT INTO rmm_equipment_details (\"NODE_NAME\", \"CARD_TYPE\", \"CARD_NAME\", \"CARD_VENDOR_NAME\") VALUES ('CORE-SWITCH-1', 'Fabric Module', 'FM-100G', 'VendorY');"}
{"sql_prompt": "Find the PE Name and Status for Mobile PE with VLAN ID 100.", "sql": "SELECT \"PE_NAME\", \"PE_STATUS\" FROM mobile_pe WHERE \"VLAN_ID\" = 100;", "sql_context": "CREATE TABLE mobile_pe ( index bigint, \"VLAN_ID\" double precision, \"LOGICAL_LINK_ID\" double precision, \"PE_ID\" bigint, \"PE_NAME\" text, \"PE_STATUS\" text, \"ENTITY_TYPE\" text, \"POSITION\" bigint );\nINSERT INTO mobile_pe (\"VLAN_ID\", \"PE_NAME\", \"PE_STATUS\") VALUES (100, 'PE-MBN-01', 'Active');\nINSERT INTO mobile_pe (\"VLAN_ID\", \"PE_NAME\", \"PE_STATUS\") VALUES (200, 'PE-MBN-02', 'Maintenance');"}
{"sql_prompt": "List alarms with 'Loss of Signal' in the specific problem description.", "sql": "SELECT id, eqp_name, time_raised FROM alarm WHERE specific_problem LIKE '%Loss of Signal%';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_name, time_raised, specific_problem) VALUES (1001, 'OLT-1', '2023-10-27 16:00:00', 'Downstream Loss of Signal');\nINSERT INTO alarm (id, eqp_name, time_raised, specific_problem) VALUES (1002, 'MUX-2', '2023-10-27 16:05:00', 'High Bit Error Rate');"}
{"sql_prompt": "Show the network element ID, node name, and location for elements whose activity status is 'INACTIVE'.", "sql": "SELECT \"NETWORK_ELEMENT_ID\", \"NODE_NAME\", \"LOCATION\" FROM network_elements WHERE \"ACTIVITY_STATUS_CODE\" = 'INACTIVE';", "sql_context": "CREATE TABLE network_elements ( index bigint, \"LOCATION\" text, \"NODE_NAME\" text, \"NETWORK_ELEMENT_ID\" bigint, \"NETWORK_ELEMENT_TYPE_CODE\" text, \"SERIAL_NUMBER\" bigint, \"ACTIVITY_STATUS_CODE\" text, \"MODEL_CODE\" text, \"VENDOR_NAME\" text, \"ELEMENT_CLASS_CODE\" text, \"ELEMENT_CLASS_DESC\" text, \"CARD_TYPE_ID\" double precision, \"SYSTEM_NAME\" text, \"LOCATION_SHORT_NAME\" text );\nINSERT INTO network_elements (\"NETWORK_ELEMENT_ID\", \"NODE_NAME\", \"LOCATION\", \"ACTIVITY_STATUS_CODE\") VALUES (11, 'OldSwitch-1', 'Storage Room', 'INACTIVE');\nINSERT INTO network_elements (\"NETWORK_ELEMENT_ID\", \"NODE_NAME\", \"LOCATION\", \"ACTIVITY_STATUS_CODE\") VALUES (12, 'CoreRouter-2', 'Data Center B', 'ACTIVE');"}
{"sql_prompt": "Find the total number of incidents categorized as 'Performance Degradation'.", "sql": "SELECT count(*) FROM incident WHERE category = 'Performance Degradation';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), assigned_to character varying(100), assignment_count integer, business_service character varying(100), caller character varying(100), category character varying(100), closed timestamp without time zone, configuration_item character varying(100), contact_type character varying(100), correlation_id character varying(100), created_date timestamp without time zone, customer_type character varying(100), description text, domain character varying(100), end_fault timestamp without time zone, end_inefficiency timestamp without time zone, expected_resolution_date timestamp without time zone, first_configuration_item character varying(100), impact integer, in_validation boolean, incident_alert boolean, incident_parent character varying(100), inefficiency boolean, inefficiency_type character varying(100), level1 character varying(100), level2 character varying(100), level3 character varying(100), level4 character varying(100), msisdn character varying(100), network_element_type character varying(100), opened_by character varying(100), originating_system character varying(100), owner_group character varying(100), process_cause character varying(100), product_type character varying(100), reopen_count integer, resolution_code character varying(100), resolution_entity character varying(100), resolved timestamp without time zone, root_cause character varying(100), sequence_id integer, short_description text, source character varying(100), start_fault timestamp without time zone, start_inefficiency timestamp without time zone, status integer, updated timestamp without time zone, updated_by character varying(100), urgency integer, vendor character varying(100), wfm_id character varying(100));\nINSERT INTO incident (incident_number, category) VALUES ('INC010', 'Performance Degradation');\nINSERT INTO incident (incident_number, category) VALUES ('INC011', 'Outage');\nINSERT INTO incident (incident_number, category) VALUES ('INC012', 'Performance Degradation');"}
{"sql_prompt": "Find all alarms with severity marked as 'Critical'.", "sql": "SELECT id, eqp_name, time_raised FROM alarm WHERE severity = 'Critical';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, severity, eqp_name, time_raised) VALUES (1, 'Critical', 'RouterA', '2023-10-26 10:00:00'), (2, 'Major', 'SwitchB', '2023-10-26 11:00:00');"}
{"sql_prompt": "List the incident numbers that were created after January 1st, 2023.", "sql": "SELECT incident_number FROM incident WHERE created_date > '2023-01-01 00:00:00';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), assigned_to character varying(100), assignment_count integer, business_service character varying(100), caller character varying(100), category character varying(100), closed timestamp without time zone, configuration_item character varying(100), contact_type character varying(100), correlation_id character varying(100), created_date timestamp without time zone, customer_type character varying(100), description text, domain character varying(100), end_fault timestamp without time zone, end_inefficiency timestamp without time zone, expected_resolution_date timestamp without time zone, first_configuration_item character varying(100), impact integer, in_validation boolean, incident_alert boolean, incident_parent character varying(100), inefficiency boolean, inefficiency_type character varying(100), level1 character varying(100), level2 character varying(100), level3 character varying(100), level4 character varying(100), msisdn character varying(100), network_element_type character varying(100), opened_by character varying(100), originating_system character varying(100), owner_group character varying(100), process_cause character varying(100), product_type character varying(100), reopen_count integer, resolution_code character varying(100), resolution_entity character varying(100), resolved timestamp without time zone, root_cause character varying(100), sequence_id integer, short_description text, source character varying(100), start_fault timestamp without time zone, start_inefficiency timestamp without time zone, status integer, updated timestamp without time zone, updated_by character varying(100), urgency integer, vendor character varying(100), wfm_id character varying(100));\nINSERT INTO incident (incident_number, created_date) VALUES ('INC001', '2023-01-15 10:00:00'), ('INC002', '2022-12-20 09:00:00');"}
{"sql_prompt": "How many alarms exist for each different severity level?", "sql": "SELECT severity, COUNT(*) as alarm_count FROM alarm GROUP BY severity;", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250));\nINSERT INTO alarm (id, severity) VALUES (1, 'Critical'), (2, 'Major'), (3, 'Critical'), (4, 'Minor');"}
{"sql_prompt": "Show the alarm ID, its severity, and the associated slogan text for all alarms.", "sql": "SELECT a.id, a.severity, l.slogan FROM alarm AS a JOIN alarm_label AS l ON a.id = l.id;", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250));\nCREATE TABLE alarm_label (id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250));\nINSERT INTO alarm (id, severity) VALUES (101, 'Critical');\nINSERT INTO alarm_label (id, slogan) VALUES (101, 'Link Down');\nINSERT INTO alarm (id, severity) VALUES (102, 'Warning');\nINSERT INTO alarm_label (id, slogan) VALUES (102, 'High Temperature');"}
{"sql_prompt": "What are the slogans for alarms where the specific problem is described as 'High Latency'?", "sql": "SELECT l.slogan FROM alarm AS a JOIN alarm_label AS l ON a.id = l.id WHERE a.specific_problem = 'High Latency';", "sql_context": "CREATE TABLE alarm (id bigint, specific_problem character varying(250));\nCREATE TABLE alarm_label (id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250));\nINSERT INTO alarm (id, specific_problem) VALUES (102, 'High Latency'), (103, 'Packet Loss');\nINSERT INTO alarm_label (id, slogan) VALUES (102, 'Network Performance Issue'), (103, 'Data Transmission Error');"}
{"sql_prompt": "Using the alarm view, display the description and equipment name for alarms associated with the vendor 'Cisco'.", "sql": "SELECT description, eqp_name FROM v_alarms WHERE vendor = 'Cisco';", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), eqp_name character varying(250), from_site character varying(250), remote_eqp_name character varying(250), time_up timestamp without time zone, time_down timestamp without time zone, additional_text character varying(250), vendor character varying(250), raw_alarm_type character varying(250), device_name character varying(250), device_type character varying(250), tt_id character varying(250), ems_name character varying(250), time_cleared timestamp without time zone);\nCREATE TABLE alarm_label (id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250));\nCREATE VIEW v_alarms AS SELECT a.id AS alarm_id, a.severity, a.eqp_name, a.from_site, a.remote_eqp_name, a.time_up, a.time_down, l.slogan AS description, a.additional_text, a.vendor, a.raw_alarm_type AS alarm_type, a.device_name, a.device_type, l.domain_id AS domain, a.tt_id, a.ems_name, a.time_cleared AS ts_cleared FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO alarm (id, vendor, eqp_name) VALUES (201, 'Cisco', 'RouterA'), (202, 'Juniper', 'SwitchB');\nINSERT INTO alarm_label (id, slogan) VALUES (201, 'Config Error'), (202, 'Port Down');"}
{"sql_prompt": "Find incident numbers and their descriptions where the description text includes the word 'outage'.", "sql": "SELECT incident_number, description FROM incident WHERE description LIKE '%outage%';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), description text);\nINSERT INTO incident (incident_number, description) VALUES ('INC003', 'Network outage reported in building 5'), ('INC004', 'User cannot login');"}
{"sql_prompt": "Show the ID, time raised, and severity of the 5 most recently occurring alarms.", "sql": "SELECT id, time_raised, severity FROM alarm ORDER BY time_raised DESC LIMIT 5;", "sql_context": "CREATE TABLE alarm (id bigint, time_raised timestamp without time zone, severity character varying(250));\nINSERT INTO alarm (id, time_raised, severity) VALUES (1, '2023-10-26 10:00:00', 'Major'), (2, '2023-10-26 11:05:00', 'Critical'), (3, '2023-10-26 09:15:00', 'Minor'), (4, '2023-10-26 11:00:00', 'Critical');"}
{"sql_prompt": "List the IDs and equipment names for critical alarms located in the 'West' district that have not yet been acknowledged.", "sql": "SELECT id, eqp_name FROM alarm WHERE severity = 'Critical' AND district = 'West' AND base_alarm_ack_state <> 'ACK';", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), district character varying(250), base_alarm_ack_state character varying(250), eqp_name character varying(250));\nINSERT INTO alarm (id, severity, district, base_alarm_ack_state, eqp_name) VALUES (301, 'Critical', 'West', 'UNACK', 'DeviceX'), (302, 'Critical', 'West', 'ACK', 'DeviceY'), (303, 'Major', 'West', 'UNACK', 'DeviceZ'), (304, 'Critical', 'East', 'UNACK', 'DeviceA');"}
{"sql_prompt": "Display the name of each cable system along with the synthetic names of all cable segments belonging to it.", "sql": "SELECT cs.\"CABLE_SYSTEM_NAME\", cseg.\"SYNTHETIC_NAME\" FROM cable_system AS cs JOIN cl_clsegm_rel AS rel ON cs.\"CABLE_SYSTEM_ID\" = rel.\"CABLE_SYSTEM_ID\" JOIN cablesegment AS cseg ON rel.\"CABLE_SEGMENT_ID\" = cseg.\"CABLE_SEGMENT_ID\";", "sql_context": "CREATE TABLE cable_system (index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SYSTEM_NAME\" text, \"CABLE_TYPE\" text, \"SITE_A_ID\" text, \"SITE_B_ID\" text);\nCREATE TABLE cablesegment (index bigint, \"CABLE_SEGMENT_ID\" text, \"CABLE_SEGMENT_NAME\" text, \"CABLE_TYPE\" text, \"STATUS\" double precision, \"SITE_CABINET_A_ID\" text, \"SITE_CABINET_B_ID\" text, \"SYNTHETIC_NAME\" text);\nCREATE TABLE cl_clsegm_rel (index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SEGMENT_ID\" text);\nINSERT INTO cable_system (\"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\") VALUES ('CS001', 'MetroRing'), ('CS002', 'InterCityLink');\nINSERT INTO cablesegment (\"CABLE_SEGMENT_ID\", \"SYNTHETIC_NAME\") VALUES ('SEG001', 'SegmentAlpha'), ('SEG002', 'SegmentBeta');\nINSERT INTO cl_clsegm_rel (\"CABLE_SYSTEM_ID\", \"CABLE_SEGMENT_ID\") VALUES ('CS001', 'SEG001'), ('CS001', 'SEG002');"}
{"sql_prompt": "Identify equipment names (eqp_name) that have triggered more than 5 critical alarms.", "sql": "SELECT eqp_name, COUNT(*) as critical_alarm_count FROM alarm WHERE severity = 'Critical' GROUP BY eqp_name HAVING COUNT(*) > 5;", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), severity character varying(250));\nINSERT INTO alarm (id, eqp_name, severity) VALUES (1, 'Router1', 'Critical'), (2, 'Router1', 'Critical'), (3, 'Router1', 'Critical'), (4, 'Router1', 'Critical'), (5, 'Router1', 'Critical'), (6, 'Router1', 'Critical'), (7, 'Switch1', 'Critical');"}
{"sql_prompt": "Show the ID and the time cleared for alarms that were resolved in the last 24 hours.", "sql": "SELECT id, time_cleared FROM alarm WHERE time_cleared >= NOW() - INTERVAL '24 hours';", "sql_context": "CREATE TABLE alarm (id bigint, time_cleared timestamp without time zone);\nINSERT INTO alarm (id, time_cleared) VALUES (401, NOW() - INTERVAL '10 hours'), (402, NOW() - INTERVAL '2 days');"}
{"sql_prompt": "Find the incident number and description for incidents where no person is assigned.", "sql": "SELECT incident_number, description FROM incident WHERE assigned_to IS NULL;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), description text, assigned_to character varying(100));\nINSERT INTO incident (incident_number, description, assigned_to) VALUES ('INC005', 'Server down', NULL), ('INC006', 'Login issue', 'John Doe');"}
{"sql_prompt": "Show the ID, severity, equipment name, and time raised for alarms with IDs 101, 205, or 310.", "sql": "SELECT id, severity, eqp_name, time_raised FROM alarm WHERE id IN (101, 205, 310);", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), eqp_name character varying(250), time_raised timestamp without time zone);\nINSERT INTO alarm (id, severity, eqp_name, time_raised) VALUES (101, 'Major', 'EQP-A', '2023-10-26 10:00:00'), (205, 'Minor', 'EQP-B', '2023-10-26 11:00:00'), (500, 'Critical', 'EQP-C', '2023-10-26 12:00:00');"}
{"sql_prompt": "Count the total number of incidents reported for each type of network element.", "sql": "SELECT network_element_type, COUNT(*) AS incident_count FROM incident GROUP BY network_element_type;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), network_element_type character varying(100));\nINSERT INTO incident (incident_number, network_element_type) VALUES ('INC010', 'Router'), ('INC011', 'Switch'), ('INC012', 'Router'), ('INC013', NULL);"}
{"sql_prompt": "What are the IP addresses and model codes for network elements physically located in 'Building 7'?", "sql": "SELECT eip.\"IP_ADDRESS\", ne.\"MODEL_CODE\" FROM network_elements AS ne JOIN equipment_ip_address AS eip ON ne.\"NETWORK_ELEMENT_ID\" = eip.\"NETWORK_ELEMENT_ID\" WHERE ne.\"LOCATION\" = 'Building 7';", "sql_context": "CREATE TABLE network_elements (index bigint, \"LOCATION\" text, \"NODE_NAME\" text, \"NETWORK_ELEMENT_ID\" bigint, \"NETWORK_ELEMENT_TYPE_CODE\" text, \"SERIAL_NUMBER\" bigint, \"ACTIVITY_STATUS_CODE\" text, \"MODEL_CODE\" text, \"VENDOR_NAME\" text, \"ELEMENT_CLASS_CODE\" text, \"ELEMENT_CLASS_DESC\" text, \"CARD_TYPE_ID\" double precision, \"SYSTEM_NAME\" text, \"LOCATION_SHORT_NAME\" text);\nCREATE TABLE equipment_ip_address (index bigint, \"NODE_NAME\" text, \"MODEL_CODE\" text, \"NETWORK_ELEMENT_ID\" bigint, \"CODE\" text, \"IP_ADDRESS\" text);\nINSERT INTO network_elements (\"NETWORK_ELEMENT_ID\", \"LOCATION\", \"MODEL_CODE\") VALUES (12345, 'Building 7', 'ASR9K'), (67890, 'Building 8', 'NCS55');\nINSERT INTO equipment_ip_address (\"NETWORK_ELEMENT_ID\", \"IP_ADDRESS\") VALUES (12345, '10.0.0.1'), (67890, '10.0.0.2');"}
{"sql_prompt": "List the names and addresses of all sites located within the 'Milan' province.", "sql": "SELECT \"SITE_NAME\", \"ADDRESS\" FROM sites WHERE \"PROVINCIA\" = 'Milan';", "sql_context": "CREATE TABLE sites (\"SITE_ID\" text, \"SITE_NAME\" text, \"LONGITUDE\" text, \"LATITUDE\" text, \"DISTRICT\" text, \"ADDRESS\" text, \"CIVICO\" text, \"CITY_NAME\" text, \"SITE_TYPE\" text, \"CUSTOMER\" text, \"SHORT_NAME\" text, \"ALTERNATIVE_NAME\" text, \"PROVINCE\" text, \"BUILDING_UNIQUE_ID\" text, \"CODICE_ISTAT\" double precision, \"REGIONE\" text, \"PROVINCIA\" text);\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"ADDRESS\", \"PROVINCIA\") VALUES ('S001', 'Central Office Milan', 'Via Roma 1', 'Milan'), ('S002', 'West Hub Rome', 'Via Appia 10', 'Rome');"}
{"sql_prompt": "Provide the IDs for all alarms that are currently set to inhibited.", "sql": "SELECT id FROM alarm WHERE inhibit = TRUE;", "sql_context": "CREATE TABLE alarm (id bigint, inhibit boolean);\nINSERT INTO alarm (id, inhibit) VALUES (501, TRUE), (502, FALSE), (503, TRUE);"}
{"sql_prompt": "Find the trail name and description for any leased lines identified by the code 'LL-SPEC-01'.", "sql": "SELECT \"TRAIL_NAME\", \"DESCRIPTION\" FROM leased_lines WHERE \"CODE\" = 'LL-SPEC-01';", "sql_context": "CREATE TABLE leased_lines (index bigint, \"SHORT_NAME\" text, \"LOCATION\" text, \"TRAIL_NAME\" text, \"NUMERO_TD\" text, \"CODE\" text, \"DESCRIPTION\" text);\nINSERT INTO leased_lines (\"CODE\", \"TRAIL_NAME\", \"DESCRIPTION\") VALUES ('LL-SPEC-01', 'FiberLink-A', 'Primary Leased Line'), ('LL-GEN-02', 'BackupLink-B', 'Secondary Backup');"}
{"sql_prompt": "How many incidents were opened on each specific date? Show the date and the count.", "sql": "SELECT DATE(created_date) AS open_date, COUNT(*) AS incident_count FROM incident GROUP BY open_date ORDER BY open_date;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), created_date timestamp without time zone);\nINSERT INTO incident (incident_number, created_date) VALUES ('INC020', '2023-10-26 08:30:00'), ('INC021', '2023-10-26 14:15:00'), ('INC022', '2023-10-25 10:00:00');"}
{"sql_prompt": "What is the description recorded for the piece of equipment having the short name 'EQ-RTR-CORE-1'?", "sql": "SELECT \"DESCRIPTION\" FROM equipment_details WHERE \"SHORT_NAME\" = 'EQ-RTR-CORE-1';", "sql_context": "CREATE TABLE equipment_details (index bigint, \"SHORT_NAME\" text, \"LOCATION\" text, \"TRAIL_NAME\" text, \"NUMERO_TD\" text, \"CODE\" text, \"DESCRIPTION\" text);\nINSERT INTO equipment_details (\"SHORT_NAME\", \"DESCRIPTION\") VALUES ('EQ-RTR-CORE-1', 'Core Router Main Site'), ('EQ-SW-ACC-2', 'Access Switch Floor 3');"}
{"sql_prompt": "For alarms concerning device type 'Router' and reported by the vendor 'Juniper', retrieve the associated alarm slogan.", "sql": "SELECT l.slogan FROM alarm a JOIN alarm_label l ON a.id = l.id WHERE a.device_type = 'Router' AND a.vendor = 'Juniper';", "sql_context": "CREATE TABLE alarm (id bigint, device_type character varying(250), vendor character varying(250));\nCREATE TABLE alarm_label (id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250));\nINSERT INTO alarm (id, device_type, vendor) VALUES (601, 'Router', 'Juniper'), (602, 'Switch', 'Juniper'), (603, 'Router', 'Cisco');\nINSERT INTO alarm_label (id, slogan) VALUES (601, 'BGP Session Down'), (602, 'Port Flapping'), (603, 'OSPF Adjacency Lost');"}
{"sql_prompt": "Find alarm IDs and their comments where the comments text contains the phrase 'power supply', ignoring case.", "sql": "SELECT id, comments FROM alarm WHERE comments ILIKE '%power supply%';", "sql_context": "CREATE TABLE alarm (id bigint, comments text);\nINSERT INTO alarm (id, comments) VALUES (701, 'Checked logs, seems related to power supply failure.'), (702, 'Interface configuration issue.'), (703, 'Alarm related to Power Supply unit B');"}
{"sql_prompt": "From the raw alarms data, list the notification ID and severity for entries that have a status of 'Active'.", "sql": "SELECT \"NOTIFICATION_ID\", \"SEVERITY\" FROM raw_alarms WHERE \"STATUS\" = 'Active';", "sql_context": "CREATE TABLE raw_alarms (\"ID\" bigint, \"ACK_USER_ID\" text, \"ADDITIONAL_TEXT\" text, \"ALARM_PRIMARY_KEY\" text, \"AREA\" text, \"BASE_ALARM_ACK_STATE\" text, \"BASE_PROBABLE_ALARM_CAUSE\" text, \"COMMENTS\" text, \"DETAIL\" double precision, \"DEVICE_NAME\" text, \"DEVICE_TYPE\" text, \"DISTRICT\" text, \"EMS_NAME\" text, \"EQP_NAME\" text, \"FROM_SITE\" text, \"KEYWORD\" text, \"NOTIFICATION_ID\" text, \"ORIGIN\" text, \"PROPOSED_REPAIR_ACTIONS\" text, \"RAW_PROBABLE_ALARM_CAUSE\" bigint, \"REMOTE_EQP_NAME\" text, \"REPEATED_COUNT\" bigint, \"SEVERITY\" text, \"SPECIFIC_PROBLEM\" text, \"STATUS\" text, \"TIME_ACK\" text, \"TIME_CLEARED\" text, \"TIME_DOWN\" text, \"TIME_RAISED\" text, \"TIME_UP\" double precision, \"TIME_UPDATE\" text, \"TYPE\" text, \"VENDOR\" text, \"PARENT_ALARM_PRIMARY_KEY\" text, \"TT_ID\" text, \"MODULE_NAME\" text, \"INHIBIT\" text, \"COMMENT_USER_ID\" text, \"RAW_ALARM_TYPE\" text, \"TIME_COMMENT\" text, \"TT_STATUS\" text, \"TIME_TT_LAST_UPDATE\" text, \"PLANNED_WORK\" text, \"ACCESS_ID\" text, \"ACCESS_TYPE\" text, \"ACTION_CODE\" text, \"ELEMENT_STATUS\" double precision, \"EQP_NAME2\" text, \"EQP_TYPE\" double precision, \"TOPOLOGY\" text, \"TT_ASSOCIATION_TYPE\" text);\nINSERT INTO raw_alarms (\"ID\", \"NOTIFICATION_ID\", \"SEVERITY\", \"STATUS\") VALUES (1, 'NID001', 'Critical', 'Active'), (2, 'NID002', 'Major', 'Cleared'), (3, 'NID003', 'Warning', 'Active');"}
{"sql_prompt": "Show the site ID and the list of equipment involved for any outages reported by the username 'user_admin'.", "sql": "SELECT site_id, equipment_list FROM outage WHERE username = 'user_admin';", "sql_context": "CREATE TABLE outage (outage_id integer, site_id character varying(50), ts_start_disruption timestamp without time zone, equipment_list character varying(100), status character varying(50), username character varying(100), latitude numeric(9,6), longitude numeric(9,6));\nINSERT INTO outage (outage_id, site_id, equipment_list, username) VALUES (1, 'SITE01', 'Router1, Switch2', 'user_admin'), (2, 'SITE02', 'Server3', 'tech_user');"}
{"sql_prompt": "What are the names and current statuses of services that belong to domain 5?", "sql": "SELECT \"SERVICE_NAME\", \"STATUS\" FROM service WHERE \"DOMAIN\" = 5;", "sql_context": "CREATE TABLE service (\"SERVICE_ID\" text, \"HIERARCHY_ID\" double precision, \"SERVICE_NAME\" text, \"STATUS\" text, \"A_NETWORK_ADDRESS\" text, \"B_NETWORK_ADDRESS\" text, \"V52_NUMBER\" double precision, \"LINK_ID\" double precision, \"NA_IMA_GROUP\" text, \"CIRCUIT_COUNT\" bigint, \"CHANNEL_COUNT\" double precision, \"MARKET_DESTINATION\" text, \"ACCESS_TYPE\" text, \"ASSOCIATED_SERVICE\" text, \"PROVISIONING_STATUS\" text, \"CLI\" text, \"DOMAIN\" bigint);\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"STATUS\", \"DOMAIN\") VALUES ('SVC001', 'VPN-CustomerA', 'Active', 5), ('SVC002', 'Internet-BranchX', 'Inactive', 6), ('SVC003', 'VoIP-MainOffice', 'Active', 5);"}
{"sql_prompt": "Find the card type and status code for cards installed in the network element named 'CoreRouter-1'.", "sql": "SELECT rmm.\"CARD_TYPE\", rmm.\"CARD_STATUS_CODE\" FROM network_elements ne JOIN rmm_equipment_details rmm ON ne.\"NODE_NAME\" = rmm.\"NETWORK_ELEMENT_NAME\" WHERE ne.\"NODE_NAME\" = 'CoreRouter-1';", "sql_context": "CREATE TABLE network_elements (index bigint, \"LOCATION\" text, \"NODE_NAME\" text, \"NETWORK_ELEMENT_ID\" bigint, \"NETWORK_ELEMENT_TYPE_CODE\" text, \"SERIAL_NUMBER\" bigint, \"ACTIVITY_STATUS_CODE\" text, \"MODEL_CODE\" text, \"VENDOR_NAME\" text, \"ELEMENT_CLASS_CODE\" text, \"ELEMENT_CLASS_DESC\" text, \"CARD_TYPE_ID\" double precision, \"SYSTEM_NAME\" text, \"LOCATION_SHORT_NAME\" text);\nCREATE TABLE rmm_equipment_details (\"NETWORK_ELEMENT_NAME\" text, \"NETWORK_ELEMENT_MODEL\" text, \"NODE_NAME\" text, \"SLOT_NAME\" text, \"SLOT_NUMBER\" double precision, \"SHELF_NAME\" text, \"SHELF_DESCRIPTION\" text, \"CARD_TYPE\" text, \"CARD_NAME\" text, \"VENDOR_CARD_CODE\" text, \"CARD_STATUS_CODE\" text, \"CARD_VENDOR_NAME\" text);\nINSERT INTO network_elements (\"NODE_NAME\", \"NETWORK_ELEMENT_ID\") VALUES ('CoreRouter-1', 1001), ('EdgeSwitch-2', 1002);\nINSERT INTO rmm_equipment_details (\"NETWORK_ELEMENT_NAME\", \"NODE_NAME\", \"CARD_TYPE\", \"CARD_STATUS_CODE\") VALUES ('CoreRouter-1', 'CoreRouter-1', 'LineCard-10G', 'ACTIVE'), ('CoreRouter-1', 'CoreRouter-1', 'MgmtCard', 'ACTIVE'), ('EdgeSwitch-2', 'EdgeSwitch-2', 'Module-48P', 'STANDBY');"}
{"sql_prompt": "List the names of all Ethernet paths that currently have an 'Operational' status.", "sql": "SELECT \"NAME\" FROM path_ethernet WHERE \"PATH_ETHERNET_STATUS\" = 'Operational';", "sql_context": "CREATE TABLE path_ethernet (index bigint, \"VLAN_ID\" bigint, \"VPLS_ID\" double precision, \"PATH_ETHERNET_ID\" bigint, \"PATH_ETHERNET_STATUS\" text, \"NAME\" text);\nINSERT INTO path_ethernet (\"PATH_ETHERNET_ID\", \"NAME\", \"PATH_ETHERNET_STATUS\") VALUES (801, 'Path-A-to-B', 'Operational'), (802, 'Path-C-to-D', 'Maintenance'), (803, 'Path-E-to-F', 'Operational');"}
{"sql_prompt": "Find the ID, equipment name, and time raised for critical alarms that occurred between 9 AM and 5 PM on October 25th, 2023, and have not yet been cleared.", "sql": "SELECT id, eqp_name, time_raised FROM alarm WHERE severity = 'Critical' AND time_cleared IS NULL AND time_raised >= '2023-10-25 09:00:00' AND time_raised < '2023-10-25 17:00:00';", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), eqp_name character varying(250), time_raised timestamp without time zone, time_cleared timestamp without time zone);\nINSERT INTO alarm (id, severity, eqp_name, time_raised, time_cleared) VALUES (901, 'Critical', 'EQP-X', '2023-10-25 10:30:00', NULL), (902, 'Critical', 'EQP-Y', '2023-10-25 08:00:00', NULL), (903, 'Critical', 'EQP-Z', '2023-10-25 11:00:00', '2023-10-25 11:30:00'), (904, 'Major', 'EQP-A', '2023-10-25 14:00:00', NULL);"}
{"sql_prompt": "Show the unique device types recorded in the alarm table.", "sql": "SELECT DISTINCT device_type FROM alarm;", "sql_context": "CREATE TABLE alarm (id bigint, device_type character varying(250));\nINSERT INTO alarm (id, device_type) VALUES (1001, 'Router'), (1002, 'Switch'), (1003, 'Router'), (1004, 'Firewall');"}
{"sql_prompt": "List all alarm IDs and their corresponding severity levels.", "sql": "SELECT id, severity FROM alarm;", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250));\nINSERT INTO alarm (id, severity) VALUES (101, 'Critical');\nINSERT INTO alarm (id, severity) VALUES (102, 'Major');"}
{"sql_prompt": "Retrieve all information for the specific alarm with ID 5678.", "sql": "SELECT * FROM alarm WHERE id = 5678;", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, severity, device_name) VALUES (5678, 'Warning', 'Router-A');"}
{"sql_prompt": "Display the device name and severity for all critical alarms, sorting them by the time they were raised in descending order (most recent first).", "sql": "SELECT device_name, severity FROM alarm WHERE severity = 'Critical' ORDER BY time_raised DESC;", "sql_context": "CREATE TABLE alarm (device_name character varying(250), severity character varying(250), time_raised timestamp without time zone);\nINSERT INTO alarm (device_name, severity, time_raised) VALUES ('Switch-X', 'Critical', '2023-10-26 10:00:00');\nINSERT INTO alarm (device_name, severity, time_raised) VALUES ('Server-Y', 'Critical', '2023-10-26 11:30:00');"}
{"sql_prompt": "Count how many alarms exist for each distinct severity level.", "sql": "SELECT severity, COUNT(*) FROM alarm GROUP BY severity;", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250));\nINSERT INTO alarm (id, severity) VALUES (1, 'Critical');\nINSERT INTO alarm (id, severity) VALUES (2, 'Major');\nINSERT INTO alarm (id, severity) VALUES (3, 'Critical');"}
{"sql_prompt": "Show the alarm ID, severity, and description (slogan) for alarms belonging to the 'Network' domain.", "sql": "SELECT alarm_id, severity, description FROM v_alarms WHERE domain = 'Network';", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), eqp_name character varying(250), from_site character varying(250), remote_eqp_name character varying(250), time_up timestamp without time zone, time_down timestamp without time zone, additional_text character varying(250), vendor character varying(250), raw_alarm_type character varying(250), device_name character varying(250), device_type character varying(250), tt_id character varying(250), ems_name character varying(250), time_cleared timestamp without time zone);\nCREATE TABLE alarm_label (id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250));\nCREATE VIEW v_alarms AS SELECT a.id AS alarm_id, a.severity, a.eqp_name, a.from_site, a.remote_eqp_name, a.time_up, a.time_down, l.slogan AS description, a.additional_text, a.vendor, a.raw_alarm_type AS alarm_type, a.device_name, a.device_type, l.domain_id AS domain, a.tt_id, a.ems_name, a.time_cleared AS ts_cleared FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO alarm (id, severity) VALUES (10, 'Major');\nINSERT INTO alarm_label (id, domain_id, slogan) VALUES (10, 'Network', 'Link Down');\nINSERT INTO alarm (id, severity) VALUES (11, 'Minor');\nINSERT INTO alarm_label (id, domain_id, slogan) VALUES (11, 'Server', 'High CPU');"}
{"sql_prompt": "List all alarms that were raised after midnight on October 25th, 2023.", "sql": "SELECT id, severity, time_raised FROM alarm WHERE time_raised > '2023-10-25 00:00:00';", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), time_raised timestamp without time zone);\nINSERT INTO alarm (id, severity, time_raised) VALUES (201, 'Warning', '2023-10-24 15:00:00');\nINSERT INTO alarm (id, severity, time_raised) VALUES (202, 'Critical', '2023-10-26 09:00:00');"}
{"sql_prompt": "Find all alarms where the device name includes the word 'Router'.", "sql": "SELECT id, device_name, severity FROM alarm WHERE device_name LIKE '%Router%';", "sql_context": "CREATE TABLE alarm (id bigint, device_name character varying(250), severity character varying(250));\nINSERT INTO alarm (id, device_name, severity) VALUES (301, 'Core-Router-1', 'Major');\nINSERT INTO alarm (id, device_name, severity) VALUES (302, 'Access-Switch-A', 'Minor');\nINSERT INTO alarm (id, device_name, severity) VALUES (303, 'EdgeRouter-SiteB', 'Critical');"}
{"sql_prompt": "Provide the names and types for every site recorded.", "sql": "SELECT \"SITE_NAME\", \"SITE_TYPE\" FROM sites;", "sql_context": "CREATE TABLE sites (\"SITE_ID\" text, \"SITE_NAME\" text, \"LONGITUDE\" text, \"LATITUDE\" text, \"DISTRICT\" text, \"ADDRESS\" text, \"CIVICO\" text, \"CITY_NAME\" text, \"SITE_TYPE\" text, \"CUSTOMER\" text, \"SHORT_NAME\" text, \"ALTERNATIVE_NAME\" text, \"PROVINCE\" text, \"BUILDING_UNIQUE_ID\" text, \"CODICE_ISTAT\" double precision, \"REGIONE\" text, \"PROVINCIA\" text);\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"SITE_TYPE\") VALUES ('S001', 'Central Office A', 'CO');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"SITE_TYPE\") VALUES ('S002', 'Customer Premise B', 'CP');"}
{"sql_prompt": "List the site names and full addresses for sites located in the 'North' district, ordered alphabetically by site name.", "sql": "SELECT \"SITE_NAME\", \"ADDRESS\" FROM sites WHERE \"DISTRICT\" = 'North' ORDER BY \"SITE_NAME\";", "sql_context": "CREATE TABLE sites (\"SITE_ID\" text, \"SITE_NAME\" text, \"LONGITUDE\" text, \"LATITUDE\" text, \"DISTRICT\" text, \"ADDRESS\" text, \"CIVICO\" text, \"CITY_NAME\" text, \"SITE_TYPE\" text, \"CUSTOMER\" text, \"SHORT_NAME\" text, \"ALTERNATIVE_NAME\" text, \"PROVINCE\" text, \"BUILDING_UNIQUE_ID\" text, \"CODICE_ISTAT\" double precision, \"REGIONE\" text, \"PROVINCIA\" text);\nINSERT INTO sites (\"SITE_NAME\", \"ADDRESS\", \"DISTRICT\") VALUES ('North Hub', '123 North St', 'North');\nINSERT INTO sites (\"SITE_NAME\", \"ADDRESS\", \"DISTRICT\") VALUES ('West Hub', '456 West Ave', 'West');\nINSERT INTO sites (\"SITE_NAME\", \"ADDRESS\", \"DISTRICT\") VALUES ('Alpha Site', '789 Alpha Rd', 'North');"}
{"sql_prompt": "Identify the names of all cable segments associated with the cable system named 'TRANSATLANTIC-1'.", "sql": "SELECT cs.\"CABLE_SEGMENT_NAME\" FROM cable_system c JOIN cl_clsegm_rel rel ON c.\"CABLE_SYSTEM_ID\" = rel.\"CABLE_SYSTEM_ID\" JOIN cablesegment cs ON rel.\"CABLE_SEGMENT_ID\" = cs.\"CABLE_SEGMENT_ID\" WHERE c.\"CABLE_SYSTEM_NAME\" = 'TRANSATLANTIC-1';", "sql_context": "CREATE TABLE cable_system (index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SYSTEM_NAME\" text, \"CABLE_TYPE\" text, \"SITE_A_ID\" text, \"SITE_B_ID\" text);\nCREATE TABLE cablesegment (index bigint, \"CABLE_SEGMENT_ID\" text, \"CABLE_SEGMENT_NAME\" text, \"CABLE_TYPE\" text, \"STATUS\" double precision, \"SITE_CABINET_A_ID\" text, \"SITE_CABINET_B_ID\" text, \"SYNTHETIC_NAME\" text);\nCREATE TABLE cl_clsegm_rel (index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SEGMENT_ID\" text);\nINSERT INTO cable_system (index, \"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\") VALUES (1, 'CSYS001', 'TRANSATLANTIC-1');\nINSERT INTO cablesegment (index, \"CABLE_SEGMENT_ID\", \"CABLE_SEGMENT_NAME\") VALUES (1, 'SEG001A', 'Segment A1');\nINSERT INTO cablesegment (index, \"CABLE_SEGMENT_ID\", \"CABLE_SEGMENT_NAME\") VALUES (2, 'SEG001B', 'Segment B1');\nINSERT INTO cl_clsegm_rel (index, \"CABLE_SYSTEM_ID\", \"CABLE_SEGMENT_ID\") VALUES (1, 'CSYS001', 'SEG001A');\nINSERT INTO cl_clsegm_rel (index, \"CABLE_SYSTEM_ID\", \"CABLE_SEGMENT_ID\") VALUES (2, 'CSYS001', 'SEG001B');"}
{"sql_prompt": "Show me the incident number and a brief description for every recorded incident.", "sql": "SELECT incident_number, short_description FROM incident;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), short_description text);\nINSERT INTO incident (incident_number, short_description) VALUES ('INC00123', 'Network outage reported');\nINSERT INTO incident (incident_number, short_description) VALUES ('INC00124', 'Server performance degradation');"}
{"sql_prompt": "Find the incident numbers for tickets assigned to the 'Network Team' that currently have a status code indicating 'In Progress' (status code 2).", "sql": "SELECT incident_number FROM incident WHERE assignment_group = 'Network Team' AND status = 2;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), assignment_group character varying(100), status integer);\nINSERT INTO incident (incident_number, assignment_group, status) VALUES ('INC00500', 'Network Team', 2);\nINSERT INTO incident (incident_number, assignment_group, status) VALUES ('INC00501', 'Server Team', 2);\nINSERT INTO incident (incident_number, assignment_group, status) VALUES ('INC00502', 'Network Team', 6);"}
{"sql_prompt": "Calculate the average number of times incidents have been reassigned.", "sql": "SELECT AVG(assignment_count) FROM incident;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), assignment_count integer);\nINSERT INTO incident (incident_number, assignment_count) VALUES ('INC00600', 3);\nINSERT INTO incident (incident_number, assignment_count) VALUES ('INC00601', 5);"}
{"sql_prompt": "For alarms that are associated with an incident ticket (tt_id), display the alarm ID, its severity, and the corresponding incident number.", "sql": "SELECT a.id, a.severity, i.incident_number FROM alarm a JOIN incident i ON a.tt_id = i.incident_number;", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), tt_id character varying(250));\nCREATE TABLE incident (incident_number character varying(50), description text);\nINSERT INTO alarm (id, severity, tt_id) VALUES (701, 'Critical', 'INC00701');\nINSERT INTO alarm (id, severity, tt_id) VALUES (702, 'Major', NULL);\nINSERT INTO incident (incident_number, description) VALUES ('INC00701', 'Router failure');\nINSERT INTO incident (incident_number, description) VALUES ('INC00702', 'Application slow');"}
{"sql_prompt": "List the node name and model code for all network elements manufactured by 'Cisco'.", "sql": "SELECT \"NODE_NAME\", \"MODEL_CODE\" FROM network_elements WHERE \"VENDOR_NAME\" = 'Cisco';", "sql_context": "CREATE TABLE network_elements (index bigint, \"LOCATION\" text, \"NODE_NAME\" text, \"NETWORK_ELEMENT_ID\" bigint, \"NETWORK_ELEMENT_TYPE_CODE\" text, \"SERIAL_NUMBER\" bigint, \"ACTIVITY_STATUS_CODE\" text, \"MODEL_CODE\" text, \"VENDOR_NAME\" text, \"ELEMENT_CLASS_CODE\" text, \"ELEMENT_CLASS_DESC\" text, \"CARD_TYPE_ID\" double precision, \"SYSTEM_NAME\" text, \"LOCATION_SHORT_NAME\" text);\nINSERT INTO network_elements (index, \"NODE_NAME\", \"MODEL_CODE\", \"VENDOR_NAME\") VALUES (1, 'CoreSW-1', 'NCS-5500', 'Cisco');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"MODEL_CODE\", \"VENDOR_NAME\") VALUES (2, 'EdgeRTR-2', 'MX960', 'Juniper');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"MODEL_CODE\", \"VENDOR_NAME\") VALUES (3, 'AccessSW-3', 'CAT-9300', 'Cisco');"}
{"sql_prompt": "What is the IP address assigned to the network element named 'CoreSW-1'?", "sql": "SELECT ip.\"IP_ADDRESS\" FROM network_elements ne JOIN equipment_ip_address ip ON ne.\"NETWORK_ELEMENT_ID\" = ip.\"NETWORK_ELEMENT_ID\" WHERE ne.\"NODE_NAME\" = 'CoreSW-1';", "sql_context": "CREATE TABLE network_elements (index bigint, \"NODE_NAME\" text, \"NETWORK_ELEMENT_ID\" bigint);\nCREATE TABLE equipment_ip_address (index bigint, \"NODE_NAME\" text, \"MODEL_CODE\" text, \"NETWORK_ELEMENT_ID\" bigint, \"CODE\" text, \"IP_ADDRESS\" text);\nINSERT INTO network_elements (index, \"NODE_NAME\", \"NETWORK_ELEMENT_ID\") VALUES (1, 'CoreSW-1', 1001);\nINSERT INTO network_elements (index, \"NODE_NAME\", \"NETWORK_ELEMENT_ID\") VALUES (2, 'EdgeRTR-2', 1002);\nINSERT INTO equipment_ip_address (index, \"NETWORK_ELEMENT_ID\", \"IP_ADDRESS\") VALUES (1, 1001, '192.168.1.1');\nINSERT INTO equipment_ip_address (index, \"NETWORK_ELEMENT_ID\", \"IP_ADDRESS\") VALUES (2, 1002, '10.0.0.1');"}
{"sql_prompt": "Show the description and equipment name for critical alarms originating from 'Nokia' equipment, ordered by the time the alarm was cleared.", "sql": "SELECT description, eqp_name FROM v_alarms WHERE severity = 'Critical' AND vendor = 'Nokia' ORDER BY ts_cleared;", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), eqp_name character varying(250), from_site character varying(250), remote_eqp_name character varying(250), time_up timestamp without time zone, time_down timestamp without time zone, additional_text character varying(250), vendor character varying(250), raw_alarm_type character varying(250), device_name character varying(250), device_type character varying(250), tt_id character varying(250), ems_name character varying(250), time_cleared timestamp without time zone);\nCREATE TABLE alarm_label (id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250));\nCREATE VIEW v_alarms AS SELECT a.id AS alarm_id, a.severity, a.eqp_name, a.from_site, a.remote_eqp_name, a.time_up, a.time_down, l.slogan AS description, a.additional_text, a.vendor, a.raw_alarm_type AS alarm_type, a.device_name, a.device_type, l.domain_id AS domain, a.tt_id, a.ems_name, a.time_cleared AS ts_cleared FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO alarm (id, severity, eqp_name, vendor, time_cleared) VALUES (801, 'Critical', 'NE40E', 'Nokia', '2023-10-26 14:00:00');\nINSERT INTO alarm (id, severity, eqp_name, vendor, time_cleared) VALUES (802, 'Critical', '7750-SR', 'Nokia', '2023-10-26 13:00:00');\nINSERT INTO alarm_label (id, slogan, domain_id) VALUES (801, 'Power Supply Failed', 'HW');\nINSERT INTO alarm_label (id, slogan, domain_id) VALUES (802, 'Interface Down', 'NW');"}
{"sql_prompt": "Provide a count of incidents grouped by their category.", "sql": "SELECT category, COUNT(*) FROM incident GROUP BY category;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), category character varying(100));\nINSERT INTO incident (incident_number, category) VALUES ('INC00901', 'Network');\nINSERT INTO incident (incident_number, category) VALUES ('INC00902', 'Software');\nINSERT INTO incident (incident_number, category) VALUES ('INC00903', 'Network');"}
{"sql_prompt": "List the IDs of all alarms that are currently marked as inhibited.", "sql": "SELECT id FROM alarm WHERE inhibit = TRUE;", "sql_context": "CREATE TABLE alarm (id bigint, inhibit boolean);\nINSERT INTO alarm (id, inhibit) VALUES (1001, TRUE);\nINSERT INTO alarm (id, inhibit) VALUES (1002, FALSE);"}
{"sql_prompt": "Find the description of any equipment located at the site named 'Central Office A'.", "sql": "SELECT ed.\"DESCRIPTION\" FROM sites s JOIN network_elements ne ON s.\"SHORT_NAME\" = ne.\"LOCATION_SHORT_NAME\" JOIN equipment_details ed ON ne.\"NODE_NAME\" = ed.\"SHORT_NAME\" WHERE s.\"SITE_NAME\" = 'Central Office A';", "sql_context": "CREATE TABLE sites (\"SITE_ID\" text, \"SITE_NAME\" text, \"SHORT_NAME\" text);\nCREATE TABLE network_elements (index bigint, \"NODE_NAME\" text, \"LOCATION_SHORT_NAME\" text, \"NETWORK_ELEMENT_ID\" bigint);\nCREATE TABLE equipment_details (index bigint, \"SHORT_NAME\" text, \"LOCATION\" text, \"TRAIL_NAME\" text, \"NUMERO_TD\" text, \"CODE\" text, \"DESCRIPTION\" text);\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"SHORT_NAME\") VALUES ('S001', 'Central Office A', 'CO-A');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"SHORT_NAME\") VALUES ('S002', 'Data Center B', 'DC-B');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"LOCATION_SHORT_NAME\", \"NETWORK_ELEMENT_ID\") VALUES (1, 'Router-CO-A-1', 'CO-A', 2001);\nINSERT INTO network_elements (index, \"NODE_NAME\", \"LOCATION_SHORT_NAME\", \"NETWORK_ELEMENT_ID\") VALUES (2, 'Switch-DC-B-1', 'DC-B', 2002);\nINSERT INTO equipment_details (index, \"SHORT_NAME\", \"DESCRIPTION\") VALUES (1, 'Router-CO-A-1', 'Main Core Router');\nINSERT INTO equipment_details (index, \"SHORT_NAME\", \"DESCRIPTION\") VALUES (2, 'Switch-DC-B-1', 'Top of Rack Switch');"}
{"sql_prompt": "Show the start time and the list of affected equipment for any outages recorded for site 'SITE-005'.", "sql": "SELECT ts_start_disruption, equipment_list FROM outage WHERE site_id = 'SITE-005';", "sql_context": "CREATE TABLE outage (outage_id integer, site_id character varying(50), ts_start_disruption timestamp without time zone, equipment_list character varying(100), status character varying(50), username character varying(100), latitude numeric(9,6), longitude numeric(9,6));\nINSERT INTO outage (outage_id, site_id, ts_start_disruption, equipment_list) VALUES (1, 'SITE-005', '2023-10-26 08:00:00', 'Router1, Switch2');\nINSERT INTO outage (outage_id, site_id, ts_start_disruption, equipment_list) VALUES (2, 'SITE-006', '2023-10-26 09:30:00', 'ServerA');"}
{"sql_prompt": "Get the additional text associated with the raw alarm identified by the primary key 'ALM-XYZ-123'.", "sql": "SELECT \"ADDITIONAL_TEXT\" FROM raw_alarms WHERE \"ALARM_PRIMARY_KEY\" = 'ALM-XYZ-123';", "sql_context": "CREATE TABLE raw_alarms (\"ID\" bigint, \"ACK_USER_ID\" text, \"ADDITIONAL_TEXT\" text, \"ALARM_PRIMARY_KEY\" text, \"AREA\" text, \"BASE_ALARM_ACK_STATE\" text, \"BASE_PROBABLE_ALARM_CAUSE\" text, \"COMMENTS\" text, \"DETAIL\" double precision, \"DEVICE_NAME\" text, \"DEVICE_TYPE\" text, \"DISTRICT\" text, \"EMS_NAME\" text, \"EQP_NAME\" text, \"FROM_SITE\" text, \"KEYWORD\" text, \"NOTIFICATION_ID\" text, \"ORIGIN\" text, \"PROPOSED_REPAIR_ACTIONS\" text, \"RAW_PROBABLE_ALARM_CAUSE\" bigint, \"REMOTE_EQP_NAME\" text, \"REPEATED_COUNT\" bigint, \"SEVERITY\" text, \"SPECIFIC_PROBLEM\" text, \"STATUS\" text, \"TIME_ACK\" text, \"TIME_CLEARED\" text, \"TIME_DOWN\" text, \"TIME_RAISED\" text, \"TIME_UP\" double precision, \"TIME_UPDATE\" text, \"TYPE\" text, \"VENDOR\" text, \"PARENT_ALARM_PRIMARY_KEY\" text, \"TT_ID\" text, \"MODULE_NAME\" text, \"INHIBIT\" text, \"COMMENT_USER_ID\" text, \"RAW_ALARM_TYPE\" text, \"TIME_COMMENT\" text, \"TT_STATUS\" text, \"TIME_TT_LAST_UPDATE\" text, \"PLANNED_WORK\" text, \"ACCESS_ID\" text, \"ACCESS_TYPE\" text, \"ACTION_CODE\" text, \"ELEMENT_STATUS\" double precision, \"EQP_NAME2\" text, \"EQP_TYPE\" double precision, \"TOPOLOGY\" text, \"TT_ASSOCIATION_TYPE\" text);\nINSERT INTO raw_alarms (\"ID\", \"ALARM_PRIMARY_KEY\", \"ADDITIONAL_TEXT\") VALUES (5001, 'ALM-XYZ-123', 'Temperature threshold exceeded');\nINSERT INTO raw_alarms (\"ID\", \"ALARM_PRIMARY_KEY\", \"ADDITIONAL_TEXT\") VALUES (5002, 'ALM-ABC-456', 'Fan failure detected');"}
{"sql_prompt": "List all the unique vendor names found in the alarm records.", "sql": "SELECT DISTINCT vendor FROM alarm;", "sql_context": "CREATE TABLE alarm (id bigint, vendor character varying(250));\nINSERT INTO alarm (id, vendor) VALUES (1, 'Cisco');\nINSERT INTO alarm (id, vendor) VALUES (2, 'Nokia');\nINSERT INTO alarm (id, vendor) VALUES (3, 'Cisco');"}
{"sql_prompt": "Show the alarm ID and the time it was acknowledged for any alarms acknowledged by the user 'john.doe'.", "sql": "SELECT id, time_ack FROM alarm WHERE ack_user_id = 'john.doe';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), time_ack timestamp without time zone);\nINSERT INTO alarm (id, ack_user_id, time_ack) VALUES (1101, 'john.doe', '2023-10-26 10:15:00');\nINSERT INTO alarm (id, ack_user_id, time_ack) VALUES (1102, 'jane.smith', '2023-10-26 11:00:00');\nINSERT INTO alarm (id, ack_user_id, time_ack) VALUES (1103, 'john.doe', '2023-10-26 11:45:00');"}
{"sql_prompt": "What are the names and current statuses of Mobile PE devices associated with VLAN ID 100?", "sql": "SELECT \"PE_NAME\", \"PE_STATUS\" FROM mobile_pe WHERE \"VLAN_ID\" = 100;", "sql_context": "CREATE TABLE mobile_pe (index bigint, \"VLAN_ID\" double precision, \"LOGICAL_LINK_ID\" double precision, \"PE_ID\" bigint, \"PE_NAME\" text, \"PE_STATUS\" text, \"ENTITY_TYPE\" text, \"POSITION\" bigint);\nINSERT INTO mobile_pe (index, \"VLAN_ID\", \"PE_NAME\", \"PE_STATUS\") VALUES (1, 100, 'PE-A-100', 'Active');\nINSERT INTO mobile_pe (index, \"VLAN_ID\", \"PE_NAME\", \"PE_STATUS\") VALUES (2, 200, 'PE-B-200', 'Standby');\nINSERT INTO mobile_pe (index, \"VLAN_ID\", \"PE_NAME\", \"PE_STATUS\") VALUES (3, 100, 'PE-C-100', 'Active');"}
{"sql_prompt": "List the PE names and their corresponding PEIP models for devices related to VLAN ID 50.", "sql": "SELECT pe.\"PE_NAME\", peip.\"PEIP_MODEL\" FROM mobile_pe pe JOIN mobile_peip peip ON pe.\"VLAN_ID\" = peip.\"VLAN_ID\" WHERE pe.\"VLAN_ID\" = 50;", "sql_context": "CREATE TABLE mobile_pe (index bigint, \"VLAN_ID\" double precision, \"PE_ID\" bigint, \"PE_NAME\" text);\nCREATE TABLE mobile_peip (index bigint, \"VLAN_ID\" double precision, \"PEIP_ID\" bigint, \"SUBNET\" double precision, \"TXP\" text, \"ENTITY_TYPE\" text, \"VPNL3_ID\" double precision, \"PEIP_MODEL\" text, \"POSITION\" bigint, \"STATUS\" text);\nINSERT INTO mobile_pe (index, \"VLAN_ID\", \"PE_ID\", \"PE_NAME\") VALUES (1, 50, 5001, 'PE-SOUTH-1');\nINSERT INTO mobile_pe (index, \"VLAN_ID\", \"PE_ID\", \"PE_NAME\") VALUES (2, 60, 6001, 'PE-NORTH-1');\nINSERT INTO mobile_peip (index, \"VLAN_ID\", \"PEIP_ID\", \"PEIP_MODEL\") VALUES (1, 50, 5101, 'ModelX');\nINSERT INTO mobile_peip (index, \"VLAN_ID\", \"PEIP_ID\", \"PEIP_MODEL\") VALUES (2, 50, 5102, 'ModelY');\nINSERT INTO mobile_peip (index, \"VLAN_ID\", \"PEIP_ID\", \"PEIP_MODEL\") VALUES (3, 60, 6101, 'ModelZ');"}
{"sql_prompt": "Display the service name and any associated service for all services currently marked as 'ACTIVE'.", "sql": "SELECT \"SERVICE_NAME\", \"ASSOCIATED_SERVICE\" FROM service WHERE \"STATUS\" = 'ACTIVE';", "sql_context": "CREATE TABLE service (\"SERVICE_ID\" text, \"HIERARCHY_ID\" double precision, \"SERVICE_NAME\" text, \"STATUS\" text, \"A_NETWORK_ADDRESS\" text, \"B_NETWORK_ADDRESS\" text, \"V52_NUMBER\" double precision, \"LINK_ID\" double precision, \"NA_IMA_GROUP\" text, \"CIRCUIT_COUNT\" bigint, \"CHANNEL_COUNT\" double precision, \"MARKET_DESTINATION\" text, \"ACCESS_TYPE\" text, \"ASSOCIATED_SERVICE\" text, \"PROVISIONING_STATUS\" text, \"CLI\" text, \"DOMAIN\" bigint);\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"STATUS\", \"ASSOCIATED_SERVICE\") VALUES ('SVC001', 'VPN-CustomerA', 'ACTIVE', 'LINK001');\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"STATUS\", \"ASSOCIATED_SERVICE\") VALUES ('SVC002', 'Internet-BranchB', 'INACTIVE', 'LINK002');\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"STATUS\", \"ASSOCIATED_SERVICE\") VALUES ('SVC003', 'VoIP-HQ', 'ACTIVE', 'LINK003');"}
{"sql_prompt": "How many distinct alarms were raised between 9:00 AM and 12:00 PM on October 26th, 2023?", "sql": "SELECT COUNT(*) FROM alarm WHERE time_raised >= '2023-10-26 09:00:00' AND time_raised < '2023-10-26 12:00:00';", "sql_context": "CREATE TABLE alarm (id bigint, time_raised timestamp without time zone);\nINSERT INTO alarm (id, time_raised) VALUES (1201, '2023-10-26 08:30:00');\nINSERT INTO alarm (id, time_raised) VALUES (1202, '2023-10-26 09:15:00');\nINSERT INTO alarm (id, time_raised) VALUES (1203, '2023-10-26 11:45:00');\nINSERT INTO alarm (id, time_raised) VALUES (1204, '2023-10-26 13:00:00');"}
{"sql_prompt": "Identify the card type and status code for the equipment installed in 'Slot-3' on the node named 'AGG-Router-1'.", "sql": "SELECT \"CARD_TYPE\", \"CARD_STATUS_CODE\" FROM rmm_equipment_details WHERE \"NODE_NAME\" = 'AGG-Router-1' AND \"SLOT_NAME\" = 'Slot-3';", "sql_context": "CREATE TABLE rmm_equipment_details (\"NETWORK_ELEMENT_NAME\" text, \"NETWORK_ELEMENT_MODEL\" text, \"NODE_NAME\" text, \"SLOT_NAME\" text, \"SLOT_NUMBER\" double precision, \"SHELF_NAME\" text, \"SHELF_DESCRIPTION\" text, \"CARD_TYPE\" text, \"CARD_NAME\" text, \"VENDOR_CARD_CODE\" text, \"CARD_STATUS_CODE\" text, \"CARD_VENDOR_NAME\" text);\nINSERT INTO rmm_equipment_details (\"NODE_NAME\", \"SLOT_NAME\", \"CARD_TYPE\", \"CARD_STATUS_CODE\") VALUES ('AGG-Router-1', 'Slot-1', 'LineCard-10G', 'ACTIVE');\nINSERT INTO rmm_equipment_details (\"NODE_NAME\", \"SLOT_NAME\", \"CARD_TYPE\", \"CARD_STATUS_CODE\") VALUES ('AGG-Router-1', 'Slot-3', 'LineCard-100G', 'ACTIVE');\nINSERT INTO rmm_equipment_details (\"NODE_NAME\", \"SLOT_NAME\", \"CARD_TYPE\", \"CARD_STATUS_CODE\") VALUES ('CORE-Switch-2', 'Slot-1', 'MgmtCard', 'STANDBY');"}
{"sql_prompt": "Show the ID, severity, and device name for critical alarms that have occurred more than 5 times and are still unacknowledged.", "sql": "WITH CriticalRepeatedAlarms AS ( SELECT id, severity, device_name, ack_user_id FROM alarm WHERE severity = 'Critical' AND repeated_count > 5 ) SELECT id, severity, device_name FROM CriticalRepeatedAlarms WHERE ack_user_id IS NULL;", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), device_name character varying(250), repeated_count integer, ack_user_id character varying(250));\nINSERT INTO alarm (id, severity, device_name, repeated_count, ack_user_id) VALUES (1301, 'Critical', 'Router-X', 10, NULL);\nINSERT INTO alarm (id, severity, device_name, repeated_count, ack_user_id) VALUES (1302, 'Critical', 'Switch-Y', 8, 'admin');\nINSERT INTO alarm (id, severity, device_name, repeated_count, ack_user_id) VALUES (1303, 'Major', 'Server-Z', 12, NULL);\nINSERT INTO alarm (id, severity, device_name, repeated_count, ack_user_id) VALUES (1304, 'Critical', 'Firewall-A', 6, NULL);"}
{"sql_prompt": "Show the severity and equipment name for all alarms that are currently not acknowledged.", "sql": "SELECT severity, eqp_name FROM alarm WHERE base_alarm_ack_state = 'Unacknowledged';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, severity, eqp_name, base_alarm_ack_state) VALUES (1001, 'Critical', 'RouterA', 'Unacknowledged');\nINSERT INTO alarm (id, severity, eqp_name, base_alarm_ack_state) VALUES (1002, 'Major', 'SwitchB', 'Acknowledged');"}
{"sql_prompt": "What are the distinct alarm types reported by the vendor 'Nokia'?", "sql": "SELECT DISTINCT raw_alarm_type FROM alarm WHERE vendor = 'Nokia';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, vendor, raw_alarm_type) VALUES (2001, 'Nokia', 'Link Down');\nINSERT INTO alarm (id, vendor, raw_alarm_type) VALUES (2002, 'Nokia', 'Power Failure');"}
{"sql_prompt": "Count the number of alarms for each severity level.", "sql": "SELECT severity, COUNT(*) FROM alarm GROUP BY severity;", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, severity) VALUES (3001, 'Critical');\nINSERT INTO alarm (id, severity) VALUES (3002, 'Major');\nINSERT INTO alarm (id, severity) VALUES (3003, 'Critical');"}
{"sql_prompt": "Find the incident number and description for incidents with high impact (impact > 2).", "sql": "SELECT incident_number, description FROM incident WHERE impact > 2;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), assigned_to character varying(100), assignment_count integer, business_service character varying(100), caller character varying(100), category character varying(100), closed timestamp without time zone, configuration_item character varying(100), contact_type character varying(100), correlation_id character varying(100), created_date timestamp without time zone, customer_type character varying(100), description text, domain character varying(100), end_fault timestamp without time zone, end_inefficiency timestamp without time zone, expected_resolution_date timestamp without time zone, first_configuration_item character varying(100), impact integer, in_validation boolean, incident_alert boolean, incident_parent character varying(100), inefficiency boolean, inefficiency_type character varying(100), level1 character varying(100), level2 character varying(100), level3 character varying(100), level4 character varying(100), msisdn character varying(100), network_element_type character varying(100), opened_by character varying(100), originating_system character varying(100), owner_group character varying(100), process_cause character varying(100), product_type character varying(100), reopen_count integer, resolution_code character varying(100), resolution_entity character varying(100), resolved timestamp without time zone, root_cause character varying(100), sequence_id integer, short_description text, source character varying(100), start_fault timestamp without time zone, start_inefficiency timestamp without time zone, status integer, updated timestamp without time zone, updated_by character varying(100), urgency integer, vendor character varying(100), wfm_id character varying(100));\nINSERT INTO incident (incident_number, description, impact) VALUES ('INC001', 'Major outage affecting service X', 3);\nINSERT INTO incident (incident_number, description, impact) VALUES ('INC002', 'Minor configuration issue', 1);"}
{"sql_prompt": "List the site name, latitude, and longitude for all sites located in the 'Milan' province.", "sql": "SELECT \"SITE_NAME\", \"LATITUDE\", \"LONGITUDE\" FROM sites WHERE \"PROVINCIA\" = 'Milan';", "sql_context": "CREATE TABLE sites (\"SITE_ID\" text, \"SITE_NAME\" text, \"LONGITUDE\" text, \"LATITUDE\" text, \"DISTRICT\" text, \"ADDRESS\" text, \"CIVICO\" text, \"CITY_NAME\" text, \"SITE_TYPE\" text, \"CUSTOMER\" text, \"SHORT_NAME\" text, \"ALTERNATIVE_NAME\" text, \"PROVINCE\" text, \"BUILDING_UNIQUE_ID\" text, \"CODICE_ISTAT\" double precision, \"REGIONE\" text, \"PROVINCIA\" text);\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"LATITUDE\", \"LONGITUDE\", \"PROVINCIA\") VALUES ('S1', 'Milano Centro', '45.4642', '9.1900', 'Milan');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"LATITUDE\", \"LONGITUDE\", \"PROVINCIA\") VALUES ('S2', 'Roma Termini', '41.9015', '12.5009', 'Rome');"}
{"sql_prompt": "Show the node name and IP address for network elements of model 'ASR9k'.", "sql": "SELECT \"NODE_NAME\", \"IP_ADDRESS\" FROM equipment_ip_address WHERE \"MODEL_CODE\" = 'ASR9k';", "sql_context": "CREATE TABLE equipment_ip_address (index bigint, \"NODE_NAME\" text, \"MODEL_CODE\" text, \"NETWORK_ELEMENT_ID\" bigint, \"CODE\" text, \"IP_ADDRESS\" text);\nINSERT INTO equipment_ip_address (\"NODE_NAME\", \"MODEL_CODE\", \"IP_ADDRESS\") VALUES ('CoreRouter1', 'ASR9k', '10.0.0.1');\nINSERT INTO equipment_ip_address (\"NODE_NAME\", \"MODEL_CODE\", \"IP_ADDRESS\") VALUES ('EdgeSwitch1', 'NCS5k', '10.1.1.1');"}
{"sql_prompt": "What is the description (slogan) for alarm ID 5678?", "sql": "SELECT l.slogan FROM alarm a JOIN alarm_label l ON a.id = l.id WHERE a.id = 5678;", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nCREATE TABLE alarm_label (id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250));\nINSERT INTO alarm (id, severity) VALUES (5678, 'Warning');\nINSERT INTO alarm_label (id, slogan) VALUES (5678, 'High Temperature Alert');"}
{"sql_prompt": "List all cable system names and their types.", "sql": "SELECT \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\" FROM cable_system;", "sql_context": "CREATE TABLE cable_system (index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SYSTEM_NAME\" text, \"CABLE_TYPE\" text, \"SITE_A_ID\" text, \"SITE_B_ID\" text);\nINSERT INTO cable_system (\"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\") VALUES ('Transatlantic Cable 1', 'Submarine Fiber');\nINSERT INTO cable_system (\"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\") VALUES ('Metro Ring A', 'Terrestrial Fiber');"}
{"sql_prompt": "Find the equipment names (eqp_name) associated with alarms having the keyword 'performance'.", "sql": "SELECT eqp_name FROM alarm WHERE keyword = 'performance';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_name, keyword) VALUES (4001, 'ServerX', 'performance');\nINSERT INTO alarm (id, eqp_name, keyword) VALUES (4002, 'RouterY', 'link');"}
{"sql_prompt": "Get the PE name and status for PE ID 123456.", "sql": "SELECT \"PE_NAME\", \"PE_STATUS\" FROM mobile_pe WHERE \"PE_ID\" = 123456;", "sql_context": "CREATE TABLE mobile_pe (index bigint, \"VLAN_ID\" double precision, \"LOGICAL_LINK_ID\" double precision, \"PE_ID\" bigint, \"PE_NAME\" text, \"PE_STATUS\" text, \"ENTITY_TYPE\" text, \"POSITION\" bigint);\nINSERT INTO mobile_pe (\"PE_ID\", \"PE_NAME\", \"PE_STATUS\") VALUES (123456, 'PE-Milan-1', 'Active');\nINSERT INTO mobile_pe (\"PE_ID\", \"PE_NAME\", \"PE_STATUS\") VALUES (789012, 'PE-Rome-2', 'Maintenance');"}
{"sql_prompt": "List all incidents created after January 1st, 2023, ordered by creation date descending.", "sql": "SELECT incident_number, created_date, short_description FROM incident WHERE created_date > '2023-01-01 00:00:00' ORDER BY created_date DESC;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), assigned_to character varying(100), assignment_count integer, business_service character varying(100), caller character varying(100), category character varying(100), closed timestamp without time zone, configuration_item character varying(100), contact_type character varying(100), correlation_id character varying(100), created_date timestamp without time zone, customer_type character varying(100), description text, domain character varying(100), end_fault timestamp without time zone, end_inefficiency timestamp without time zone, expected_resolution_date timestamp without time zone, first_configuration_item character varying(100), impact integer, in_validation boolean, incident_alert boolean, incident_parent character varying(100), inefficiency boolean, inefficiency_type character varying(100), level1 character varying(100), level2 character varying(100), level3 character varying(100), level4 character varying(100), msisdn character varying(100), network_element_type character varying(100), opened_by character varying(100), originating_system character varying(100), owner_group character varying(100), process_cause character varying(100), product_type character varying(100), reopen_count integer, resolution_code character varying(100), resolution_entity character varying(100), resolved timestamp without time zone, root_cause character varying(100), sequence_id integer, short_description text, source character varying(100), start_fault timestamp without time zone, start_inefficiency timestamp without time zone, status integer, updated timestamp without time zone, updated_by character varying(100), urgency integer, vendor character varying(100), wfm_id character varying(100));\nINSERT INTO incident (incident_number, created_date, short_description) VALUES ('INC005', '2023-03-15 10:00:00', 'Service Degradation');\nINSERT INTO incident (incident_number, created_date, short_description) VALUES ('INC006', '2022-12-20 09:00:00', 'Router Config Issue');"}
{"sql_prompt": "What are the equipment location and description for the trail name 'FIBER_RING_NORTH'?", "sql": "SELECT \"LOCATION\", \"DESCRIPTION\" FROM equipment_details WHERE \"TRAIL_NAME\" = 'FIBER_RING_NORTH';", "sql_context": "CREATE TABLE equipment_details (index bigint, \"SHORT_NAME\" text, \"LOCATION\" text, \"TRAIL_NAME\" text, \"NUMERO_TD\" text, \"CODE\" text, \"DESCRIPTION\" text);\nINSERT INTO equipment_details (\"LOCATION\", \"TRAIL_NAME\", \"DESCRIPTION\") VALUES ('POP-North-1', 'FIBER_RING_NORTH', 'Primary OLT Shelf');\nINSERT INTO equipment_details (\"LOCATION\", \"TRAIL_NAME\", \"DESCRIPTION\") VALUES ('POP-South-2', 'FIBER_RING_SOUTH', 'Aggregation Switch');"}
{"sql_prompt": "Show the site ID and equipment list for outages that started before 2023-06-01.", "sql": "SELECT site_id, equipment_list FROM outage WHERE ts_start_disruption < '2023-06-01 00:00:00';", "sql_context": "CREATE TABLE outage (outage_id integer, site_id character varying(50), ts_start_disruption timestamp without time zone, equipment_list character varying(100), status character varying(50), username character varying(100), latitude numeric(9,6), longitude numeric(9,6));\nINSERT INTO outage (outage_id, site_id, ts_start_disruption, equipment_list) VALUES (1, 'SiteX', '2023-05-20 14:30:00', 'Router1, Switch2');\nINSERT INTO outage (outage_id, site_id, ts_start_disruption, equipment_list) VALUES (2, 'SiteY', '2023-07-01 10:00:00', 'OLT-A');"}
{"sql_prompt": "Find the alarm IDs and their associated trouble ticket IDs (tt_id) for alarms with severity 'Major' or 'Critical'.", "sql": "SELECT id, tt_id FROM alarm WHERE severity IN ('Major', 'Critical');", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, severity, tt_id) VALUES (5001, 'Critical', 'TT12345');\nINSERT INTO alarm (id, severity, tt_id) VALUES (5002, 'Major', 'TT12346');\nINSERT INTO alarm (id, severity, tt_id) VALUES (5003, 'Warning', 'TT12347');"}
{"sql_prompt": "List the top 10 most frequent probable alarm causes based on the `base_probable_alarm_cause` field.", "sql": "SELECT base_probable_alarm_cause, COUNT(*) as cause_count FROM alarm GROUP BY base_probable_alarm_cause ORDER BY cause_count DESC LIMIT 10;", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, base_probable_alarm_cause) VALUES (6001, 'Link Down');\nINSERT INTO alarm (id, base_probable_alarm_cause) VALUES (6002, 'Power Failure');\nINSERT INTO alarm (id, base_probable_alarm_cause) VALUES (6003, 'Link Down');"}
{"sql_prompt": "Show the alarm ID, description (slogan), and equipment name for alarms related to domain 'TRANSPORT'.", "sql": "SELECT a.id, l.slogan, a.eqp_name FROM alarm a JOIN alarm_label l ON a.id = l.id WHERE l.domain_id = 'TRANSPORT';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nCREATE TABLE alarm_label (id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250));\nINSERT INTO alarm (id, eqp_name) VALUES (7001, 'DWDM-Node1');\nINSERT INTO alarm_label (id, domain_id, slogan) VALUES (7001, 'TRANSPORT', 'Optical Power Low');\nINSERT INTO alarm (id, eqp_name) VALUES (7002, 'Router Core');\nINSERT INTO alarm_label (id, domain_id, slogan) VALUES (7002, 'IP CORE', 'BGP Peer Down');"}
{"sql_prompt": "Find the average assignment count for incidents in the 'Network Operations' assignment group.", "sql": "SELECT AVG(assignment_count) FROM incident WHERE assignment_group = 'Network Operations';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), assigned_to character varying(100), assignment_count integer, business_service character varying(100), caller character varying(100), category character varying(100), closed timestamp without time zone, configuration_item character varying(100), contact_type character varying(100), correlation_id character varying(100), created_date timestamp without time zone, customer_type character varying(100), description text, domain character varying(100), end_fault timestamp without time zone, end_inefficiency timestamp without time zone, expected_resolution_date timestamp without time zone, first_configuration_item character varying(100), impact integer, in_validation boolean, incident_alert boolean, incident_parent character varying(100), inefficiency boolean, inefficiency_type character varying(100), level1 character varying(100), level2 character varying(100), level3 character varying(100), level4 character varying(100), msisdn character varying(100), network_element_type character varying(100), opened_by character varying(100), originating_system character varying(100), owner_group character varying(100), process_cause character varying(100), product_type character varying(100), reopen_count integer, resolution_code character varying(100), resolution_entity character varying(100), resolved timestamp without time zone, root_cause character varying(100), sequence_id integer, short_description text, source character varying(100), start_fault timestamp without time zone, start_inefficiency timestamp without time zone, status integer, updated timestamp without time zone, updated_by character varying(100), urgency integer, vendor character varying(100), wfm_id character varying(100));\nINSERT INTO incident (incident_number, assignment_group, assignment_count) VALUES ('INC007', 'Network Operations', 3);\nINSERT INTO incident (incident_number, assignment_group, assignment_count) VALUES ('INC008', 'Network Operations', 5);"}
{"sql_prompt": "List the network element node name, model code, and vendor name for elements with 'ACTIVE' activity status.", "sql": "SELECT \"NODE_NAME\", \"MODEL_CODE\", \"VENDOR_NAME\" FROM network_elements WHERE \"ACTIVITY_STATUS_CODE\" = 'ACTIVE';", "sql_context": "CREATE TABLE network_elements (index bigint, \"LOCATION\" text, \"NODE_NAME\" text, \"NETWORK_ELEMENT_ID\" bigint, \"NETWORK_ELEMENT_TYPE_CODE\" text, \"SERIAL_NUMBER\" bigint, \"ACTIVITY_STATUS_CODE\" text, \"MODEL_CODE\" text, \"VENDOR_NAME\" text, \"ELEMENT_CLASS_CODE\" text, \"ELEMENT_CLASS_DESC\" text, \"CARD_TYPE_ID\" double precision, \"SYSTEM_NAME\" text, \"LOCATION_SHORT_NAME\" text);\nINSERT INTO network_elements (\"NODE_NAME\", \"MODEL_CODE\", \"VENDOR_NAME\", \"ACTIVITY_STATUS_CODE\") VALUES ('Router-A1', '7750 SR', 'Alcatel-Lucent', 'ACTIVE');\nINSERT INTO network_elements (\"NODE_NAME\", \"MODEL_CODE\", \"VENDOR_NAME\", \"ACTIVITY_STATUS_CODE\") VALUES ('Switch-B2', 'Catalyst 9k', 'Cisco', 'INACTIVE');"}
{"sql_prompt": "Show the description and location of leased lines identified by the code 'LL123'.", "sql": "SELECT \"DESCRIPTION\", \"LOCATION\" FROM leased_lines WHERE \"CODE\" = 'LL123';", "sql_context": "CREATE TABLE leased_lines (index bigint, \"SHORT_NAME\" text, \"LOCATION\" text, \"TRAIL_NAME\" text, \"NUMERO_TD\" text, \"CODE\" text, \"DESCRIPTION\" text);\nINSERT INTO leased_lines (\"CODE\", \"DESCRIPTION\", \"LOCATION\") VALUES ('LL123', '10G Leased Line Customer A', 'Data Center West');\nINSERT INTO leased_lines (\"CODE\", \"DESCRIPTION\", \"LOCATION\") VALUES ('LL456', '1G Leased Line Customer B', 'Office Park East');"}
{"sql_prompt": "Find all alarm IDs that were raised between 2023-10-01 00:00:00 and 2023-10-31 23:59:59.", "sql": "SELECT id FROM alarm WHERE time_raised BETWEEN '2023-10-01 00:00:00' AND '2023-10-31 23:59:59';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, time_raised) VALUES (8001, '2023-10-15 10:30:00');\nINSERT INTO alarm (id, time_raised) VALUES (8002, '2023-11-01 08:00:00');"}
{"sql_prompt": "Count how many incidents have been reopened (reopen_count > 0).", "sql": "SELECT COUNT(*) FROM incident WHERE reopen_count > 0;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), assigned_to character varying(100), assignment_count integer, business_service character varying(100), caller character varying(100), category character varying(100), closed timestamp without time zone, configuration_item character varying(100), contact_type character varying(100), correlation_id character varying(100), created_date timestamp without time zone, customer_type character varying(100), description text, domain character varying(100), end_fault timestamp without time zone, end_inefficiency timestamp without time zone, expected_resolution_date timestamp without time zone, first_configuration_item character varying(100), impact integer, in_validation boolean, incident_alert boolean, incident_parent character varying(100), inefficiency boolean, inefficiency_type character varying(100), level1 character varying(100), level2 character varying(100), level3 character varying(100), level4 character varying(100), msisdn character varying(100), network_element_type character varying(100), opened_by character varying(100), originating_system character varying(100), owner_group character varying(100), process_cause character varying(100), product_type character varying(100), reopen_count integer, resolution_code character varying(100), resolution_entity character varying(100), resolved timestamp without time zone, root_cause character varying(100), sequence_id integer, short_description text, source character varying(100), start_fault timestamp without time zone, start_inefficiency timestamp without time zone, status integer, updated timestamp without time zone, updated_by character varying(100), urgency integer, vendor character varying(100), wfm_id character varying(100));\nINSERT INTO incident (incident_number, reopen_count) VALUES ('INC009', 1);\nINSERT INTO incident (incident_number, reopen_count) VALUES ('INC010', 0);"}
{"sql_prompt": "Get the equipment name (eqp_name), severity, and time raised for alarms originating from 'EMS-SystemA'.", "sql": "SELECT eqp_name, severity, time_raised FROM alarm WHERE ems_name = 'EMS-SystemA';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_name, severity, time_raised, ems_name) VALUES (9001, 'NE-101', 'Major', '2023-11-10 11:00:00', 'EMS-SystemA');\nINSERT INTO alarm (id, eqp_name, severity, time_raised, ems_name) VALUES (9002, 'NE-202', 'Critical', '2023-11-10 12:00:00', 'EMS-SystemB');"}
{"sql_prompt": "Show the Ethernet path name and status for paths associated with VLAN ID 100.", "sql": "SELECT \"NAME\", \"PATH_ETHERNET_STATUS\" FROM path_ethernet WHERE \"VLAN_ID\" = 100;", "sql_context": "CREATE TABLE path_ethernet (index bigint, \"VLAN_ID\" bigint, \"VPLS_ID\" double precision, \"PATH_ETHERNET_ID\" bigint, \"PATH_ETHERNET_STATUS\" text, \"NAME\" text);\nINSERT INTO path_ethernet (\"VLAN_ID\", \"NAME\", \"PATH_ETHERNET_STATUS\") VALUES (100, 'CustomerA-VLAN100-Path', 'OPERATIONAL');\nINSERT INTO path_ethernet (\"VLAN_ID\", \"NAME\", \"PATH_ETHERNET_STATUS\") VALUES (200, 'CustomerB-VLAN200-Path', 'DEGRADED');"}
{"sql_prompt": "Find the node name, model code, and IP address for devices listed in the 'ports' table.", "sql": "SELECT \"NODE_NAME\", \"MODEL_CODE\", \"IP_ADDRESS\" FROM ports;", "sql_context": "CREATE TABLE ports (index bigint, \"NODE_NAME\" text, \"MODEL_CODE\" text, \"NETWORK_ELEMENT_ID\" bigint, \"CODE\" text, \"IP_ADDRESS\" text);\nINSERT INTO ports (\"NODE_NAME\", \"MODEL_CODE\", \"IP_ADDRESS\") VALUES ('AccessSwitch-1', 'Cisco-2960', '192.168.1.1');\nINSERT INTO ports (\"NODE_NAME\", \"MODEL_CODE\", \"IP_ADDRESS\") VALUES ('CoreRouter-3', 'Juniper-MX', '10.10.0.5');"}
{"sql_prompt": "List the service name and status for services associated with domain ID 5.", "sql": "SELECT \"SERVICE_NAME\", \"STATUS\" FROM service WHERE \"DOMAIN\" = 5;", "sql_context": "CREATE TABLE service (\"SERVICE_ID\" text, \"HIERARCHY_ID\" double precision, \"SERVICE_NAME\" text, \"STATUS\" text, \"A_NETWORK_ADDRESS\" text, \"B_NETWORK_ADDRESS\" text, \"V52_NUMBER\" double precision, \"LINK_ID\" double precision, \"NA_IMA_GROUP\" text, \"CIRCUIT_COUNT\" bigint, \"CHANNEL_COUNT\" double precision, \"MARKET_DESTINATION\" text, \"ACCESS_TYPE\" text, \"ASSOCIATED_SERVICE\" text, \"PROVISIONING_STATUS\" text, \"CLI\" text, \"DOMAIN\" bigint);\nINSERT INTO service (\"SERVICE_NAME\", \"STATUS\", \"DOMAIN\") VALUES ('VPN Service Alpha', 'Active', 5);\nINSERT INTO service (\"SERVICE_NAME\", \"STATUS\", \"DOMAIN\") VALUES ('Internet Access Beta', 'Pending', 6);"}
{"sql_prompt": "Show the cable segment name and its status for segments associated with cable system 'CS-WEST'.", "sql": "SELECT cs.\"CABLE_SEGMENT_NAME\", cs.\"STATUS\" FROM cablesegment cs JOIN cl_clsegm_rel rel ON cs.\"CABLE_SEGMENT_ID\" = rel.\"CABLE_SEGMENT_ID\" JOIN cable_system csys ON rel.\"CABLE_SYSTEM_ID\" = csys.\"CABLE_SYSTEM_ID\" WHERE csys.\"CABLE_SYSTEM_NAME\" = 'CS-WEST';", "sql_context": "CREATE TABLE cablesegment (index bigint, \"CABLE_SEGMENT_ID\" text, \"CABLE_SEGMENT_NAME\" text, \"CABLE_TYPE\" text, \"STATUS\" double precision, \"SITE_CABINET_A_ID\" text, \"SITE_CABINET_B_ID\" text, \"SYNTHETIC_NAME\" text);\nCREATE TABLE cl_clsegm_rel (index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SEGMENT_ID\" text);\nCREATE TABLE cable_system (index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SYSTEM_NAME\" text, \"CABLE_TYPE\" text, \"SITE_A_ID\" text, \"SITE_B_ID\" text);\nINSERT INTO cable_system (\"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\") VALUES ('SYS001', 'CS-WEST');\nINSERT INTO cablesegment (\"CABLE_SEGMENT_ID\", \"CABLE_SEGMENT_NAME\", \"STATUS\") VALUES ('SEG001', 'West-Seg-A', 1.0);\nINSERT INTO cablesegment (\"CABLE_SEGMENT_ID\", \"CABLE_SEGMENT_NAME\", \"STATUS\") VALUES ('SEG002', 'West-Seg-B', 1.0);\nINSERT INTO cl_clsegm_rel (\"CABLE_SYSTEM_ID\", \"CABLE_SEGMENT_ID\") VALUES ('SYS001', 'SEG001');"}
{"sql_prompt": "Find incidents where the root cause is 'Software Bug'.", "sql": "SELECT incident_number, short_description FROM incident WHERE root_cause = 'Software Bug';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), assigned_to character varying(100), assignment_count integer, business_service character varying(100), caller character varying(100), category character varying(100), closed timestamp without time zone, configuration_item character varying(100), contact_type character varying(100), correlation_id character varying(100), created_date timestamp without time zone, customer_type character varying(100), description text, domain character varying(100), end_fault timestamp without time zone, end_inefficiency timestamp without time zone, expected_resolution_date timestamp without time zone, first_configuration_item character varying(100), impact integer, in_validation boolean, incident_alert boolean, incident_parent character varying(100), inefficiency boolean, inefficiency_type character varying(100), level1 character varying(100), level2 character varying(100), level3 character varying(100), level4 character varying(100), msisdn character varying(100), network_element_type character varying(100), opened_by character varying(100), originating_system character varying(100), owner_group character varying(100), process_cause character varying(100), product_type character varying(100), reopen_count integer, resolution_code character varying(100), resolution_entity character varying(100), resolved timestamp without time zone, root_cause character varying(100), sequence_id integer, short_description text, source character varying(100), start_fault timestamp without time zone, start_inefficiency timestamp without time zone, status integer, updated timestamp without time zone, updated_by character varying(100), urgency integer, vendor character varying(100), wfm_id character varying(100));\nINSERT INTO incident (incident_number, short_description, root_cause) VALUES ('INC011', 'System Crash', 'Software Bug');\nINSERT INTO incident (incident_number, short_description, root_cause) VALUES ('INC012', 'Interface Down', 'Hardware Failure');"}
{"sql_prompt": "Show the alarm ID, description, severity, and time cleared for alarms viewed in v_alarms, ordered by time cleared descending, limited to the latest 5.", "sql": "SELECT alarm_id, description, severity, ts_cleared FROM v_alarms ORDER BY ts_cleared DESC LIMIT 5;", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nCREATE TABLE alarm_label (id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250));\nCREATE VIEW v_alarms AS SELECT a.id AS alarm_id, a.severity, a.eqp_name, a.from_site, a.remote_eqp_name, a.time_up, a.time_down, l.slogan AS description, a.additional_text, a.vendor, a.raw_alarm_type AS alarm_type, a.device_name, a.device_type, l.domain_id AS domain, a.tt_id, a.ems_name, a.time_cleared AS ts_cleared FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO alarm (id, severity, time_cleared) VALUES (1, 'Critical', '2023-11-20 10:00:00');\nINSERT INTO alarm_label (id, slogan) VALUES (1, 'Router Down');\nINSERT INTO alarm (id, severity, time_cleared) VALUES (2, 'Major', '2023-11-20 11:00:00');\nINSERT INTO alarm_label (id, slogan) VALUES (2, 'Link Flapping');"}
{"sql_prompt": "List the names of network elements and their card types from the RMM equipment details where the card status is 'FAULTY'.", "sql": "SELECT \"NETWORK_ELEMENT_NAME\", \"CARD_TYPE\" FROM rmm_equipment_details WHERE \"CARD_STATUS_CODE\" = 'FAULTY';", "sql_context": "CREATE TABLE rmm_equipment_details (\"NETWORK_ELEMENT_NAME\" text, \"NETWORK_ELEMENT_MODEL\" text, \"NODE_NAME\" text, \"SLOT_NAME\" text, \"SLOT_NUMBER\" double precision, \"SHELF_NAME\" text, \"SHELF_DESCRIPTION\" text, \"CARD_TYPE\" text, \"CARD_NAME\" text, \"VENDOR_CARD_CODE\" text, \"CARD_STATUS_CODE\" text, \"CARD_VENDOR_NAME\" text);\nINSERT INTO rmm_equipment_details (\"NETWORK_ELEMENT_NAME\", \"CARD_TYPE\", \"CARD_STATUS_CODE\") VALUES ('CoreSwitch1', 'Line Card 10G', 'FAULTY');\nINSERT INTO rmm_equipment_details (\"NETWORK_ELEMENT_NAME\", \"CARD_TYPE\", \"CARD_STATUS_CODE\") VALUES ('EdgeRouter2', 'Management Card', 'ACTIVE');"}
{"sql_prompt": "What are the alternative names for WDM topologies with status code 1?", "sql": "SELECT \"ALTERNATIVE_NAME\" FROM topology_wdm WHERE \"STATUS\" = 1;", "sql_context": "CREATE TABLE topology_wdm (\"TOPOLOGYID\" bigint, \"TOPOLOGY_TYPE\" text, \"STATUS\" double precision, \"ALTERNATIVE_NAME\" text, \"CODE\" text, \"SERIAL_NUMBER\" bigint, \"DESCRIPTION\" text, \"LOGICAL_LINK_ID\" bigint);\nINSERT INTO topology_wdm (\"STATUS\", \"ALTERNATIVE_NAME\") VALUES (1, 'Metro Ring East - Backup');\nINSERT INTO topology_wdm (\"STATUS\", \"ALTERNATIVE_NAME\") VALUES (0, 'Long Haul West - Main');"}
{"sql_prompt": "Show me all alarms with 'Critical' severity.", "sql": "SELECT id, device_name, specific_problem, time_raised FROM alarm WHERE severity = 'Critical';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, device_name, specific_problem, severity, time_raised) VALUES (101, 'RouterA', 'Link Down', 'Critical', '2023-10-26 10:00:00');\nINSERT INTO alarm (id, device_name, specific_problem, severity, time_raised) VALUES (102, 'SwitchB', 'High CPU', 'Major', '2023-10-26 10:05:00');\nINSERT INTO alarm (id, device_name, specific_problem, severity, time_raised) VALUES (103, 'ServerC', 'Disk Full', 'Critical', '2023-10-26 10:10:00');"}
{"sql_prompt": "List the 5 most recently created incidents.", "sql": "SELECT incident_number, short_description, created_date FROM incident ORDER BY created_date DESC LIMIT 5;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), assigned_to character varying(100), assignment_count integer, business_service character varying(100), caller character varying(100), category character varying(100), closed timestamp without time zone, configuration_item character varying(100), contact_type character varying(100), correlation_id character varying(100), created_date timestamp without time zone, customer_type character varying(100), description text, domain character varying(100), end_fault timestamp without time zone, end_inefficiency timestamp without time zone, expected_resolution_date timestamp without time zone, first_configuration_item character varying(100), impact integer, in_validation boolean, incident_alert boolean, incident_parent character varying(100), inefficiency boolean, inefficiency_type character varying(100), level1 character varying(100), level2 character varying(100), level3 character varying(100), level4 character varying(100), msisdn character varying(100), network_element_type character varying(100), opened_by character varying(100), originating_system character varying(100), owner_group character varying(100), process_cause character varying(100), product_type character varying(100), reopen_count integer, resolution_code character varying(100), resolution_entity character varying(100), resolved timestamp without time zone, root_cause character varying(100), sequence_id integer, short_description text, source character varying(100), start_fault timestamp without time zone, start_inefficiency timestamp without time zone, status integer, updated timestamp without time zone, updated_by character varying(100), urgency integer, vendor character varying(100), wfm_id character varying(100));\nINSERT INTO incident (incident_number, short_description, created_date) VALUES ('INC001', 'Network outage reported', '2023-10-26 09:00:00');\nINSERT INTO incident (incident_number, short_description, created_date) VALUES ('INC002', 'Server unresponsive', '2023-10-26 11:15:00');\nINSERT INTO incident (incident_number, short_description, created_date) VALUES ('INC003', 'Application error', '2023-10-25 15:30:00');"}
{"sql_prompt": "Show the severity, equipment name, description, and site for alarm ID 5678.", "sql": "SELECT severity, eqp_name, description, from_site FROM v_alarms WHERE alarm_id = 5678;", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nCREATE TABLE alarm_label (id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250));\nCREATE VIEW v_alarms AS SELECT a.id AS alarm_id, a.severity, a.eqp_name, a.from_site, a.remote_eqp_name, a.time_up, a.time_down, l.slogan AS description, a.additional_text, a.vendor, a.raw_alarm_type AS alarm_type, a.device_name, a.device_type, l.domain_id AS domain, a.tt_id, a.ems_name, a.time_cleared AS ts_cleared FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO alarm (id, severity, eqp_name, from_site) VALUES (5678, 'Major', 'EQP-X1', 'SiteA');\nINSERT INTO alarm_label (id, slogan) VALUES (5678, 'Equipment Failure');"}
{"sql_prompt": "Find all sites located in 'Milan'.", "sql": "SELECT \"SITE_ID\", \"SITE_NAME\", \"ADDRESS\" FROM sites WHERE \"CITY_NAME\" = 'Milan';", "sql_context": "CREATE TABLE sites (\"SITE_ID\" text, \"SITE_NAME\" text, \"LONGITUDE\" text, \"LATITUDE\" text, \"DISTRICT\" text, \"ADDRESS\" text, \"CIVICO\" text, \"CITY_NAME\" text, \"SITE_TYPE\" text, \"CUSTOMER\" text, \"SHORT_NAME\" text, \"ALTERNATIVE_NAME\" text, \"PROVINCE\" text, \"BUILDING_UNIQUE_ID\" text, \"CODICE_ISTAT\" double precision, \"REGIONE\" text, \"PROVINCIA\" text);\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"ADDRESS\", \"CITY_NAME\") VALUES ('S1', 'Milan Central Office', 'Via Roma 1', 'Milan');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"ADDRESS\", \"CITY_NAME\") VALUES ('S2', 'Rome Datacenter', 'Piazza Navona 2', 'Rome');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"ADDRESS\", \"CITY_NAME\") VALUES ('S3', 'Milan West Hub', 'Corso Magenta 3', 'Milan');"}
{"sql_prompt": "What are the names and IDs of all cable systems with type 'Submarine'?", "sql": "SELECT \"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\" FROM cable_system WHERE \"CABLE_TYPE\" = 'Submarine';", "sql_context": "CREATE TABLE cable_system (index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SYSTEM_NAME\" text, \"CABLE_TYPE\" text, \"SITE_A_ID\" text, \"SITE_B_ID\" text);\nINSERT INTO cable_system (index, \"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\") VALUES (1, 'CS001', 'TransAtlantic 1', 'Submarine');\nINSERT INTO cable_system (index, \"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\") VALUES (2, 'CS002', 'Metro Fiber Ring', 'Terrestrial');\nINSERT INTO cable_system (index, \"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\") VALUES (3, 'CS003', 'Pacific Link', 'Submarine');"}
{"sql_prompt": "List all network elements from vendor 'Nokia'.", "sql": "SELECT \"NODE_NAME\", \"MODEL_CODE\", \"SERIAL_NUMBER\" FROM network_elements WHERE \"VENDOR_NAME\" = 'Nokia';", "sql_context": "CREATE TABLE network_elements (index bigint, \"LOCATION\" text, \"NODE_NAME\" text, \"NETWORK_ELEMENT_ID\" bigint, \"NETWORK_ELEMENT_TYPE_CODE\" text, \"SERIAL_NUMBER\" bigint, \"ACTIVITY_STATUS_CODE\" text, \"MODEL_CODE\" text, \"VENDOR_NAME\" text, \"ELEMENT_CLASS_CODE\" text, \"ELEMENT_CLASS_DESC\" text, \"CARD_TYPE_ID\" double precision, \"SYSTEM_NAME\" text, \"LOCATION_SHORT_NAME\" text);\nINSERT INTO network_elements (index, \"NODE_NAME\", \"MODEL_CODE\", \"SERIAL_NUMBER\", \"VENDOR_NAME\") VALUES (1, 'RouterX', '7750 SR', 12345, 'Nokia');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"MODEL_CODE\", \"SERIAL_NUMBER\", \"VENDOR_NAME\") VALUES (2, 'SwitchY', 'Catalyst 9k', 67890, 'Cisco');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"MODEL_CODE\", \"SERIAL_NUMBER\", \"VENDOR_NAME\") VALUES (3, 'FirewallZ', 'ASA 5500', 11223, 'Cisco');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"MODEL_CODE\", \"SERIAL_NUMBER\", \"VENDOR_NAME\") VALUES (4, 'OLTA', 'FX-16', 44556, 'Nokia');"}
{"sql_prompt": "Find outages currently in 'Ongoing' status.", "sql": "SELECT outage_id, site_id, ts_start_disruption, equipment_list FROM outage WHERE status = 'Ongoing';", "sql_context": "CREATE TABLE outage (outage_id integer, site_id character varying(50), ts_start_disruption timestamp without time zone, equipment_list character varying(100), status character varying(50), username character varying(100), latitude numeric(9,6), longitude numeric(9,6));\nINSERT INTO outage (outage_id, site_id, ts_start_disruption, equipment_list, status) VALUES (1, 'SiteA', '2023-10-26 08:00:00', 'Router1, Switch2', 'Ongoing');\nINSERT INTO outage (outage_id, site_id, ts_start_disruption, equipment_list, status) VALUES (2, 'SiteB', '2023-10-25 14:30:00', 'Server3', 'Resolved');\nINSERT INTO outage (outage_id, site_id, ts_start_disruption, equipment_list, status) VALUES (3, 'SiteC', '2023-10-26 11:00:00', 'Firewall1', 'Ongoing');"}
{"sql_prompt": "Show the equipment description and code for items located in 'Rack 3, Shelf 2'.", "sql": "SELECT \"DESCRIPTION\", \"CODE\" FROM equipment_details WHERE \"LOCATION\" = 'Rack 3, Shelf 2';", "sql_context": "CREATE TABLE equipment_details (index bigint, \"SHORT_NAME\" text, \"LOCATION\" text, \"TRAIL_NAME\" text, \"NUMERO_TD\" text, \"CODE\" text, \"DESCRIPTION\" text);\nINSERT INTO equipment_details (index, \"SHORT_NAME\", \"LOCATION\", \"CODE\", \"DESCRIPTION\") VALUES (1, 'CardA', 'Rack 1, Shelf 1', 'C1', 'Line Card');\nINSERT INTO equipment_details (index, \"SHORT_NAME\", \"LOCATION\", \"CODE\", \"DESCRIPTION\") VALUES (2, 'PSU1', 'Rack 3, Shelf 2', 'P1', 'Power Supply Unit');\nINSERT INTO equipment_details (index, \"SHORT_NAME\", \"LOCATION\", \"CODE\", \"DESCRIPTION\") VALUES (3, 'FanTray', 'Rack 3, Shelf 2', 'F1', 'Fan Assembly');"}
{"sql_prompt": "List the distinct device types present in the alarm table.", "sql": "SELECT DISTINCT device_type FROM alarm;", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, device_type) VALUES (1, 'Router');\nINSERT INTO alarm (id, device_type) VALUES (2, 'Switch');\nINSERT INTO alarm (id, device_type) VALUES (3, 'Router');"}
{"sql_prompt": "Find incidents assigned to 'Jane Smith'.", "sql": "SELECT incident_number, short_description, status FROM incident WHERE assigned_to = 'Jane Smith';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), assigned_to character varying(100), assignment_count integer, business_service character varying(100), caller character varying(100), category character varying(100), closed timestamp without time zone, configuration_item character varying(100), contact_type character varying(100), correlation_id character varying(100), created_date timestamp without time zone, customer_type character varying(100), description text, domain character varying(100), end_fault timestamp without time zone, end_inefficiency timestamp without time zone, expected_resolution_date timestamp without time zone, first_configuration_item character varying(100), impact integer, in_validation boolean, incident_alert boolean, incident_parent character varying(100), inefficiency boolean, inefficiency_type character varying(100), level1 character varying(100), level2 character varying(100), level3 character varying(100), level4 character varying(100), msisdn character varying(100), network_element_type character varying(100), opened_by character varying(100), originating_system character varying(100), owner_group character varying(100), process_cause character varying(100), product_type character varying(100), reopen_count integer, resolution_code character varying(100), resolution_entity character varying(100), resolved timestamp without time zone, root_cause character varying(100), sequence_id integer, short_description text, source character varying(100), start_fault timestamp without time zone, start_inefficiency timestamp without time zone, status integer, updated timestamp without time zone, updated_by character varying(100), urgency integer, vendor character varying(100), wfm_id character varying(100));\nINSERT INTO incident (incident_number, short_description, assigned_to, status) VALUES ('INC004', 'VPN connection issue', 'Jane Smith', 2);\nINSERT INTO incident (incident_number, short_description, assigned_to, status) VALUES ('INC005', 'Printer not working', 'John Doe', 1);\nINSERT INTO incident (incident_number, short_description, assigned_to, status) VALUES ('INC006', 'Email delay', 'Jane Smith', 2);"}
{"sql_prompt": "Get the severity and slogan for each alarm.", "sql": "SELECT a.id, a.severity, l.slogan FROM alarm a JOIN alarm_label l ON a.id = l.id;", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250));\nCREATE TABLE alarm_label (id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250));\nINSERT INTO alarm (id, severity) VALUES (201, 'Critical');\nINSERT INTO alarm_label (id, slogan) VALUES (201, 'System Down');\nINSERT INTO alarm (id, severity) VALUES (202, 'Warning');\nINSERT INTO alarm_label (id, slogan) VALUES (202, 'High Temperature');"}
{"sql_prompt": "Show incident details (number, description) for alarms associated with trouble ticket 'TT12345'.", "sql": "SELECT i.incident_number, i.short_description, i.status FROM incident i JOIN alarm a ON i.incident_number = a.tt_id WHERE a.tt_id = 'TT12345';", "sql_context": "CREATE TABLE alarm (id bigint, tt_id character varying(250));\nCREATE TABLE incident (incident_number character varying(50), short_description text, status integer);\nINSERT INTO alarm (id, tt_id) VALUES (301, 'TT12345');\nINSERT INTO incident (incident_number, short_description, status) VALUES ('TT12345', 'Router link flapping', 2);\nINSERT INTO alarm (id, tt_id) VALUES (302, 'TT67890');\nINSERT INTO incident (incident_number, short_description, status) VALUES ('TT67890', 'Server CPU high', 1);"}
{"sql_prompt": "List network elements (node name, model) and their IP addresses.", "sql": "SELECT ne.\"NODE_NAME\", ne.\"MODEL_CODE\", eip.\"IP_ADDRESS\" FROM network_elements ne JOIN equipment_ip_address eip ON ne.\"NETWORK_ELEMENT_ID\" = eip.\"NETWORK_ELEMENT_ID\";", "sql_context": "CREATE TABLE network_elements (index bigint, \"NODE_NAME\" text, \"NETWORK_ELEMENT_ID\" bigint, \"MODEL_CODE\" text);\nCREATE TABLE equipment_ip_address (index bigint, \"NODE_NAME\" text, \"NETWORK_ELEMENT_ID\" bigint, \"IP_ADDRESS\" text);\nINSERT INTO network_elements (index, \"NODE_NAME\", \"NETWORK_ELEMENT_ID\", \"MODEL_CODE\") VALUES (1, 'CoreRouter1', 1001, 'ASR9K');\nINSERT INTO equipment_ip_address (index, \"NODE_NAME\", \"NETWORK_ELEMENT_ID\", \"IP_ADDRESS\") VALUES (1, 'CoreRouter1', 1001, '10.0.0.1');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"NETWORK_ELEMENT_ID\", \"MODEL_CODE\") VALUES (2, 'EdgeSwitch1', 2002, 'NCS5500');\nINSERT INTO equipment_ip_address (index, \"NODE_NAME\", \"NETWORK_ELEMENT_ID\", \"IP_ADDRESS\") VALUES (2, 'EdgeSwitch1', 2002, '192.168.1.1');"}
{"sql_prompt": "Show cable systems and the names of the segments they contain.", "sql": "SELECT cs.\"CABLE_SYSTEM_NAME\", cseg.\"CABLE_SEGMENT_NAME\" FROM cable_system cs JOIN cl_clsegm_rel rel ON cs.\"CABLE_SYSTEM_ID\" = rel.\"CABLE_SYSTEM_ID\" JOIN cablesegment cseg ON rel.\"CABLE_SEGMENT_ID\" = cseg.\"CABLE_SEGMENT_ID\";", "sql_context": "CREATE TABLE cable_system (index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SYSTEM_NAME\" text);\nCREATE TABLE cl_clsegm_rel (index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SEGMENT_ID\" text);\nCREATE TABLE cablesegment (index bigint, \"CABLE_SEGMENT_ID\" text, \"CABLE_SEGMENT_NAME\" text);\nINSERT INTO cable_system (index, \"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\") VALUES (1, 'CS1', 'SystemAlpha');\nINSERT INTO cablesegment (index, \"CABLE_SEGMENT_ID\", \"CABLE_SEGMENT_NAME\") VALUES (1, 'SEG1A', 'Segment Alpha 1');\nINSERT INTO cablesegment (index, \"CABLE_SEGMENT_ID\", \"CABLE_SEGMENT_NAME\") VALUES (2, 'SEG1B', 'Segment Alpha 2');\nINSERT INTO cl_clsegm_rel (index, \"CABLE_SYSTEM_ID\", \"CABLE_SEGMENT_ID\") VALUES (1, 'CS1', 'SEG1A');\nINSERT INTO cl_clsegm_rel (index, \"CABLE_SYSTEM_ID\", \"CABLE_SEGMENT_ID\") VALUES (2, 'CS1', 'SEG1B');"}
{"sql_prompt": "Get alarm details (severity, description) for devices originating from site 'SiteB'.", "sql": "SELECT severity, description, eqp_name FROM v_alarms WHERE from_site = 'SiteB';", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), eqp_name character varying(250), from_site character varying(250), time_raised timestamp without time zone, raw_alarm_type character varying(250), device_name character varying(250), device_type character varying(250), ems_name character varying(250), time_cleared timestamp without time zone, remote_eqp_name character varying(250), time_up timestamp without time zone, time_down timestamp without time zone, additional_text text, vendor character varying(250), tt_id character varying(250));\nCREATE TABLE alarm_label (id bigint, domain_id character varying(250), slogan character varying(250));\nCREATE VIEW v_alarms AS SELECT a.id AS alarm_id, a.severity, a.eqp_name, a.from_site, a.remote_eqp_name, a.time_up, a.time_down, l.slogan AS description, a.additional_text, a.vendor, a.raw_alarm_type AS alarm_type, a.device_name, a.device_type, l.domain_id AS domain, a.tt_id, a.ems_name, a.time_cleared AS ts_cleared FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO alarm (id, severity, eqp_name, from_site, time_raised) VALUES (401, 'Critical', 'EQP401', 'SiteA', '2023-10-26 12:00:00');\nINSERT INTO alarm_label (id, slogan) VALUES (401, 'Power Failure');\nINSERT INTO alarm (id, severity, eqp_name, from_site, time_raised) VALUES (402, 'Major', 'EQP402', 'SiteB', '2023-10-26 12:05:00');\nINSERT INTO alarm_label (id, slogan) VALUES (402, 'Link Error');\nINSERT INTO alarm (id, severity, eqp_name, from_site, time_raised) VALUES (403, 'Warning', 'EQP403', 'SiteB', '2023-10-26 12:10:00');\nINSERT INTO alarm_label (id, slogan) VALUES (403, 'High Utilization');"}
{"sql_prompt": "List alarm details from the view v_alarms for the site named 'Central Office'.", "sql": "SELECT v.* FROM v_alarms v JOIN sites s ON v.from_site = s.\"SITE_ID\" WHERE s.\"SITE_NAME\" = 'Central Office';", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), eqp_name character varying(250), from_site character varying(250), time_raised timestamp without time zone, raw_alarm_type character varying(250), device_name character varying(250), device_type character varying(250), ems_name character varying(250), time_cleared timestamp without time zone, remote_eqp_name character varying(250), time_up timestamp without time zone, time_down timestamp without time zone, additional_text text, vendor character varying(250), tt_id character varying(250));\nCREATE TABLE alarm_label (id bigint, domain_id character varying(250), slogan character varying(250));\nCREATE TABLE sites (\"SITE_ID\" text, \"SITE_NAME\" text);\nCREATE VIEW v_alarms AS SELECT a.id AS alarm_id, a.severity, a.eqp_name, a.from_site, a.remote_eqp_name, a.time_up, a.time_down, l.slogan AS description, a.additional_text, a.vendor, a.raw_alarm_type AS alarm_type, a.device_name, a.device_type, l.domain_id AS domain, a.tt_id, a.ems_name, a.time_cleared AS ts_cleared FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\") VALUES ('S001', 'Central Office');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\") VALUES ('S002', 'West Hub');\nINSERT INTO alarm (id, severity, eqp_name, from_site, time_raised) VALUES (501, 'Major', 'EQP501', 'S001', '2023-10-27 09:00:00');\nINSERT INTO alarm_label (id, slogan) VALUES (501, 'Interface Down');\nINSERT INTO alarm (id, severity, eqp_name, from_site, time_raised) VALUES (502, 'Minor', 'EQP502', 'S002', '2023-10-27 09:05:00');\nINSERT INTO alarm_label (id, slogan) VALUES (502, 'Fan Speed Low');"}
{"sql_prompt": "Show all IP addresses associated with network elements of model code 'ASR9K'.", "sql": "SELECT p.\"IP_ADDRESS\", p.\"CODE\" FROM ports p JOIN network_elements ne ON p.\"NETWORK_ELEMENT_ID\" = ne.\"NETWORK_ELEMENT_ID\" WHERE ne.\"MODEL_CODE\" = 'ASR9K';", "sql_context": "CREATE TABLE ports (index bigint, \"NODE_NAME\" text, \"MODEL_CODE\" text, \"NETWORK_ELEMENT_ID\" bigint, \"CODE\" text, \"IP_ADDRESS\" text);\nCREATE TABLE network_elements (index bigint, \"NODE_NAME\" text, \"NETWORK_ELEMENT_ID\" bigint, \"MODEL_CODE\" text);\nINSERT INTO network_elements (index, \"NODE_NAME\", \"NETWORK_ELEMENT_ID\", \"MODEL_CODE\") VALUES (1, 'Router1', 101, 'ASR9K');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"NETWORK_ELEMENT_ID\", \"MODEL_CODE\") VALUES (2, 'Switch1', 102, 'NCS5K');\nINSERT INTO ports (index, \"NODE_NAME\", \"NETWORK_ELEMENT_ID\", \"CODE\", \"IP_ADDRESS\") VALUES (1, 'Router1', 101, 'Gi0/0/0/0', '10.1.1.1');\nINSERT INTO ports (index, \"NODE_NAME\", \"NETWORK_ELEMENT_ID\", \"CODE\", \"IP_ADDRESS\") VALUES (2, 'Router1', 101, 'Gi0/0/0/1', '10.1.1.5');\nINSERT INTO ports (index, \"NODE_NAME\", \"NETWORK_ELEMENT_ID\", \"CODE\", \"IP_ADDRESS\") VALUES (3, 'Switch1', 102, 'Te0/1', '192.168.0.1');"}
{"sql_prompt": "Show PE names and their corresponding PEIP model for VLAN ID 100.", "sql": "SELECT pe.\"PE_NAME\", peip.\"PEIP_MODEL\" FROM mobile_pe pe JOIN mobile_peip peip ON pe.\"VLAN_ID\" = peip.\"VLAN_ID\" WHERE pe.\"VLAN_ID\" = 100;", "sql_context": "CREATE TABLE mobile_pe (index bigint, \"VLAN_ID\" double precision, \"LOGICAL_LINK_ID\" double precision, \"PE_ID\" bigint, \"PE_NAME\" text, \"PE_STATUS\" text, \"ENTITY_TYPE\" text, \"POSITION\" bigint);\nCREATE TABLE mobile_peip (index bigint, \"VLAN_ID\" double precision, \"PEIP_ID\" bigint, \"SUBNET\" double precision, \"TXP\" text, \"ENTITY_TYPE\" text, \"VPNL3_ID\" double precision, \"PEIP_MODEL\" text, \"POSITION\" bigint, \"STATUS\" text);\nINSERT INTO mobile_pe (index, \"VLAN_ID\", \"PE_NAME\") VALUES (1, 100, 'PE-Milan-1');\nINSERT INTO mobile_peip (index, \"VLAN_ID\", \"PEIP_MODEL\") VALUES (1, 100, 'ModelX');\nINSERT INTO mobile_pe (index, \"VLAN_ID\", \"PE_NAME\") VALUES (2, 200, 'PE-Rome-1');\nINSERT INTO mobile_peip (index, \"VLAN_ID\", \"PEIP_MODEL\") VALUES (2, 100, 'ModelY');\nINSERT INTO mobile_peip (index, \"VLAN_ID\", \"PEIP_MODEL\") VALUES (3, 200, 'ModelZ');"}
{"sql_prompt": "Find the description and location for the leased line with short name 'LL-CustomerA'.", "sql": "SELECT \"DESCRIPTION\", \"LOCATION\" FROM leased_lines WHERE \"SHORT_NAME\" = 'LL-CustomerA';", "sql_context": "CREATE TABLE leased_lines (index bigint, \"SHORT_NAME\" text, \"LOCATION\" text, \"TRAIL_NAME\" text, \"NUMERO_TD\" text, \"CODE\" text, \"DESCRIPTION\" text);\nINSERT INTO leased_lines (index, \"SHORT_NAME\", \"LOCATION\", \"DESCRIPTION\") VALUES (1, 'LL-CustomerA', 'Building X', 'Leased Line to Customer A HQ');\nINSERT INTO leased_lines (index, \"SHORT_NAME\", \"LOCATION\", \"DESCRIPTION\") VALUES (2, 'LL-CustomerB', 'Building Y', 'Backup Link for Customer B');"}
{"sql_prompt": "Show the path ethernet name and its corresponding section IDs and positions.", "sql": "SELECT pe.\"NAME\", pes.\"PATH_ETHERNET_SECTION_ID\", pes.\"POSITION_IN_PATH\" FROM path_ethernet pe JOIN path_ethernet_serv pes ON pe.\"PATH_ETHERNET_ID\" = pes.\"PATH_ETHERNET_ID\";", "sql_context": "CREATE TABLE path_ethernet (index bigint, \"VLAN_ID\" bigint, \"VPLS_ID\" double precision, \"PATH_ETHERNET_ID\" bigint, \"PATH_ETHERNET_STATUS\" text, \"NAME\" text);\nCREATE TABLE path_ethernet_serv (index bigint, \"PATH_ETHERNET_ID\" bigint, \"PATH_ETHERNET_SECTION_ID\" bigint, \"POSITION_IN_PATH\" bigint, \"VLAN_IN_ID\" bigint, \"VPLS_ID\" double precision, \"VLAN_OUT_ID\" bigint);\nINSERT INTO path_ethernet (index, \"PATH_ETHERNET_ID\", \"NAME\") VALUES (1, 1001, 'PathEth-A');\nINSERT INTO path_ethernet_serv (index, \"PATH_ETHERNET_ID\", \"PATH_ETHERNET_SECTION_ID\", \"POSITION_IN_PATH\") VALUES (1, 1001, 5001, 1);\nINSERT INTO path_ethernet_serv (index, \"PATH_ETHERNET_ID\", \"PATH_ETHERNET_SECTION_ID\", \"POSITION_IN_PATH\") VALUES (2, 1001, 5002, 2);"}
{"sql_prompt": "Count the number of alarms for each severity level.", "sql": "SELECT severity, COUNT(*) as alarm_count FROM alarm GROUP BY severity ORDER BY alarm_count DESC;", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250));\nINSERT INTO alarm (id, severity) VALUES (601, 'Critical');\nINSERT INTO alarm (id, severity) VALUES (602, 'Major');\nINSERT INTO alarm (id, severity) VALUES (603, 'Critical');\nINSERT INTO alarm (id, severity) VALUES (604, 'Warning');\nINSERT INTO alarm (id, severity) VALUES (605, 'Major');\nINSERT INTO alarm (id, severity) VALUES (606, 'Critical');"}
{"sql_prompt": "How many incidents are there in each category?", "sql": "SELECT category, COUNT(*) as incident_count FROM incident GROUP BY category;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), category character varying(100));\nINSERT INTO incident (incident_number, category) VALUES ('INC001', 'Network');\nINSERT INTO incident (incident_number, category) VALUES ('INC002', 'Server');\nINSERT INTO incident (incident_number, category) VALUES ('INC003', 'Network');\nINSERT INTO incident (incident_number, category) VALUES ('INC004', 'Application');\nINSERT INTO incident (incident_number, category) VALUES ('INC005', 'Network');"}
{"sql_prompt": "Count the number of network elements supplied by each vendor.", "sql": "SELECT \"VENDOR_NAME\", COUNT(*) as element_count FROM network_elements GROUP BY \"VENDOR_NAME\";", "sql_context": "CREATE TABLE network_elements (index bigint, \"NODE_NAME\" text, \"VENDOR_NAME\" text);\nINSERT INTO network_elements (index, \"NODE_NAME\", \"VENDOR_NAME\") VALUES (1, 'RouterA', 'Cisco');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"VENDOR_NAME\") VALUES (2, 'SwitchB', 'Nokia');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"VENDOR_NAME\") VALUES (3, 'RouterC', 'Cisco');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"VENDOR_NAME\") VALUES (4, 'FirewallD', 'Juniper');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"VENDOR_NAME\") VALUES (5, 'RouterE', 'Cisco');"}
{"sql_prompt": "What is the average repeated count for alarms, grouped by device type?", "sql": "SELECT device_type, AVG(repeated_count) as avg_repeat_count FROM alarm GROUP BY device_type;", "sql_context": "CREATE TABLE alarm (id bigint, device_type character varying(250), repeated_count integer);\nINSERT INTO alarm (id, device_type, repeated_count) VALUES (701, 'Router', 5);\nINSERT INTO alarm (id, device_type, repeated_count) VALUES (702, 'Switch', 2);\nINSERT INTO alarm (id, device_type, repeated_count) VALUES (703, 'Router', 10);\nINSERT INTO alarm (id, device_type, repeated_count) VALUES (704, 'Router', 3);\nINSERT INTO alarm (id, device_type, repeated_count) VALUES (705, 'Switch', 4);"}
{"sql_prompt": "List assignment groups that have been assigned more than 2 incidents.", "sql": "SELECT assignment_group, COUNT(*) as incident_count FROM incident WHERE assignment_group IS NOT NULL GROUP BY assignment_group HAVING COUNT(*) > 2;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), assignment_group character varying(100));\nINSERT INTO incident (incident_number, assignment_group) VALUES ('INC010', 'Network Ops');\nINSERT INTO incident (incident_number, assignment_group) VALUES ('INC011', 'Server Ops');\nINSERT INTO incident (incident_number, assignment_group) VALUES ('INC012', 'Network Ops');\nINSERT INTO incident (incident_number, assignment_group) VALUES ('INC013', 'Security Ops');\nINSERT INTO incident (incident_number, assignment_group) VALUES ('INC014', 'Network Ops');\nINSERT INTO incident (incident_number, assignment_group) VALUES ('INC015', 'Server Ops');"}
{"sql_prompt": "Show the number of alarms raised per day.", "sql": "SELECT DATE(time_raised) as alarm_date, COUNT(*) as daily_alarm_count FROM alarm WHERE time_raised IS NOT NULL GROUP BY DATE(time_raised) ORDER BY alarm_date;", "sql_context": "CREATE TABLE alarm (id bigint, time_raised timestamp without time zone);\nINSERT INTO alarm (id, time_raised) VALUES (801, '2023-10-25 10:00:00');\nINSERT INTO alarm (id, time_raised) VALUES (802, '2023-10-25 14:30:00');\nINSERT INTO alarm (id, time_raised) VALUES (803, '2023-10-26 09:15:00');\nINSERT INTO alarm (id, time_raised) VALUES (804, '2023-10-26 11:00:00');\nINSERT INTO alarm (id, time_raised) VALUES (805, '2023-10-26 16:45:00');"}
{"sql_prompt": "Find alarms that were acknowledged after they were cleared.", "sql": "SELECT id, alarm_primary_key, time_ack, time_cleared FROM alarm WHERE time_ack > time_cleared;", "sql_context": "CREATE TABLE alarm (id bigint, alarm_primary_key character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone);\nINSERT INTO alarm (id, alarm_primary_key, time_ack, time_cleared) VALUES (901, 'ALM001', '2023-10-26 11:00:00', '2023-10-26 10:30:00');\nINSERT INTO alarm (id, alarm_primary_key, time_ack, time_cleared) VALUES (902, 'ALM002', '2023-10-26 11:05:00', '2023-10-26 11:10:00');\nINSERT INTO alarm (id, alarm_primary_key, time_ack, time_cleared) VALUES (903, 'ALM003', '2023-10-26 11:15:00', '2023-10-26 11:12:00');"}
{"sql_prompt": "List sites (ID and name) that have experienced more than 1 'Critical' alarm.", "sql": "SELECT s.\"SITE_ID\", s.\"SITE_NAME\" FROM sites s JOIN alarm a ON s.\"SITE_ID\" = a.from_site WHERE a.severity = 'Critical' GROUP BY s.\"SITE_ID\", s.\"SITE_NAME\" HAVING COUNT(a.id) > 1;", "sql_context": "CREATE TABLE sites (\"SITE_ID\" text, \"SITE_NAME\" text);\nCREATE TABLE alarm (id bigint, from_site character varying(250), severity character varying(250));\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\") VALUES ('SiteX', 'Main Datacenter');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\") VALUES ('SiteY', 'Branch Office');\nINSERT INTO alarm (id, from_site, severity) VALUES (1001, 'SiteX', 'Critical');\nINSERT INTO alarm (id, from_site, severity) VALUES (1002, 'SiteY', 'Major');\nINSERT INTO alarm (id, from_site, severity) VALUES (1003, 'SiteX', 'Critical');\nINSERT INTO alarm (id, from_site, severity) VALUES (1004, 'SiteY', 'Critical');\nINSERT INTO alarm (id, from_site, severity) VALUES (1005, 'SiteX', 'Warning');"}
{"sql_prompt": "Show the latest incident reported for each distinct configuration item.", "sql": "WITH RankedIncidents AS ( SELECT incident_number, configuration_item, short_description, created_date, ROW_NUMBER() OVER(PARTITION BY configuration_item ORDER BY created_date DESC) as rn FROM incident WHERE configuration_item IS NOT NULL ) SELECT incident_number, configuration_item, short_description, created_date FROM RankedIncidents WHERE rn = 1;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), configuration_item character varying(100), short_description text, created_date timestamp without time zone);\nINSERT INTO incident (incident_number, configuration_item, short_description, created_date) VALUES ('INC201', 'ServerA', 'CPU High', '2023-10-26 09:00:00');\nINSERT INTO incident (incident_number, configuration_item, short_description, created_date) VALUES ('INC202', 'RouterB', 'Link Down', '2023-10-26 10:00:00');\nINSERT INTO incident (incident_number, configuration_item, short_description, created_date) VALUES ('INC203', 'ServerA', 'Disk Space Low', '2023-10-26 11:00:00');\nINSERT INTO incident (incident_number, configuration_item, short_description, created_date) VALUES ('INC204', 'RouterB', 'Flapping', '2023-10-25 15:00:00');\nINSERT INTO incident (incident_number, configuration_item, short_description, created_date) VALUES ('INC205', 'SwitchC', 'Port Error', '2023-10-26 12:00:00');"}
{"sql_prompt": "Display the node name and model of network elements that have generated a 'Critical' alarm.", "sql": "SELECT DISTINCT ne.\"NODE_NAME\", ne.\"MODEL_CODE\" FROM network_elements ne JOIN alarm a ON ne.\"NODE_NAME\" = a.device_name WHERE a.severity = 'Critical';", "sql_context": "CREATE TABLE network_elements (index bigint, \"NODE_NAME\" text, \"MODEL_CODE\" text);\nCREATE TABLE alarm (id bigint, device_name character varying(250), severity character varying(250));\nINSERT INTO network_elements (index, \"NODE_NAME\", \"MODEL_CODE\") VALUES (1, 'RouterA', 'XYZ-100');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"MODEL_CODE\") VALUES (2, 'SwitchB', 'ABC-200');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"MODEL_CODE\") VALUES (3, 'ServerC', 'DEF-300');\nINSERT INTO alarm (id, device_name, severity) VALUES (1101, 'RouterA', 'Critical');\nINSERT INTO alarm (id, device_name, severity) VALUES (1102, 'SwitchB', 'Major');\nINSERT INTO alarm (id, device_name, severity) VALUES (1103, 'ServerC', 'Critical');\nINSERT INTO alarm (id, device_name, severity) VALUES (1104, 'RouterA', 'Warning');"}
{"sql_prompt": "Show the incident number and description for all incidents assigned to 'John Doe'.", "sql": "SELECT incident_number, description FROM incident WHERE assigned_to = 'John Doe';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), assigned_to character varying(100), description text);\nINSERT INTO incident (incident_number, assigned_to, description) VALUES ('INC00123', 'John Doe', 'Network connectivity issue on floor 3.');\nINSERT INTO incident (incident_number, assigned_to, description) VALUES ('INC00124', 'Jane Smith', 'Printer offline in marketing department.');"}
{"sql_prompt": "List the IDs and equipment names for all alarms with 'Critical' severity.", "sql": "SELECT id, eqp_name FROM alarm WHERE severity = 'Critical';", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), severity character varying(250));\nINSERT INTO alarm (id, eqp_name, severity) VALUES (1001, 'Router_Core_1', 'Critical');\nINSERT INTO alarm (id, eqp_name, severity) VALUES (1002, 'Switch_Access_2', 'Major');"}
{"sql_prompt": "Count the number of alarms for each severity level.", "sql": "SELECT severity, COUNT(*) AS alarm_count FROM alarm GROUP BY severity;", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250));\nINSERT INTO alarm (id, severity) VALUES (1001, 'Critical');\nINSERT INTO alarm (id, severity) VALUES (1002, 'Major');\nINSERT INTO alarm (id, severity) VALUES (1003, 'Critical');"}
{"sql_prompt": "Find the site name and address for the site with SITE_ID 'SITE_A1'.", "sql": "SELECT \"SITE_NAME\", \"ADDRESS\" FROM sites WHERE \"SITE_ID\" = 'SITE_A1';", "sql_context": "CREATE TABLE sites (\"SITE_ID\" text, \"SITE_NAME\" text, \"ADDRESS\" text);\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"ADDRESS\") VALUES ('SITE_A1', 'Main Datacenter', '123 Tech Avenue');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"ADDRESS\") VALUES ('SITE_B2', 'Branch Office West', '456 Business Park');"}
{"sql_prompt": "Show the alarm ID, severity, and slogan description for alarms with ID 1005.", "sql": "SELECT T1.id, T1.severity, T2.slogan FROM alarm AS T1 JOIN alarm_label AS T2 ON T1.id = T2.id WHERE T1.id = 1005;", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250));\nCREATE TABLE alarm_label (id bigint, slogan character varying(250));\nINSERT INTO alarm (id, severity) VALUES (1005, 'Warning');\nINSERT INTO alarm_label (id, slogan) VALUES (1005, 'Temperature Threshold Exceeded');"}
{"sql_prompt": "List all distinct device types present in the alarm table.", "sql": "SELECT DISTINCT device_type FROM alarm;", "sql_context": "CREATE TABLE alarm (id bigint, device_type character varying(250));\nINSERT INTO alarm (id, device_type) VALUES (1006, 'Router');\nINSERT INTO alarm (id, device_type) VALUES (1007, 'Switch');\nINSERT INTO alarm (id, device_type) VALUES (1008, 'Router');"}
{"sql_prompt": "Find the node name and IP address for equipment with model code 'ASR9K'.", "sql": "SELECT \"NODE_NAME\", \"IP_ADDRESS\" FROM equipment_ip_address WHERE \"MODEL_CODE\" = 'ASR9K';", "sql_context": "CREATE TABLE equipment_ip_address (index bigint, \"NODE_NAME\" text, \"MODEL_CODE\" text, \"IP_ADDRESS\" text);\nINSERT INTO equipment_ip_address (index, \"NODE_NAME\", \"MODEL_CODE\", \"IP_ADDRESS\") VALUES (1, 'CoreRouterNYC', 'ASR9K', '10.1.1.1');\nINSERT INTO equipment_ip_address (index, \"NODE_NAME\", \"MODEL_CODE\", \"IP_ADDRESS\") VALUES (2, 'EdgeSwitchLA', 'C9300', '10.2.2.1');"}
{"sql_prompt": "Show the 10 most recent alarms based on their time_raised timestamp, displaying their ID and specific problem.", "sql": "SELECT id, specific_problem FROM alarm ORDER BY time_raised DESC LIMIT 10;", "sql_context": "CREATE TABLE alarm (id bigint, specific_problem character varying(250), time_raised timestamp without time zone);\nINSERT INTO alarm (id, specific_problem, time_raised) VALUES (1009, 'Link Flap Port 1/1', '2023-10-27 10:00:00');\nINSERT INTO alarm (id, specific_problem, time_raised) VALUES (1010, 'High CPU Utilization', '2023-10-27 10:05:00');"}
{"sql_prompt": "What are the equipment name, alarm type, and vendor for alarms originating from 'EMS_System_X'?", "sql": "SELECT eqp_name, type, vendor FROM alarm WHERE ems_name = 'EMS_System_X';", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), type character varying(250), vendor character varying(250), ems_name character varying(250));\nINSERT INTO alarm (id, eqp_name, type, vendor, ems_name) VALUES (1011, 'ServerRack5', 'Power Supply Failure', 'VendorA', 'EMS_System_X');\nINSERT INTO alarm (id, eqp_name, type, vendor, ems_name) VALUES (1012, 'FirewallMain', 'Security Alert', 'VendorB', 'EMS_System_Y');"}
{"sql_prompt": "List incidents created after October 26th, 2023, showing their number and creation date.", "sql": "SELECT incident_number, created_date FROM incident WHERE created_date > '2023-10-26 00:00:00';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), created_date timestamp without time zone);\nINSERT INTO incident (incident_number, created_date) VALUES ('INC00125', '2023-10-25 14:30:00');\nINSERT INTO incident (incident_number, created_date) VALUES ('INC00126', '2023-10-27 09:15:00');"}
{"sql_prompt": "Find the network element ID, type code, and vendor name for elements located in 'London'.", "sql": "SELECT \"NETWORK_ELEMENT_ID\", \"NETWORK_ELEMENT_TYPE_CODE\", \"VENDOR_NAME\" FROM network_elements WHERE \"LOCATION\" = 'London';", "sql_context": "CREATE TABLE network_elements (index bigint, \"LOCATION\" text, \"NETWORK_ELEMENT_ID\" bigint, \"NETWORK_ELEMENT_TYPE_CODE\" text, \"VENDOR_NAME\" text);\nINSERT INTO network_elements (index, \"LOCATION\", \"NETWORK_ELEMENT_ID\", \"NETWORK_ELEMENT_TYPE_CODE\", \"VENDOR_NAME\") VALUES (1, 'London', 12345, 'ROUTER', 'Cisco');\nINSERT INTO network_elements (index, \"LOCATION\", \"NETWORK_ELEMENT_ID\", \"NETWORK_ELEMENT_TYPE_CODE\", \"VENDOR_NAME\") VALUES (2, 'Paris', 67890, 'SWITCH', 'Juniper');"}
{"sql_prompt": "Show the cable system name and type for cable systems connecting SITE_A_ID 'S1' and SITE_B_ID 'S2'.", "sql": "SELECT \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\" FROM cable_system WHERE \"SITE_A_ID\" = 'S1' AND \"SITE_B_ID\" = 'S2';", "sql_context": "CREATE TABLE cable_system (index bigint, \"CABLE_SYSTEM_NAME\" text, \"CABLE_TYPE\" text, \"SITE_A_ID\" text, \"SITE_B_ID\" text);\nINSERT INTO cable_system (index, \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\", \"SITE_A_ID\", \"SITE_B_ID\") VALUES (1, 'SubSeaLink_1', 'Fiber Optic', 'S1', 'S2');\nINSERT INTO cable_system (index, \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\", \"SITE_A_ID\", \"SITE_B_ID\") VALUES (2, 'MetroConnect_2', 'Copper', 'S3', 'S4');"}
{"sql_prompt": "What is the average repetition count (`repeated_count`) for alarms with status 'Active'?", "sql": "SELECT AVG(repeated_count) FROM alarm WHERE status = 'Active';", "sql_context": "CREATE TABLE alarm (id bigint, repeated_count integer, status character varying(250));\nINSERT INTO alarm (id, repeated_count, status) VALUES (1013, 5, 'Active');\nINSERT INTO alarm (id, repeated_count, status) VALUES (1014, 10, 'Active');\nINSERT INTO alarm (id, repeated_count, status) VALUES (1015, 2, 'Cleared');"}
{"sql_prompt": "List the equipment names (`eqp_name`) associated with alarms that have a non-null trouble ticket ID (`tt_id`).", "sql": "SELECT eqp_name FROM alarm WHERE tt_id IS NOT NULL;", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), tt_id character varying(250));\nINSERT INTO alarm (id, eqp_name, tt_id) VALUES (1016, 'Router_Edge_3', 'TT12345');\nINSERT INTO alarm (id, eqp_name, tt_id) VALUES (1017, 'Switch_Core_B', NULL);"}
{"sql_prompt": "Show the short name and description from equipment details where the trail name contains 'Fiber'.", "sql": "SELECT \"SHORT_NAME\", \"DESCRIPTION\" FROM equipment_details WHERE \"TRAIL_NAME\" LIKE '%Fiber%';", "sql_context": "CREATE TABLE equipment_details (index bigint, \"SHORT_NAME\" text, \"LOCATION\" text, \"TRAIL_NAME\" text, \"DESCRIPTION\" text);\nINSERT INTO equipment_details (index, \"SHORT_NAME\", \"LOCATION\", \"TRAIL_NAME\", \"DESCRIPTION\") VALUES (1, 'OLT1', 'Central Office', 'GPON Fiber Ring', 'Optical Line Terminal');\nINSERT INTO equipment_details (index, \"SHORT_NAME\", \"LOCATION\", \"TRAIL_NAME\", \"DESCRIPTION\") VALUES (2, 'MUX2', 'Remote Site', 'Copper Pair Link', 'Multiplexer Unit');"}
{"sql_prompt": "Get the incident number, category, and resolution code for incidents resolved between '2023-10-01' and '2023-10-31'.", "sql": "SELECT incident_number, category, resolution_code FROM incident WHERE resolved >= '2023-10-01 00:00:00' AND resolved <= '2023-10-31 23:59:59';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), category character varying(100), resolved timestamp without time zone, resolution_code character varying(100));\nINSERT INTO incident (incident_number, category, resolved, resolution_code) VALUES ('INC00110', 'Hardware', '2023-10-15 11:00:00', 'Replaced Faulty Card');\nINSERT INTO incident (incident_number, category, resolved, resolution_code) VALUES ('INC00111', 'Software', '2023-11-01 09:00:00', 'Configuration Update');"}
{"sql_prompt": "Find all alarms that are inhibited.", "sql": "SELECT id, eqp_name, specific_problem FROM alarm WHERE inhibit = TRUE;", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), specific_problem character varying(250), inhibit boolean);\nINSERT INTO alarm (id, eqp_name, specific_problem, inhibit) VALUES (1018, 'Server_Test_1', 'CPU Load High', TRUE);\nINSERT INTO alarm (id, eqp_name, specific_problem, inhibit) VALUES (1019, 'Router_Prod_A', 'Interface Down', FALSE);"}
{"sql_prompt": "Show the PE name and status for mobile PEs with VLAN ID 100.", "sql": "SELECT \"PE_NAME\", \"PE_STATUS\" FROM mobile_pe WHERE \"VLAN_ID\" = 100;", "sql_context": "CREATE TABLE mobile_pe (index bigint, \"VLAN_ID\" double precision, \"PE_NAME\" text, \"PE_STATUS\" text);\nINSERT INTO mobile_pe (index, \"VLAN_ID\", \"PE_NAME\", \"PE_STATUS\") VALUES (1, 100, 'PE_London_1', 'Active');\nINSERT INTO mobile_pe (index, \"VLAN_ID\", \"PE_NAME\", \"PE_STATUS\") VALUES (2, 200, 'PE_Paris_2', 'Maintenance');"}
{"sql_prompt": "List the cable segment name and status for segments of type 'Submarine'.", "sql": "SELECT \"CABLE_SEGMENT_NAME\", \"STATUS\" FROM cablesegment WHERE \"CABLE_TYPE\" = 'Submarine';", "sql_context": "CREATE TABLE cablesegment (index bigint, \"CABLE_SEGMENT_NAME\" text, \"CABLE_TYPE\" text, \"STATUS\" double precision);\nINSERT INTO cablesegment (index, \"CABLE_SEGMENT_NAME\", \"CABLE_TYPE\", \"STATUS\") VALUES (1, 'Atlantic_Seg_1', 'Submarine', 1.0);\nINSERT INTO cablesegment (index, \"CABLE_SEGMENT_NAME\", \"CABLE_TYPE\", \"STATUS\") VALUES (2, 'Metro_Link_A', 'Terrestrial', 1.0);"}
{"sql_prompt": "Find the alarm ID and the time it was acknowledged (`time_ack`) for alarms acknowledged by user 'admin_ops'.", "sql": "SELECT id, time_ack FROM alarm WHERE ack_user_id = 'admin_ops';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), time_ack timestamp without time zone);\nINSERT INTO alarm (id, ack_user_id, time_ack) VALUES (1020, 'admin_ops', '2023-10-27 11:00:00');\nINSERT INTO alarm (id, ack_user_id, time_ack) VALUES (1021, 'user_support', '2023-10-27 11:05:00');"}
{"sql_prompt": "Show the service name and status for services with access type 'Fiber'.", "sql": "SELECT \"SERVICE_NAME\", \"STATUS\" FROM service WHERE \"ACCESS_TYPE\" = 'Fiber';", "sql_context": "CREATE TABLE service (\"SERVICE_ID\" text, \"SERVICE_NAME\" text, \"STATUS\" text, \"ACCESS_TYPE\" text);\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"STATUS\", \"ACCESS_TYPE\") VALUES ('SVC001', 'Business Internet 1G', 'Active', 'Fiber');\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"STATUS\", \"ACCESS_TYPE\") VALUES ('SVC002', 'VPN Site-to-Site', 'Pending', 'DSL');"}
{"sql_prompt": "What is the node name and serial number for network elements of class 'ROUTER' provided by 'Juniper'?", "sql": "SELECT \"NODE_NAME\", \"SERIAL_NUMBER\" FROM network_elements WHERE \"ELEMENT_CLASS_CODE\" = 'ROUTER' AND \"VENDOR_NAME\" = 'Juniper';", "sql_context": "CREATE TABLE network_elements (index bigint, \"NODE_NAME\" text, \"SERIAL_NUMBER\" bigint, \"ELEMENT_CLASS_CODE\" text, \"VENDOR_NAME\" text);\nINSERT INTO network_elements (index, \"NODE_NAME\", \"SERIAL_NUMBER\", \"ELEMENT_CLASS_CODE\", \"VENDOR_NAME\") VALUES (3, 'Juniper_MX960_1', 987654321, 'ROUTER', 'Juniper');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"SERIAL_NUMBER\", \"ELEMENT_CLASS_CODE\", \"VENDOR_NAME\") VALUES (4, 'Cisco_ASR1k_2', 123456789, 'ROUTER', 'Cisco');"}
{"sql_prompt": "List the alarm ID, description, and severity using the v_alarms view for alarms in the 'Network' domain.", "sql": "SELECT alarm_id, description, severity FROM v_alarms WHERE domain = 'Network';", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), eqp_name character varying(250), from_site character varying(250), remote_eqp_name character varying(250), time_up timestamp without time zone, time_down timestamp without time zone, additional_text character varying(250), vendor character varying(250), raw_alarm_type character varying(250), device_name character varying(250), device_type character varying(250), tt_id character varying(250), ems_name character varying(250), time_cleared timestamp without time zone);\nCREATE TABLE alarm_label (id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250));\nCREATE VIEW v_alarms AS SELECT a.id AS alarm_id, a.severity, a.eqp_name, a.from_site, a.remote_eqp_name, a.time_up, a.time_down, l.slogan AS description, a.additional_text, a.vendor, a.raw_alarm_type AS alarm_type, a.device_name, a.device_type, l.domain_id AS domain, a.tt_id, a.ems_name, a.time_cleared AS ts_cleared FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO alarm (id, severity, raw_alarm_type) VALUES (2001, 'Major', 'LinkError');\nINSERT INTO alarm_label (id, domain_id, slogan) VALUES (2001, 'Network', 'Core link unstable');\nINSERT INTO alarm (id, severity, raw_alarm_type) VALUES (2002, 'Critical', 'PowerOutage');\nINSERT INTO alarm_label (id, domain_id, slogan) VALUES (2002, 'Power', 'Site power failure');"}
{"sql_prompt": "Show the outage ID and site ID for outages reported by username 'ops_team'.", "sql": "SELECT outage_id, site_id FROM outage WHERE username = 'ops_team';", "sql_context": "CREATE TABLE outage (outage_id integer, site_id character varying(50), username character varying(100));\nINSERT INTO outage (outage_id, site_id, username) VALUES (1, 'Site_X', 'ops_team');\nINSERT INTO outage (outage_id, site_id, username) VALUES (2, 'Site_Y', 'field_eng');"}
{"sql_prompt": "Find the names of cable systems associated with cable segment ID 'SEGMENT_XYZ'.", "sql": "SELECT T1.\"CABLE_SYSTEM_NAME\" FROM cable_system AS T1 JOIN cl_clsegm_rel AS T2 ON T1.\"CABLE_SYSTEM_ID\" = T2.\"CABLE_SYSTEM_ID\" WHERE T2.\"CABLE_SEGMENT_ID\" = 'SEGMENT_XYZ';", "sql_context": "CREATE TABLE cable_system (index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SYSTEM_NAME\" text);\nCREATE TABLE cl_clsegm_rel (index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SEGMENT_ID\" text);\nINSERT INTO cable_system (index, \"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\") VALUES (1, 'SYS_ALPHA', 'Alpha Cable System');\nINSERT INTO cl_clsegm_rel (index, \"CABLE_SYSTEM_ID\", \"CABLE_SEGMENT_ID\") VALUES (1, 'SYS_ALPHA', 'SEGMENT_XYZ');"}
{"sql_prompt": "List the alarm ID, comments, and comment user ID for alarms that have comments.", "sql": "SELECT id, comments, comment_user_id FROM alarm WHERE comments IS NOT NULL AND comments != '';", "sql_context": "CREATE TABLE alarm (id bigint, comments text, comment_user_id character varying(250));\nINSERT INTO alarm (id, comments, comment_user_id) VALUES (1022, 'Investigating flapping.', 'user1');\nINSERT INTO alarm (id, comments, comment_user_id) VALUES (1023, NULL, NULL);"}
{"sql_prompt": "Show the network element name, card name, and card status for cards of type 'MPA' in 'Slot 1'.", "sql": "SELECT \"NETWORK_ELEMENT_NAME\", \"CARD_NAME\", \"CARD_STATUS_CODE\" FROM rmm_equipment_details WHERE \"CARD_TYPE\" = 'MPA' AND \"SLOT_NAME\" = 'Slot 1';", "sql_context": "CREATE TABLE rmm_equipment_details (\"NETWORK_ELEMENT_NAME\" text, \"SLOT_NAME\" text, \"CARD_TYPE\" text, \"CARD_NAME\" text, \"CARD_STATUS_CODE\" text);\nINSERT INTO rmm_equipment_details (\"NETWORK_ELEMENT_NAME\", \"SLOT_NAME\", \"CARD_TYPE\", \"CARD_NAME\", \"CARD_STATUS_CODE\") VALUES ('Router_Core_1', 'Slot 1', 'MPA', 'MPA-2X10GE', 'Active');\nINSERT INTO rmm_equipment_details (\"NETWORK_ELEMENT_NAME\", \"SLOT_NAME\", \"CARD_TYPE\", \"CARD_NAME\", \"CARD_STATUS_CODE\") VALUES ('Router_Core_1', 'Slot 2', 'LineCard', 'LC-40G', 'Active');"}
{"sql_prompt": "Find the incident number and description for incidents where the root cause is 'Power Outage'.", "sql": "SELECT incident_number, description FROM incident WHERE root_cause = 'Power Outage';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), description text, root_cause character varying(100));\nINSERT INTO incident (incident_number, description, root_cause) VALUES ('INC00127', 'Complete site down', 'Power Outage');\nINSERT INTO incident (incident_number, description, root_cause) VALUES ('INC00128', 'Intermittent packet loss', 'Fiber Cut');"}
{"sql_prompt": "List all unique 'area' values from the alarm table.", "sql": "SELECT DISTINCT area FROM alarm WHERE area IS NOT NULL;", "sql_context": "CREATE TABLE alarm (id bigint, area character varying(250));\nINSERT INTO alarm (id, area) VALUES (1024, 'North Region');\nINSERT INTO alarm (id, area) VALUES (1025, 'South Region');\nINSERT INTO alarm (id, area) VALUES (1026, 'North Region');"}
{"sql_prompt": "Show the alarm ID and time raised for alarms whose specific problem description contains the word 'failure', case-insensitive.", "sql": "SELECT id, time_raised FROM alarm WHERE specific_problem ILIKE '%failure%';", "sql_context": "CREATE TABLE alarm (id bigint, time_raised timestamp without time zone, specific_problem character varying(250));\nINSERT INTO alarm (id, time_raised, specific_problem) VALUES (1027, '2023-10-27 12:00:00', 'Power Supply Failure');\nINSERT INTO alarm (id, time_raised, specific_problem) VALUES (1028, '2023-10-27 12:05:00', 'Link Degraded');\nINSERT INTO alarm (id, time_raised, specific_problem) VALUES (1029, '2023-10-27 12:10:00', 'Fan Tray FAILURE');"}
{"sql_prompt": "Show the IDs and severity of all alarms with 'Critical' severity.", "sql": "SELECT id, severity FROM alarm WHERE severity = 'Critical';", "sql_context": "CREATE TABLE alarm ( id bigint, severity character varying(250) );\nINSERT INTO alarm (id, severity) VALUES (101, 'Critical');\nINSERT INTO alarm (id, severity) VALUES (102, 'Major');\nINSERT INTO alarm (id, severity) VALUES (103, 'Critical');"}
{"sql_prompt": "Find alarms raised for the device named 'Router-Core-1'.", "sql": "SELECT id, time_raised, severity FROM alarm WHERE device_name = 'Router-Core-1';", "sql_context": "CREATE TABLE alarm ( id bigint, time_raised timestamp without time zone, severity character varying(250), device_name character varying(250) );\nINSERT INTO alarm (id, time_raised, severity, device_name) VALUES (201, '2023-10-26 10:00:00', 'Major', 'Router-Core-1');\nINSERT INTO alarm (id, time_raised, severity, device_name) VALUES (202, '2023-10-26 11:00:00', 'Warning', 'Switch-Access-5');"}
{"sql_prompt": "List critical alarms acknowledged by user 'ops_team_1'.", "sql": "SELECT id, time_ack, additional_text FROM alarm WHERE severity = 'Critical' AND ack_user_id = 'ops_team_1';", "sql_context": "CREATE TABLE alarm ( id bigint, severity character varying(250), ack_user_id character varying(250), time_ack timestamp without time zone, additional_text character varying(250) );\nINSERT INTO alarm (id, severity, ack_user_id, time_ack, additional_text) VALUES (301, 'Critical', 'ops_team_1', '2023-10-26 09:15:00', 'Investigating power supply.');\nINSERT INTO alarm (id, severity, ack_user_id, time_ack, additional_text) VALUES (302, 'Critical', 'ops_team_2', '2023-10-26 09:30:00', 'Checking fiber link.');\nINSERT INTO alarm (id, severity, ack_user_id, time_ack, additional_text) VALUES (303, 'Major', 'ops_team_1', '2023-10-26 10:00:00', 'CPU load high.');"}
{"sql_prompt": "Show incidents created since October 25th, 2023, ordered by creation date.", "sql": "SELECT incident_number, affected_service, created_date FROM incident WHERE created_date >= '2023-10-25 00:00:00' ORDER BY created_date;", "sql_context": "CREATE TABLE incident ( incident_number character varying(50), affected_service character varying(100), created_date timestamp without time zone );\nINSERT INTO incident (incident_number, affected_service, created_date) VALUES ('INC001', 'VPN Service', '2023-10-24 14:00:00');\nINSERT INTO incident (incident_number, affected_service, created_date) VALUES ('INC002', 'Internet Access', '2023-10-25 08:30:00');\nINSERT INTO incident (incident_number, affected_service, created_date) VALUES ('INC003', 'Mobile Data', '2023-10-26 11:15:00');"}
{"sql_prompt": "Count the number of alarms for each severity level.", "sql": "SELECT severity, COUNT(*) AS alarm_count FROM alarm GROUP BY severity;", "sql_context": "CREATE TABLE alarm ( id bigint, severity character varying(250) );\nINSERT INTO alarm (id, severity) VALUES (401, 'Critical');\nINSERT INTO alarm (id, severity) VALUES (402, 'Major');\nINSERT INTO alarm (id, severity) VALUES (403, 'Critical');\nINSERT INTO alarm (id, severity) VALUES (404, 'Warning');"}
{"sql_prompt": "How many critical alarms occurred in the 'North' district?", "sql": "SELECT COUNT(*) FROM alarm WHERE severity = 'Critical' AND district = 'North';", "sql_context": "CREATE TABLE alarm ( id bigint, severity character varying(250), district character varying(250) );\nINSERT INTO alarm (id, severity, district) VALUES (501, 'Critical', 'North');\nINSERT INTO alarm (id, severity, district) VALUES (502, 'Major', 'North');\nINSERT INTO alarm (id, severity, district) VALUES (503, 'Critical', 'South');\nINSERT INTO alarm (id, severity, district) VALUES (504, 'Critical', 'North');"}
{"sql_prompt": "Get the alarm ID, severity, and slogan for all alarms.", "sql": "SELECT a.id, a.severity, l.slogan FROM alarm a JOIN alarm_label l ON a.id = l.id;", "sql_context": "CREATE TABLE alarm ( id bigint, severity character varying(250) );\nCREATE TABLE alarm_label ( id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250) );\nINSERT INTO alarm (id, severity) VALUES (601, 'Major');\nINSERT INTO alarm (id, severity) VALUES (602, 'Warning');\nINSERT INTO alarm_label (id, slogan) VALUES (601, 'Link Down');\nINSERT INTO alarm_label (id, slogan) VALUES (602, 'High Temperature');"}
{"sql_prompt": "Using the alarm view, show the severity, equipment name, and description for alarm ID 701.", "sql": "SELECT severity, eqp_name, description FROM v_alarms WHERE alarm_id = 701;", "sql_context": "CREATE TABLE alarm ( id bigint, severity character varying(250), eqp_name character varying(250), from_site character varying(250), remote_eqp_name character varying(250), time_up timestamp without time zone, time_down timestamp without time zone, additional_text character varying(250), vendor character varying(250), raw_alarm_type character varying(250), device_name character varying(250), device_type character varying(250), tt_id character varying(250), ems_name character varying(250), time_cleared timestamp without time zone );\nCREATE TABLE alarm_label ( id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250) );\nCREATE VIEW v_alarms AS SELECT a.id AS alarm_id, a.severity, a.eqp_name, a.from_site, a.remote_eqp_name, a.time_up, a.time_down, l.slogan AS description, a.additional_text, a.vendor, a.raw_alarm_type AS alarm_type, a.device_name, a.device_type, l.domain_id AS domain, a.tt_id, a.ems_name, a.time_cleared AS ts_cleared FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO alarm (id, severity, eqp_name) VALUES (701, 'Critical', 'EQP-A1');\nINSERT INTO alarm_label (id, slogan) VALUES (701, 'Equipment Failure');"}
{"sql_prompt": "Find incident numbers and their descriptions for incidents affecting the 'Mobile Core' service.", "sql": "SELECT incident_number, description FROM incident WHERE affected_service = 'Mobile Core';", "sql_context": "CREATE TABLE incident ( incident_number character varying(50), affected_service character varying(100), description text );\nINSERT INTO incident (incident_number, affected_service, description) VALUES ('INC004', 'Mobile Core', 'Packet loss detected in GGSN.');\nINSERT INTO incident (incident_number, affected_service, description) VALUES ('INC005', 'Broadband', 'Customer unable to connect.');\nINSERT INTO incident (incident_number, affected_service, description) VALUES ('INC006', 'Mobile Core', 'High latency on interface X.');"}
{"sql_prompt": "Count the number of incidents assigned to each assignment group.", "sql": "SELECT assignment_group, COUNT(*) AS incident_count FROM incident GROUP BY assignment_group ORDER BY incident_count DESC;", "sql_context": "CREATE TABLE incident ( incident_number character varying(50), assignment_group character varying(100) );\nINSERT INTO incident (incident_number, assignment_group) VALUES ('INC007', 'Network Ops L2');\nINSERT INTO incident (incident_number, assignment_group) VALUES ('INC008', 'Network Ops L1');\nINSERT INTO incident (incident_number, assignment_group) VALUES ('INC009', 'Network Ops L2');"}
{"sql_prompt": "What are the IP addresses associated with network elements having model code 'ASR9K'?", "sql": "SELECT T1.\"IP_ADDRESS\", T2.\"NODE_NAME\" FROM equipment_ip_address AS T1 INNER JOIN network_elements AS T2 ON T1.\"NETWORK_ELEMENT_ID\" = T2.\"NETWORK_ELEMENT_ID\" WHERE T2.\"MODEL_CODE\" = 'ASR9K';", "sql_context": "CREATE TABLE network_elements ( index bigint, \"LOCATION\" text, \"NODE_NAME\" text, \"NETWORK_ELEMENT_ID\" bigint, \"NETWORK_ELEMENT_TYPE_CODE\" text, \"SERIAL_NUMBER\" bigint, \"ACTIVITY_STATUS_CODE\" text, \"MODEL_CODE\" text, \"VENDOR_NAME\" text, \"ELEMENT_CLASS_CODE\" text, \"ELEMENT_CLASS_DESC\" text, \"CARD_TYPE_ID\" double precision, \"SYSTEM_NAME\" text, \"LOCATION_SHORT_NAME\" text );\nCREATE TABLE equipment_ip_address ( index bigint, \"NODE_NAME\" text, \"MODEL_CODE\" text, \"NETWORK_ELEMENT_ID\" bigint, \"CODE\" text, \"IP_ADDRESS\" text );\nINSERT INTO network_elements (\"NODE_NAME\", \"NETWORK_ELEMENT_ID\", \"MODEL_CODE\") VALUES ('CoreRouter1', 1001, 'ASR9K');\nINSERT INTO network_elements (\"NODE_NAME\", \"NETWORK_ELEMENT_ID\", \"MODEL_CODE\") VALUES ('EdgeSwitch2', 1002, 'NCS5500');\nINSERT INTO equipment_ip_address (\"NETWORK_ELEMENT_ID\", \"IP_ADDRESS\") VALUES (1001, '10.1.1.1');\nINSERT INTO equipment_ip_address (\"NETWORK_ELEMENT_ID\", \"IP_ADDRESS\") VALUES (1001, '192.168.1.1');\nINSERT INTO equipment_ip_address (\"NETWORK_ELEMENT_ID\", \"IP_ADDRESS\") VALUES (1002, '10.2.2.1');"}
{"sql_prompt": "List alarms that were cleared between 2023-10-26 08:00:00 and 2023-10-26 12:00:00.", "sql": "SELECT id, severity, time_cleared FROM alarm WHERE time_cleared BETWEEN '2023-10-26 08:00:00' AND '2023-10-26 12:00:00';", "sql_context": "CREATE TABLE alarm ( id bigint, severity character varying(250), time_cleared timestamp without time zone );\nINSERT INTO alarm (id, severity, time_cleared) VALUES (1201, 'Major', '2023-10-26 07:55:00');\nINSERT INTO alarm (id, severity, time_cleared) VALUES (1202, 'Warning', '2023-10-26 09:30:00');\nINSERT INTO alarm (id, severity, time_cleared) VALUES (1203, 'Critical', '2023-10-26 11:45:00');\nINSERT INTO alarm (id, severity, time_cleared) VALUES (1204, 'Major', '2023-10-26 12:05:00');"}
{"sql_prompt": "Show alarms that have not yet been acknowledged.", "sql": "SELECT id, severity, time_raised FROM alarm WHERE time_ack IS NULL;", "sql_context": "CREATE TABLE alarm ( id bigint, severity character varying(250), time_raised timestamp without time zone, time_ack timestamp without time zone );\nINSERT INTO alarm (id, severity, time_raised, time_ack) VALUES (1301, 'Critical', '2023-10-26 14:00:00', NULL);\nINSERT INTO alarm (id, severity, time_raised, time_ack) VALUES (1302, 'Major', '2023-10-26 14:05:00', '2023-10-26 14:10:00');\nINSERT INTO alarm (id, severity, time_raised, time_ack) VALUES (1303, 'Warning', '2023-10-26 14:15:00', NULL);"}
{"sql_prompt": "Find incidents where the short description contains the word 'outage'.", "sql": "SELECT incident_number, short_description FROM incident WHERE short_description LIKE '%outage%';", "sql_context": "CREATE TABLE incident ( incident_number character varying(50), short_description text );\nINSERT INTO incident (incident_number, short_description) VALUES ('INC010', 'Network outage reported in downtown area.');\nINSERT INTO incident (incident_number, short_description) VALUES ('INC011', 'High latency on core link.');\nINSERT INTO incident (incident_number, short_description) VALUES ('INC012', 'Customer reporting service outage.');"}
{"sql_prompt": "Show the 5 most recently raised alarms.", "sql": "SELECT id, severity, time_raised FROM alarm ORDER BY time_raised DESC LIMIT 5;", "sql_context": "CREATE TABLE alarm ( id bigint, severity character varying(250), time_raised timestamp without time zone );\nINSERT INTO alarm (id, severity, time_raised) VALUES (1501, 'Critical', '2023-10-26 15:00:00');\nINSERT INTO alarm (id, severity, time_raised) VALUES (1502, 'Major', '2023-10-26 15:05:00');\nINSERT INTO alarm (id, severity, time_raised) VALUES (1503, 'Warning', '2023-10-26 14:55:00');\nINSERT INTO alarm (id, severity, time_raised) VALUES (1504, 'Critical', '2023-10-26 15:10:00');\nINSERT INTO alarm (id, severity, time_raised) VALUES (1505, 'Major', '2023-10-26 15:08:00');\nINSERT INTO alarm (id, severity, time_raised) VALUES (1506, 'Minor', '2023-10-26 14:50:00');"}
{"sql_prompt": "Show critical or major alarms related to equipment 'EQP-XG-01' that are not inhibited.", "sql": "SELECT id, severity, time_raised FROM alarm WHERE severity IN ('Critical', 'Major') AND eqp_name = 'EQP-XG-01' AND inhibit = false;", "sql_context": "CREATE TABLE alarm ( id bigint, severity character varying(250), eqp_name character varying(250), time_raised timestamp without time zone, inhibit boolean );\nINSERT INTO alarm (id, severity, eqp_name, time_raised, inhibit) VALUES (1601, 'Critical', 'EQP-XG-01', '2023-10-26 16:00:00', false);\nINSERT INTO alarm (id, severity, eqp_name, time_raised, inhibit) VALUES (1602, 'Major', 'EQP-XG-01', '2023-10-26 16:05:00', true);\nINSERT INTO alarm (id, severity, eqp_name, time_raised, inhibit) VALUES (1603, 'Warning', 'EQP-XG-01', '2023-10-26 16:10:00', false);\nINSERT INTO alarm (id, severity, eqp_name, time_raised, inhibit) VALUES (1604, 'Major', 'EQP-XG-01', '2023-10-26 16:15:00', false);\nINSERT INTO alarm (id, severity, eqp_name, time_raised, inhibit) VALUES (1605, 'Critical', 'EQP-AB-02', '2023-10-26 16:20:00', false);"}
{"sql_prompt": "Which assignment groups have more than 5 open incidents (i.e., not closed)?", "sql": "SELECT assignment_group, COUNT(*) AS open_incident_count FROM incident WHERE closed IS NULL GROUP BY assignment_group HAVING COUNT(*) > 5;", "sql_context": "CREATE TABLE incident ( incident_number character varying(50), assignment_group character varying(100), closed timestamp without time zone );\nINSERT INTO incident (incident_number, assignment_group, closed) VALUES ('INC101', 'Group A', NULL), ('INC102', 'Group A', NULL), ('INC103', 'Group A', NULL), ('INC104', 'Group A', NULL), ('INC105', 'Group A', NULL), ('INC106', 'Group A', NULL);\nINSERT INTO incident (incident_number, assignment_group, closed) VALUES ('INC201', 'Group B', NULL), ('INC202', 'Group B', '2023-10-25 10:00:00'), ('INC203', 'Group B', NULL), ('INC204', 'Group B', NULL), ('INC205', 'Group B', NULL), ('INC206', 'Group B', NULL);\nINSERT INTO incident (incident_number, assignment_group, closed) VALUES ('INC301', 'Group C', NULL);"}
{"sql_prompt": "Find alarms associated with network elements located at 'SiteA'.", "sql": "SELECT T1.id, T1.severity, T1.time_raised FROM alarm AS T1 INNER JOIN network_elements AS T2 ON T1.eqp_name = T2.\"NODE_NAME\" WHERE T2.\"LOCATION\" = 'SiteA';", "sql_context": "CREATE TABLE alarm ( id bigint, severity character varying(250), eqp_name character varying(250), time_raised timestamp without time zone );\nCREATE TABLE network_elements ( index bigint, \"LOCATION\" text, \"NODE_NAME\" text, \"NETWORK_ELEMENT_ID\" bigint );\nINSERT INTO alarm (id, severity, eqp_name, time_raised) VALUES (1801, 'Major', 'NodeA1', '2023-10-26 17:00:00');\nINSERT INTO alarm (id, severity, eqp_name, time_raised) VALUES (1802, 'Critical', 'NodeB2', '2023-10-26 17:05:00');\nINSERT INTO alarm (id, severity, eqp_name, time_raised) VALUES (1803, 'Warning', 'NodeA1', '2023-10-26 17:10:00');\nINSERT INTO network_elements (\"LOCATION\", \"NODE_NAME\", \"NETWORK_ELEMENT_ID\") VALUES ('SiteA', 'NodeA1', 2001);\nINSERT INTO network_elements (\"LOCATION\", \"NODE_NAME\", \"NETWORK_ELEMENT_ID\") VALUES ('SiteB', 'NodeB2', 2002);"}
{"sql_prompt": "How many alarms were raised each day during the last 7 days?", "sql": "SELECT date_trunc('day', time_raised)::date AS raise_date, COUNT(*) AS daily_alarm_count FROM alarm WHERE time_raised >= current_date - interval '7 days' GROUP BY raise_date ORDER BY raise_date;", "sql_context": "CREATE TABLE alarm ( id bigint, time_raised timestamp without time zone );\nINSERT INTO alarm (id, time_raised) VALUES (1901, current_timestamp - interval '1 day');\nINSERT INTO alarm (id, time_raised) VALUES (1902, current_timestamp - interval '1 day');\nINSERT INTO alarm (id, time_raised) VALUES (1903, current_timestamp - interval '2 days');\nINSERT INTO alarm (id, time_raised) VALUES (1904, current_timestamp - interval '8 days');"}
{"sql_prompt": "List all unique device types recorded in the alarm table.", "sql": "SELECT DISTINCT device_type FROM alarm;", "sql_context": "CREATE TABLE alarm ( id bigint, device_type character varying(250) );\nINSERT INTO alarm (id, device_type) VALUES (2001, 'Router');\nINSERT INTO alarm (id, device_type) VALUES (2002, 'Switch');\nINSERT INTO alarm (id, device_type) VALUES (2003, 'Router');\nINSERT INTO alarm (id, device_type) VALUES (2004, 'Firewall');"}
{"sql_prompt": "What are the names and addresses of the sites connected by cable system 'CS-WEST-01'?", "sql": "SELECT T2.\"SITE_NAME\", T2.\"ADDRESS\", T2.\"CITY_NAME\" FROM cable_system AS T1 INNER JOIN sites AS T2 ON T1.\"SITE_A_ID\" = T2.\"SITE_ID\" OR T1.\"SITE_B_ID\" = T2.\"SITE_ID\" WHERE T1.\"CABLE_SYSTEM_ID\" = 'CS-WEST-01';", "sql_context": "CREATE TABLE cable_system ( index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SYSTEM_NAME\" text, \"CABLE_TYPE\" text, \"SITE_A_ID\" text, \"SITE_B_ID\" text );\nCREATE TABLE sites ( \"SITE_ID\" text, \"SITE_NAME\" text, \"LONGITUDE\" text, \"LATITUDE\" text, \"DISTRICT\" text, \"ADDRESS\" text, \"CIVICO\" text, \"CITY_NAME\" text, \"SITE_TYPE\" text, \"CUSTOMER\" text, \"SHORT_NAME\" text, \"ALTERNATIVE_NAME\" text, \"PROVINCE\" text, \"BUILDING_UNIQUE_ID\" text, \"CODICE_ISTAT\" double precision, \"REGIONE\" text, \"PROVINCIA\" text );\nINSERT INTO cable_system (\"CABLE_SYSTEM_ID\", \"SITE_A_ID\", \"SITE_B_ID\") VALUES ('CS-WEST-01', 'SiteAlpha', 'SiteBeta');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"ADDRESS\", \"CITY_NAME\") VALUES ('SiteAlpha', 'Alpha Point', '123 Main St', 'Metroville');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"ADDRESS\", \"CITY_NAME\") VALUES ('SiteBeta', 'Beta Hub', '456 Oak Ave', 'Centropolis');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"ADDRESS\", \"CITY_NAME\") VALUES ('SiteGamma', 'Gamma Station', '789 Pine Rd', 'Villagetown');"}
{"sql_prompt": "Show the description for critical alarms belonging to the 'Core Network' domain, using the alarm view.", "sql": "SELECT alarm_id, eqp_name, description FROM v_alarms WHERE severity = 'Critical' AND domain = 'Core Network';", "sql_context": "CREATE TABLE alarm ( id bigint, severity character varying(250), eqp_name character varying(250), from_site character varying(250), remote_eqp_name character varying(250), time_up timestamp without time zone, time_down timestamp without time zone, additional_text character varying(250), vendor character varying(250), raw_alarm_type character varying(250), device_name character varying(250), device_type character varying(250), tt_id character varying(250), ems_name character varying(250), time_cleared timestamp without time zone );\nCREATE TABLE alarm_label ( id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250) );\nCREATE VIEW v_alarms AS SELECT a.id AS alarm_id, a.severity, a.eqp_name, a.from_site, a.remote_eqp_name, a.time_up, a.time_down, l.slogan AS description, a.additional_text, a.vendor, a.raw_alarm_type AS alarm_type, a.device_name, a.device_type, l.domain_id AS domain, a.tt_id, a.ems_name, a.time_cleared AS ts_cleared FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO alarm (id, severity, eqp_name) VALUES (2201, 'Critical', 'CoreRtr1');\nINSERT INTO alarm_label (id, domain_id, slogan) VALUES (2201, 'Core Network', 'OSPF Neighbor Down');\nINSERT INTO alarm (id, severity, eqp_name) VALUES (2202, 'Critical', 'AccessSw1');\nINSERT INTO alarm_label (id, domain_id, slogan) VALUES (2202, 'Access Network', 'Port Flapping');\nINSERT INTO alarm (id, severity, eqp_name) VALUES (2203, 'Major', 'CoreRtr2');\nINSERT INTO alarm_label (id, domain_id, slogan) VALUES (2203, 'Core Network', 'High CPU Utilization');"}
{"sql_prompt": "What equipment was affected by the outage at site 'SiteX'?", "sql": "SELECT equipment_list FROM outage WHERE site_id = 'SiteX';", "sql_context": "CREATE TABLE outage ( outage_id integer, site_id character varying(50), ts_start_disruption timestamp without time zone, equipment_list character varying(100), status character varying(50), username character varying(100), latitude numeric(9,6), longitude numeric(9,6) );\nINSERT INTO outage (outage_id, site_id, equipment_list, status) VALUES (1, 'SiteX', 'RouterA, SwitchB', 'Ongoing');\nINSERT INTO outage (outage_id, site_id, equipment_list, status) VALUES (2, 'SiteY', 'ServerC', 'Resolved');"}
{"sql_prompt": "List the names of all services that are currently 'Active'.", "sql": "SELECT \"SERVICE_NAME\" FROM service WHERE \"STATUS\" = 'Active';", "sql_context": "CREATE TABLE service ( \"SERVICE_ID\" text, \"HIERARCHY_ID\" double precision, \"SERVICE_NAME\" text, \"STATUS\" text );\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"STATUS\") VALUES ('S100', 'Premium Internet', 'Active');\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"STATUS\") VALUES ('S101', 'Basic VPN', 'Inactive');\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"STATUS\") VALUES ('S102', 'VoIP Basic', 'Active');"}
{"sql_prompt": "Find all network elements supplied by 'VendorX'.", "sql": "SELECT \"NODE_NAME\", \"MODEL_CODE\" FROM network_elements WHERE \"VENDOR_NAME\" = 'VendorX';", "sql_context": "CREATE TABLE network_elements ( index bigint, \"NODE_NAME\" text, \"NETWORK_ELEMENT_ID\" bigint, \"MODEL_CODE\" text, \"VENDOR_NAME\" text );\nINSERT INTO network_elements (\"NODE_NAME\", \"NETWORK_ELEMENT_ID\", \"MODEL_CODE\", \"VENDOR_NAME\") VALUES ('Router1', 3001, 'ModelA', 'VendorX');\nINSERT INTO network_elements (\"NODE_NAME\", \"NETWORK_ELEMENT_ID\", \"MODEL_CODE\", \"VENDOR_NAME\") VALUES ('Switch1', 3002, 'ModelB', 'VendorY');\nINSERT INTO network_elements (\"NODE_NAME\", \"NETWORK_ELEMENT_ID\", \"MODEL_CODE\", \"VENDOR_NAME\") VALUES ('Router2', 3003, 'ModelC', 'VendorX');"}
{"sql_prompt": "Show the names and status of all cable segments that are of type 'Fiber'.", "sql": "SELECT \"CABLE_SEGMENT_NAME\", \"STATUS\" FROM cablesegment WHERE \"CABLE_TYPE\" = 'Fiber';", "sql_context": "CREATE TABLE cablesegment ( index bigint, \"CABLE_SEGMENT_ID\" text, \"CABLE_SEGMENT_NAME\" text, \"CABLE_TYPE\" text, \"STATUS\" double precision );\nINSERT INTO cablesegment (\"CABLE_SEGMENT_NAME\", \"CABLE_TYPE\", \"STATUS\") VALUES ('Segment A-B', 'Fiber', 1.0);\nINSERT INTO cablesegment (\"CABLE_SEGMENT_NAME\", \"CABLE_TYPE\", \"STATUS\") VALUES ('Segment C-D', 'Copper', 1.0);\nINSERT INTO cablesegment (\"CABLE_SEGMENT_NAME\", \"CABLE_TYPE\", \"STATUS\") VALUES ('Segment E-F', 'Fiber', 0.0);"}
{"sql_prompt": "Find the incident number associated with alarm TT_ID 'TT5566'.", "sql": "SELECT T2.incident_number FROM alarm AS T1 INNER JOIN incident AS T2 ON T1.tt_id = T2.correlation_id WHERE T1.tt_id = 'TT5566';", "sql_context": "CREATE TABLE alarm ( id bigint, tt_id character varying(250) );\nCREATE TABLE incident ( incident_number character varying(50), correlation_id character varying(100) );\nINSERT INTO alarm (id, tt_id) VALUES (2701, 'TT5566');\nINSERT INTO alarm (id, tt_id) VALUES (2702, 'TT7788');\nINSERT INTO incident (incident_number, correlation_id) VALUES ('INC901', 'TT5566');\nINSERT INTO incident (incident_number, correlation_id) VALUES ('INC902', 'TT7788');"}
{"sql_prompt": "Calculate the duration for alarm with ID 2801 (time cleared minus time raised).", "sql": "SELECT time_cleared - time_raised AS duration FROM alarm WHERE id = 2801 AND time_cleared IS NOT NULL AND time_raised IS NOT NULL;", "sql_context": "CREATE TABLE alarm ( id bigint, time_raised timestamp without time zone, time_cleared timestamp without time zone );\nINSERT INTO alarm (id, time_raised, time_cleared) VALUES (2801, '2023-10-26 10:00:00', '2023-10-26 12:30:00');\nINSERT INTO alarm (id, time_raised, time_cleared) VALUES (2802, '2023-10-26 11:00:00', NULL);"}
{"sql_prompt": "What is the location of the equipment with the short name 'EQ-SN-001'?", "sql": "SELECT \"LOCATION\" FROM equipment_details WHERE \"SHORT_NAME\" = 'EQ-SN-001';", "sql_context": "CREATE TABLE equipment_details ( index bigint, \"SHORT_NAME\" text, \"LOCATION\" text, \"TRAIL_NAME\" text, \"NUMERO_TD\" text, \"CODE\" text, \"DESCRIPTION\" text );\nINSERT INTO equipment_details (\"SHORT_NAME\", \"LOCATION\", \"DESCRIPTION\") VALUES ('EQ-SN-001', 'Central Office A', 'Core Router Card');\nINSERT INTO equipment_details (\"SHORT_NAME\", \"LOCATION\", \"DESCRIPTION\") VALUES ('EQ-SN-002', 'POP Site B', 'Access Switch');"}
{"sql_prompt": "List all 'Major' severity alarms from either 'District A' or 'District B', ordered by the time they were raised, most recent first.", "sql": "SELECT id, district, time_raised FROM alarm WHERE severity = 'Major' AND district IN ('District A', 'District B') ORDER BY time_raised DESC;", "sql_context": "CREATE TABLE alarm ( id bigint, severity character varying(250), district character varying(250), time_raised timestamp without time zone );\nINSERT INTO alarm (id, severity, district, time_raised) VALUES (3001, 'Major', 'District A', '2023-10-26 18:00:00');\nINSERT INTO alarm (id, severity, district, time_raised) VALUES (3002, 'Critical', 'District A', '2023-10-26 18:05:00');\nINSERT INTO alarm (id, severity, district, time_raised) VALUES (3003, 'Major', 'District C', '2023-10-26 18:10:00');\nINSERT INTO alarm (id, severity, district, time_raised) VALUES (3004, 'Major', 'District B', '2023-10-26 17:55:00');"}
{"sql_prompt": "Show the severity and additional text for alarms with the keyword 'FAILURE'.", "sql": "SELECT severity, additional_text FROM alarm WHERE keyword = 'FAILURE';", "sql_context": "CREATE TABLE alarm (severity character varying(250), additional_text character varying(250), keyword character varying(250));\nINSERT INTO alarm (severity, additional_text, keyword) VALUES ('Critical', 'Router link down', 'FAILURE');\nINSERT INTO alarm (severity, additional_text, keyword) VALUES ('Major', 'Power supply issue', 'POWER');"}
{"sql_prompt": "Count the number of alarms for each severity level.", "sql": "SELECT severity, COUNT(*) AS alarm_count FROM alarm GROUP BY severity;", "sql_context": "CREATE TABLE alarm (severity character varying(250));\nINSERT INTO alarm (severity) VALUES ('Critical');\nINSERT INTO alarm (severity) VALUES ('Major');\nINSERT INTO alarm (severity) VALUES ('Critical');"}
{"sql_prompt": "List the equipment names (eqp_name) for alarms raised after '2023-10-26 10:00:00'.", "sql": "SELECT eqp_name FROM alarm WHERE time_raised > '2023-10-26 10:00:00';", "sql_context": "CREATE TABLE alarm (eqp_name character varying(250), time_raised timestamp without time zone);\nINSERT INTO alarm (eqp_name, time_raised) VALUES ('EQP-A-101', '2023-10-26 11:05:00');\nINSERT INTO alarm (eqp_name, time_raised) VALUES ('EQP-B-202', '2023-10-26 09:30:00');"}
{"sql_prompt": "Find the alarm primary keys for alarms acknowledged by user 'john.doe'.", "sql": "SELECT alarm_primary_key FROM alarm WHERE ack_user_id = 'john.doe';", "sql_context": "CREATE TABLE alarm (alarm_primary_key character varying(250), ack_user_id character varying(250));\nINSERT INTO alarm (alarm_primary_key, ack_user_id) VALUES ('ALM-12345', 'john.doe');\nINSERT INTO alarm (alarm_primary_key, ack_user_id) VALUES ('ALM-67890', 'jane.smith');"}
{"sql_prompt": "Using the alarms view, show the alarm ID, severity, equipment name, and description (slogan) for alarms with severity 'Major'.", "sql": "SELECT alarm_id, severity, eqp_name, description FROM v_alarms WHERE severity = 'Major';", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), eqp_name character varying(250));\nCREATE TABLE alarm_label (id bigint, slogan character varying(250), domain_id character varying(250));\nCREATE VIEW v_alarms AS SELECT a.id AS alarm_id, a.severity, a.eqp_name, l.slogan AS description FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO alarm (id, severity, eqp_name) VALUES (1, 'Major', 'Router-X1');\nINSERT INTO alarm_label (id, slogan, domain_id) VALUES (1, 'Link Connectivity Issue', 'Network');"}
{"sql_prompt": "Show the alarm ID, additional text, and corresponding slogan from alarm_label for alarm ID 500.", "sql": "SELECT a.id, a.additional_text, l.slogan FROM alarm a JOIN alarm_label l ON a.id = l.id WHERE a.id = 500;", "sql_context": "CREATE TABLE alarm (id bigint, additional_text character varying(250));\nCREATE TABLE alarm_label (id bigint, slogan character varying(250));\nINSERT INTO alarm (id, additional_text) VALUES (500, 'High temperature detected');\nINSERT INTO alarm_label (id, slogan) VALUES (500, 'Environmental Alert');"}
{"sql_prompt": "How many incidents are there in each category?", "sql": "SELECT category, COUNT(*) AS incident_count FROM incident GROUP BY category;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), category character varying(100));\nINSERT INTO incident (incident_number, category) VALUES ('INC001', 'Network');\nINSERT INTO incident (incident_number, category) VALUES ('INC002', 'Software');\nINSERT INTO incident (incident_number, category) VALUES ('INC003', 'Network');"}
{"sql_prompt": "List the incident numbers and short descriptions for incidents that are not yet closed.", "sql": "SELECT incident_number, short_description FROM incident WHERE closed IS NULL;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), short_description text, closed timestamp without time zone);\nINSERT INTO incident (incident_number, short_description, closed) VALUES ('INC100', 'Server unresponsive', NULL);\nINSERT INTO incident (incident_number, short_description, closed) VALUES ('INC101', 'Login failure resolved', '2023-10-26 14:00:00');"}
{"sql_prompt": "Show the incident number, assigned user, and description for incidents with an impact level greater than 3.", "sql": "SELECT incident_number, assigned_to, description FROM incident WHERE impact > 3;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), assigned_to character varying(100), description text, impact integer);\nINSERT INTO incident (incident_number, assigned_to, description, impact) VALUES ('INC201', 'tech_lead', 'Core switch failure', 4);\nINSERT INTO incident (incident_number, assigned_to, description, impact) VALUES ('INC202', 'support_agent', 'User password reset', 2);"}
{"sql_prompt": "What are the node names and model codes for network elements provided by 'Cisco Systems'?", "sql": "SELECT \"NODE_NAME\", \"MODEL_CODE\" FROM network_elements WHERE \"VENDOR_NAME\" = 'Cisco Systems';", "sql_context": "CREATE TABLE network_elements (index bigint, \"NODE_NAME\" text, \"MODEL_CODE\" text, \"VENDOR_NAME\" text);\nINSERT INTO network_elements (index, \"NODE_NAME\", \"MODEL_CODE\", \"VENDOR_NAME\") VALUES (1, 'Router-A', 'ASR9K', 'Cisco Systems');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"MODEL_CODE\", \"VENDOR_NAME\") VALUES (2, 'Switch-B', 'NCS5K', 'Cisco Systems');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"MODEL_CODE\", \"VENDOR_NAME\") VALUES (3, 'Firewall-C', 'SRX', 'Juniper');"}
{"sql_prompt": "Count the number of network elements for each network element type code.", "sql": "SELECT \"NETWORK_ELEMENT_TYPE_CODE\", COUNT(*) AS element_count FROM network_elements GROUP BY \"NETWORK_ELEMENT_TYPE_CODE\";", "sql_context": "CREATE TABLE network_elements (index bigint, \"NODE_NAME\" text, \"NETWORK_ELEMENT_TYPE_CODE\" text);\nINSERT INTO network_elements (index, \"NODE_NAME\", \"NETWORK_ELEMENT_TYPE_CODE\") VALUES (1, 'Router-A', 'ROUTER');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"NETWORK_ELEMENT_TYPE_CODE\") VALUES (2, 'Switch-B', 'SWITCH');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"NETWORK_ELEMENT_TYPE_CODE\") VALUES (3, 'Router-C', 'ROUTER');"}
{"sql_prompt": "Find the IP address associated with the node named 'CoreRouter-1'.", "sql": "SELECT \"IP_ADDRESS\" FROM equipment_ip_address WHERE \"NODE_NAME\" = 'CoreRouter-1';", "sql_context": "CREATE TABLE equipment_ip_address (index bigint, \"NODE_NAME\" text, \"IP_ADDRESS\" text);\nINSERT INTO equipment_ip_address (index, \"NODE_NAME\", \"IP_ADDRESS\") VALUES (10, 'CoreRouter-1', '192.168.1.1');\nINSERT INTO equipment_ip_address (index, \"NODE_NAME\", \"IP_ADDRESS\") VALUES (11, 'EdgeSwitch-5', '10.0.5.2');"}
{"sql_prompt": "List the names of all cable systems.", "sql": "SELECT \"CABLE_SYSTEM_NAME\" FROM cable_system;", "sql_context": "CREATE TABLE cable_system (index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SYSTEM_NAME\" text);\nINSERT INTO cable_system (index, \"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\") VALUES (1, 'CS-001', 'Atlantic Link');\nINSERT INTO cable_system (index, \"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\") VALUES (2, 'CS-002', 'Pacific Connect');"}
{"sql_prompt": "Show the names and types of cable segments associated with the cable system 'CS-ATL'.", "sql": "SELECT cs.\"CABLE_SEGMENT_NAME\", cs.\"CABLE_TYPE\" FROM cablesegment cs JOIN cl_clsegm_rel rel ON cs.\"CABLE_SEGMENT_ID\" = rel.\"CABLE_SEGMENT_ID\" WHERE rel.\"CABLE_SYSTEM_ID\" = 'CS-ATL';", "sql_context": "CREATE TABLE cablesegment (index bigint, \"CABLE_SEGMENT_ID\" text, \"CABLE_SEGMENT_NAME\" text, \"CABLE_TYPE\" text);\nCREATE TABLE cl_clsegm_rel (index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SEGMENT_ID\" text);\nINSERT INTO cablesegment (index, \"CABLE_SEGMENT_ID\", \"CABLE_SEGMENT_NAME\", \"CABLE_TYPE\") VALUES (101, 'SEG-A1', 'Segment A1 - NY/London', 'Submarine');\nINSERT INTO cablesegment (index, \"CABLE_SEGMENT_ID\", \"CABLE_SEGMENT_NAME\", \"CABLE_TYPE\") VALUES (102, 'SEG-A2', 'Segment A2 - London/Paris', 'Terrestrial');\nINSERT INTO cl_clsegm_rel (index, \"CABLE_SYSTEM_ID\", \"CABLE_SEGMENT_ID\") VALUES (501, 'CS-ATL', 'SEG-A1');\nINSERT INTO cl_clsegm_rel (index, \"CABLE_SYSTEM_ID\", \"CABLE_SEGMENT_ID\") VALUES (502, 'CS-PAC', 'SEG-P1');"}
{"sql_prompt": "Get the site name, address, and city for site ID 'SITE-LON-01'.", "sql": "SELECT \"SITE_NAME\", \"ADDRESS\", \"CITY_NAME\" FROM sites WHERE \"SITE_ID\" = 'SITE-LON-01';", "sql_context": "CREATE TABLE sites (\"SITE_ID\" text, \"SITE_NAME\" text, \"ADDRESS\" text, \"CITY_NAME\" text);\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"ADDRESS\", \"CITY_NAME\") VALUES ('SITE-LON-01', 'London Central Office', '123 Data Street', 'London');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"ADDRESS\", \"CITY_NAME\") VALUES ('SITE-NYC-02', 'New York Hub', '456 Network Ave', 'New York');"}
{"sql_prompt": "List all outages recorded for site 'SITE-PAR-03', showing the start time and equipment list.", "sql": "SELECT ts_start_disruption, equipment_list FROM outage WHERE site_id = 'SITE-PAR-03';", "sql_context": "CREATE TABLE outage (outage_id integer, site_id character varying(50), ts_start_disruption timestamp without time zone, equipment_list character varying(100));\nINSERT INTO outage (outage_id, site_id, ts_start_disruption, equipment_list) VALUES (1, 'SITE-PAR-03', '2023-10-25 08:00:00', 'Router-P3, Switch-P3');\nINSERT INTO outage (outage_id, site_id, ts_start_disruption, equipment_list) VALUES (2, 'SITE-TOK-01', '2023-10-26 01:30:00', 'Server-T1');"}
{"sql_prompt": "Count the total number of outages grouped by their current status.", "sql": "SELECT status, COUNT(*) AS outage_count FROM outage GROUP BY status;", "sql_context": "CREATE TABLE outage (outage_id integer, status character varying(50));\nINSERT INTO outage (outage_id, status) VALUES (1, 'Resolved');\nINSERT INTO outage (outage_id, status) VALUES (2, 'Active');\nINSERT INTO outage (outage_id, status) VALUES (3, 'Active');"}
{"sql_prompt": "What is the current status and provisioning status for the service with ID 'SVC-98765'?", "sql": "SELECT \"STATUS\", \"PROVISIONING_STATUS\" FROM service WHERE \"SERVICE_ID\" = 'SVC-98765';", "sql_context": "CREATE TABLE service (\"SERVICE_ID\" text, \"STATUS\" text, \"PROVISIONING_STATUS\" text);\nINSERT INTO service (\"SERVICE_ID\", \"STATUS\", \"PROVISIONING_STATUS\") VALUES ('SVC-98765', 'Active', 'Completed');\nINSERT INTO service (\"SERVICE_ID\", \"STATUS\", \"PROVISIONING_STATUS\") VALUES ('SVC-12345', 'Inactive', 'Pending');"}
{"sql_prompt": "Find the location and description for the equipment with short name 'MUX-LND-01'.", "sql": "SELECT \"LOCATION\", \"DESCRIPTION\" FROM equipment_details WHERE \"SHORT_NAME\" = 'MUX-LND-01';", "sql_context": "CREATE TABLE equipment_details (index bigint, \"SHORT_NAME\" text, \"LOCATION\" text, \"DESCRIPTION\" text);\nINSERT INTO equipment_details (index, \"SHORT_NAME\", \"LOCATION\", \"DESCRIPTION\") VALUES (1, 'MUX-LND-01', 'London DC Rack 5', 'Primary Multiplexer London');\nINSERT INTO equipment_details (index, \"SHORT_NAME\", \"LOCATION\", \"DESCRIPTION\") VALUES (2, 'RT-NYC-02', 'New York POP Floor 2', 'Edge Router NYC');"}
{"sql_prompt": "Show the alarm primary key and time raised for alarms that have an associated trouble ticket ID (tt_id).", "sql": "SELECT alarm_primary_key, time_raised FROM alarm WHERE tt_id IS NOT NULL;", "sql_context": "CREATE TABLE alarm (alarm_primary_key character varying(250), time_raised timestamp without time zone, tt_id character varying(250));\nINSERT INTO alarm (alarm_primary_key, time_raised, tt_id) VALUES ('ALM-CRIT-001', '2023-10-26 12:00:00', 'TT-10234');\nINSERT INTO alarm (alarm_primary_key, time_raised, tt_id) VALUES ('ALM-MAJ-002', '2023-10-26 13:00:00', NULL);"}
{"sql_prompt": "List the incident numbers and categories for incidents assigned to 'david.lee'.", "sql": "SELECT incident_number, category FROM incident WHERE assigned_to = 'david.lee';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), category character varying(100), assigned_to character varying(100));\nINSERT INTO incident (incident_number, category, assigned_to) VALUES ('INC501', 'Hardware', 'david.lee');\nINSERT INTO incident (incident_number, category, assigned_to) VALUES ('INC502', 'Network', 'sara.jones');"}
{"sql_prompt": "Find the alarm ID and device name for alarms that are not inhibited.", "sql": "SELECT id, device_name FROM alarm WHERE inhibit = false;", "sql_context": "CREATE TABLE alarm (id bigint, device_name character varying(250), inhibit boolean);\nINSERT INTO alarm (id, device_name, inhibit) VALUES (1001, 'DeviceA', false);\nINSERT INTO alarm (id, device_name, inhibit) VALUES (1002, 'DeviceB', true);"}
{"sql_prompt": "Show the 5 oldest incidents (incident number and created date) that are still open (not closed).", "sql": "SELECT incident_number, created_date FROM incident WHERE closed IS NULL ORDER BY created_date ASC LIMIT 5;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), created_date timestamp without time zone, closed timestamp without time zone);\nINSERT INTO incident (incident_number, created_date, closed) VALUES ('INC001', '2023-09-01 10:00:00', NULL);\nINSERT INTO incident (incident_number, created_date, closed) VALUES ('INC002', '2023-08-15 14:00:00', NULL);\nINSERT INTO incident (incident_number, created_date, closed) VALUES ('INC003', '2023-09-05 09:00:00', '2023-09-10 11:00:00');\nINSERT INTO incident (incident_number, created_date, closed) VALUES ('INC004', '2023-07-20 16:00:00', NULL);"}
{"sql_prompt": "List the distinct card types used in the network element model 'NCS5500'.", "sql": "SELECT DISTINCT \"CARD_TYPE\" FROM rmm_equipment_details WHERE \"NETWORK_ELEMENT_MODEL\" = 'NCS5500';", "sql_context": "CREATE TABLE rmm_equipment_details (\"NETWORK_ELEMENT_MODEL\" text, \"CARD_TYPE\" text);\nINSERT INTO rmm_equipment_details (\"NETWORK_ELEMENT_MODEL\", \"CARD_TYPE\") VALUES ('NCS5500', 'Line Card 100G');\nINSERT INTO rmm_equipment_details (\"NETWORK_ELEMENT_MODEL\", \"CARD_TYPE\") VALUES ('ASR9K', 'Interface Module');\nINSERT INTO rmm_equipment_details (\"NETWORK_ELEMENT_MODEL\", \"CARD_TYPE\") VALUES ('NCS5500', 'Routing Processor');\nINSERT INTO rmm_equipment_details (\"NETWORK_ELEMENT_MODEL\", \"CARD_TYPE\") VALUES ('NCS5500', 'Line Card 100G');"}
{"sql_prompt": "What is the status ('PE_STATUS') of the mobile PE named 'PE-MANCHESTER-1'?", "sql": "SELECT \"PE_STATUS\" FROM mobile_pe WHERE \"PE_NAME\" = 'PE-MANCHESTER-1';", "sql_context": "CREATE TABLE mobile_pe (index bigint, \"PE_NAME\" text, \"PE_STATUS\" text);\nINSERT INTO mobile_pe (index, \"PE_NAME\", \"PE_STATUS\") VALUES (1, 'PE-MANCHESTER-1', 'Active');\nINSERT INTO mobile_pe (index, \"PE_NAME\", \"PE_STATUS\") VALUES (2, 'PE-LONDON-2', 'Maintenance');"}
{"sql_prompt": "Show the severity and alarm type for alarms originating from device type 'ROUTER'.", "sql": "SELECT severity, type FROM alarm WHERE device_type = 'ROUTER';", "sql_context": "CREATE TABLE alarm (severity character varying(250), type character varying(250), device_type character varying(250));\nINSERT INTO alarm (severity, type, device_type) VALUES ('Critical', 'Link Down', 'ROUTER');\nINSERT INTO alarm (severity, type, device_type) VALUES ('Warning', 'High CPU', 'SWITCH');\nINSERT INTO alarm (severity, type, device_type) VALUES ('Major', 'BGP Session Down', 'ROUTER');"}
{"sql_prompt": "Display the incident number and resolution code for incidents resolved between '2023-10-01 00:00:00' and '2023-10-31 23:59:59'.", "sql": "SELECT incident_number, resolution_code FROM incident WHERE resolved BETWEEN '2023-10-01 00:00:00' AND '2023-10-31 23:59:59';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), resolved timestamp without time zone, resolution_code character varying(100));\nINSERT INTO incident (incident_number, resolved, resolution_code) VALUES ('INC801', '2023-10-15 10:30:00', 'Resolved by Change');\nINSERT INTO incident (incident_number, resolved, resolution_code) VALUES ('INC802', '2023-09-28 11:00:00', 'No Fault Found');\nINSERT INTO incident (incident_number, resolved, resolution_code) VALUES ('INC803', '2023-10-20 16:45:00', 'Software Fix');"}
{"sql_prompt": "Count the number of alarms per vendor using the v_alarms view.", "sql": "SELECT vendor, COUNT(*) AS alarm_count FROM v_alarms GROUP BY vendor;", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), eqp_name character varying(250), vendor character varying(250));\nCREATE TABLE alarm_label (id bigint, slogan character varying(250), domain_id character varying(250));\nCREATE VIEW v_alarms AS SELECT a.id AS alarm_id, a.severity, a.eqp_name, l.slogan AS description, a.vendor FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO alarm (id, severity, eqp_name, vendor) VALUES (1, 'Major', 'Router-X1', 'Cisco');\nINSERT INTO alarm (id, severity, eqp_name, vendor) VALUES (2, 'Critical', 'Switch-Y2', 'Juniper');\nINSERT INTO alarm (id, severity, eqp_name, vendor) VALUES (3, 'Warning', 'Firewall-Z3', 'Cisco');\nINSERT INTO alarm_label (id, slogan, domain_id) VALUES (1, 'Link Issue', 'Network');\nINSERT INTO alarm_label (id, slogan, domain_id) VALUES (2, 'Port Failure', 'Network');\nINSERT INTO alarm_label (id, slogan, domain_id) VALUES (3, 'Policy Block', 'Security');"}
{"sql_prompt": "List the port codes ('CODE') for the node named 'AGG-SW-01'.", "sql": "SELECT \"CODE\" FROM ports WHERE \"NODE_NAME\" = 'AGG-SW-01';", "sql_context": "CREATE TABLE ports (index bigint, \"NODE_NAME\" text, \"CODE\" text, \"IP_ADDRESS\" text);\nINSERT INTO ports (index, \"NODE_NAME\", \"CODE\", \"IP_ADDRESS\") VALUES (1, 'AGG-SW-01', 'GigabitEthernet0/1', '10.1.1.1');\nINSERT INTO ports (index, \"NODE_NAME\", \"CODE\", \"IP_ADDRESS\") VALUES (2, 'CORE-RTR-02', 'TenGigabitEthernet1/0/1', '192.168.0.1');\nINSERT INTO ports (index, \"NODE_NAME\", \"CODE\", \"IP_ADDRESS\") VALUES (3, 'AGG-SW-01', 'GigabitEthernet0/2', '10.1.1.2');"}
{"sql_prompt": "What is the name and status of the path ethernet service associated with VLAN ID 1234?", "sql": "SELECT \"NAME\", \"PATH_ETHERNET_STATUS\" FROM path_ethernet WHERE \"VLAN_ID\" = 1234;", "sql_context": "CREATE TABLE path_ethernet (index bigint, \"VLAN_ID\" bigint, \"NAME\" text, \"PATH_ETHERNET_STATUS\" text);\nINSERT INTO path_ethernet (index, \"VLAN_ID\", \"NAME\", \"PATH_ETHERNET_STATUS\") VALUES (10, 1234, 'Customer A Ethernet Link', 'UP');\nINSERT INTO path_ethernet (index, \"VLAN_ID\", \"NAME\", \"PATH_ETHERNET_STATUS\") VALUES (11, 5678, 'Backbone Interconnect', 'DOWN');"}
{"sql_prompt": "Show all alarms with 'Critical' severity.", "sql": "SELECT id, eqp_name, severity, time_raised FROM alarm WHERE severity = 'Critical';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_name, severity, time_raised) VALUES (101, 'RouterA', 'Critical', '2023-10-26 10:00:00');\nINSERT INTO alarm (id, eqp_name, severity, time_raised) VALUES (102, 'SwitchB', 'Major', '2023-10-26 10:05:00');"}
{"sql_prompt": "List the equipment names and types for alarms originating from 'EMS-West'.", "sql": "SELECT eqp_name, device_type FROM alarm WHERE ems_name = 'EMS-West';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_name, device_type, ems_name) VALUES (201, 'Card1', 'RouterCard', 'EMS-West');\nINSERT INTO alarm (id, eqp_name, device_type, ems_name) VALUES (202, 'PSU2', 'PowerSupply', 'EMS-East');"}
{"sql_prompt": "How many distinct probable alarm causes are there?", "sql": "SELECT COUNT(DISTINCT base_probable_alarm_cause) FROM alarm;", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, base_probable_alarm_cause) VALUES (301, 'Link Down');\nINSERT INTO alarm (id, base_probable_alarm_cause) VALUES (302, 'Power Failure');"}
{"sql_prompt": "Get the alarm ID, severity, equipment name, and slogan description for all alarms.", "sql": "SELECT alarm_id, severity, eqp_name, description FROM v_alarms;", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nCREATE TABLE alarm_label (id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250));\nCREATE VIEW v_alarms AS SELECT a.id AS alarm_id, a.severity, a.eqp_name, a.from_site, a.remote_eqp_name, a.time_up, a.time_down, l.slogan AS description, a.additional_text, a.vendor, a.raw_alarm_type AS alarm_type, a.device_name, a.device_type, l.domain_id AS domain, a.tt_id, a.ems_name, a.time_cleared AS ts_cleared FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO alarm (id, severity, eqp_name) VALUES (401, 'Critical', 'RouterX');\nINSERT INTO alarm_label (id, slogan) VALUES (401, 'Core Router Offline');"}
{"sql_prompt": "Count the number of alarms for each severity level.", "sql": "SELECT severity, COUNT(*) FROM alarm GROUP BY severity;", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, severity) VALUES (501, 'Critical');\nINSERT INTO alarm (id, severity) VALUES (502, 'Major');\nINSERT INTO alarm (id, severity) VALUES (503, 'Critical');"}
{"sql_prompt": "Find the incident number, affected service, and description for incidents assigned to 'Network Team Alpha'.", "sql": "SELECT incident_number, affected_service, description FROM incident WHERE assignment_group = 'Network Team Alpha';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), assigned_to character varying(100), assignment_count integer, business_service character varying(100), caller character varying(100), category character varying(100), closed timestamp without time zone, configuration_item character varying(100), contact_type character varying(100), correlation_id character varying(100), created_date timestamp without time zone, customer_type character varying(100), description text, domain character varying(100), end_fault timestamp without time zone, end_inefficiency timestamp without time zone, expected_resolution_date timestamp without time zone, first_configuration_item character varying(100), impact integer, in_validation boolean, incident_alert boolean, incident_parent character varying(100), inefficiency boolean, inefficiency_type character varying(100), level1 character varying(100), level2 character varying(100), level3 character varying(100), level4 character varying(100), msisdn character varying(100), network_element_type character varying(100), opened_by character varying(100), originating_system character varying(100), owner_group character varying(100), process_cause character varying(100), product_type character varying(100), reopen_count integer, resolution_code character varying(100), resolution_entity character varying(100), resolved timestamp without time zone, root_cause character varying(100), sequence_id integer, short_description text, source character varying(100), start_fault timestamp without time zone, start_inefficiency timestamp without time zone, status integer, updated timestamp without time zone, updated_by character varying(100), urgency integer, vendor character varying(100), wfm_id character varying(100));\nINSERT INTO incident (incident_number, affected_service, assignment_group, description) VALUES ('INC00123', 'VPN Service', 'Network Team Alpha', 'Customer reports slow VPN connection.');\nINSERT INTO incident (incident_number, affected_service, assignment_group, description) VALUES ('INC00124', 'Internet Access', 'Support Desk', 'User cannot access external websites.');"}
{"sql_prompt": "List all network elements located in 'Building 4' with their vendor name.", "sql": "SELECT \"NODE_NAME\", \"VENDOR_NAME\" FROM network_elements WHERE \"LOCATION\" = 'Building 4';", "sql_context": "CREATE TABLE network_elements ( index bigint, \"LOCATION\" text, \"NODE_NAME\" text, \"NETWORK_ELEMENT_ID\" bigint, \"NETWORK_ELEMENT_TYPE_CODE\" text, \"SERIAL_NUMBER\" bigint, \"ACTIVITY_STATUS_CODE\" text, \"MODEL_CODE\" text, \"VENDOR_NAME\" text, \"ELEMENT_CLASS_CODE\" text, \"ELEMENT_CLASS_DESC\" text, \"CARD_TYPE_ID\" double precision, \"SYSTEM_NAME\" text, \"LOCATION_SHORT_NAME\" text );\nINSERT INTO network_elements (\"LOCATION\", \"NODE_NAME\", \"VENDOR_NAME\") VALUES ('Building 4', 'CoreSwitch-B4-1', 'Cisco');\nINSERT INTO network_elements (\"LOCATION\", \"NODE_NAME\", \"VENDOR_NAME\") VALUES ('Building 3', 'EdgeRouter-B3-1', 'Juniper');"}
{"sql_prompt": "Show the site name and address for sites located in the 'Northern' district.", "sql": "SELECT \"SITE_NAME\", \"ADDRESS\" FROM sites WHERE \"DISTRICT\" = 'Northern';", "sql_context": "CREATE TABLE sites ( \"SITE_ID\" text, \"SITE_NAME\" text, \"LONGITUDE\" text, \"LATITUDE\" text, \"DISTRICT\" text, \"ADDRESS\" text, \"CIVICO\" text, \"CITY_NAME\" text, \"SITE_TYPE\" text, \"CUSTOMER\" text, \"SHORT_NAME\" text, \"ALTERNATIVE_NAME\" text, \"PROVINCE\" text, \"BUILDING_UNIQUE_ID\" text, \"CODICE_ISTAT\" double precision, \"REGIONE\" text, \"PROVINCIA\" text );\nINSERT INTO sites (\"SITE_NAME\", \"ADDRESS\", \"DISTRICT\") VALUES ('North Telecom Hub', '123 Network Way', 'Northern');\nINSERT INTO sites (\"SITE_NAME\", \"ADDRESS\", \"DISTRICT\") VALUES ('South Data Center', '456 Server St', 'Southern');"}
{"sql_prompt": "Find alarms that were raised between '2023-10-26 08:00:00' and '2023-10-26 12:00:00'.", "sql": "SELECT id, eqp_name, severity, time_raised FROM alarm WHERE time_raised BETWEEN '2023-10-26 08:00:00' AND '2023-10-26 12:00:00';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_name, severity, time_raised) VALUES (901, 'RouterA', 'Critical', '2023-10-26 10:00:00');\nINSERT INTO alarm (id, eqp_name, severity, time_raised) VALUES (902, 'SwitchB', 'Major', '2023-10-26 13:05:00');"}
{"sql_prompt": "Get the equipment name, severity, and time raised for alarms acknowledged by user 'j.doe'.", "sql": "SELECT eqp_name, severity, time_raised FROM alarm WHERE ack_user_id = 'j.doe';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_name, severity, time_raised, ack_user_id) VALUES (1001, 'FirewallX', 'Warning', '2023-10-25 11:00:00', 'j.doe');\nINSERT INTO alarm (id, eqp_name, severity, time_raised, ack_user_id) VALUES (1002, 'ServerY', 'Critical', '2023-10-25 12:00:00', 'a.smith');"}
{"sql_prompt": "List the top 5 equipment names (`eqp_name`) with the most alarms, showing the count.", "sql": "SELECT eqp_name, COUNT(*) as alarm_count FROM alarm GROUP BY eqp_name ORDER BY alarm_count DESC LIMIT 5;", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_name) VALUES (1101, 'RouterA');\nINSERT INTO alarm (id, eqp_name) VALUES (1102, 'RouterA');\nINSERT INTO alarm (id, eqp_name) VALUES (1103, 'SwitchB');"}
{"sql_prompt": "Show the incident number and description for incidents created by 'system_monitor'.", "sql": "SELECT incident_number, description FROM incident WHERE opened_by = 'system_monitor';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), assigned_to character varying(100), assignment_count integer, business_service character varying(100), caller character varying(100), category character varying(100), closed timestamp without time zone, configuration_item character varying(100), contact_type character varying(100), correlation_id character varying(100), created_date timestamp without time zone, customer_type character varying(100), description text, domain character varying(100), end_fault timestamp without time zone, end_inefficiency timestamp without time zone, expected_resolution_date timestamp without time zone, first_configuration_item character varying(100), impact integer, in_validation boolean, incident_alert boolean, incident_parent character varying(100), inefficiency boolean, inefficiency_type character varying(100), level1 character varying(100), level2 character varying(100), level3 character varying(100), level4 character varying(100), msisdn character varying(100), network_element_type character varying(100), opened_by character varying(100), originating_system character varying(100), owner_group character varying(100), process_cause character varying(100), product_type character varying(100), reopen_count integer, resolution_code character varying(100), resolution_entity character varying(100), resolved timestamp without time zone, root_cause character varying(100), sequence_id integer, short_description text, source character varying(100), start_fault timestamp without time zone, start_inefficiency timestamp without time zone, status integer, updated timestamp without time zone, updated_by character varying(100), urgency integer, vendor character varying(100), wfm_id character varying(100));\nINSERT INTO incident (incident_number, description, opened_by) VALUES ('INC00125', 'CPU usage high on Server Z', 'system_monitor');\nINSERT INTO incident (incident_number, description, opened_by) VALUES ('INC00126', 'Login failure reported', 'user_support');"}
{"sql_prompt": "What is the total count of outages recorded?", "sql": "SELECT COUNT(*) FROM outage;", "sql_context": "CREATE TABLE outage ( outage_id integer, site_id character varying(50), ts_start_disruption timestamp without time zone, equipment_list character varying(100), status character varying(50), username character varying(100), latitude numeric(9,6), longitude numeric(9,6) );\nINSERT INTO outage (outage_id, site_id, status) VALUES (1, 'SiteA', 'Ongoing');\nINSERT INTO outage (outage_id, site_id, status) VALUES (2, 'SiteB', 'Resolved');"}
{"sql_prompt": "List the alarm ID and TT ID for alarms associated with 'Planned Work'.", "sql": "SELECT id, tt_id FROM alarm WHERE planned_work IS NOT NULL AND planned_work <> '';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, tt_id, planned_work) VALUES (1401, 'TT12345', 'Router Upgrade');\nINSERT INTO alarm (id, tt_id, planned_work) VALUES (1402, 'TT67890', NULL);"}
{"sql_prompt": "Find the average assignment count for incidents in the 'Software' category.", "sql": "SELECT AVG(assignment_count) FROM incident WHERE category = 'Software';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), assigned_to character varying(100), assignment_count integer, business_service character varying(100), caller character varying(100), category character varying(100), closed timestamp without time zone, configuration_item character varying(100), contact_type character varying(100), correlation_id character varying(100), created_date timestamp without time zone, customer_type character varying(100), description text, domain character varying(100), end_fault timestamp without time zone, end_inefficiency timestamp without time zone, expected_resolution_date timestamp without time zone, first_configuration_item character varying(100), impact integer, in_validation boolean, incident_alert boolean, incident_parent character varying(100), inefficiency boolean, inefficiency_type character varying(100), level1 character varying(100), level2 character varying(100), level3 character varying(100), level4 character varying(100), msisdn character varying(100), network_element_type character varying(100), opened_by character varying(100), originating_system character varying(100), owner_group character varying(100), process_cause character varying(100), product_type character varying(100), reopen_count integer, resolution_code character varying(100), resolution_entity character varying(100), resolved timestamp without time zone, root_cause character varying(100), sequence_id integer, short_description text, source character varying(100), start_fault timestamp without time zone, start_inefficiency timestamp without time zone, status integer, updated timestamp without time zone, updated_by character varying(100), urgency integer, vendor character varying(100), wfm_id character varying(100));\nINSERT INTO incident (incident_number, category, assignment_count) VALUES ('INC00127', 'Software', 3);\nINSERT INTO incident (incident_number, category, assignment_count) VALUES ('INC00128', 'Hardware', 2);\nINSERT INTO incident (incident_number, category, assignment_count) VALUES ('INC00129', 'Software', 5);"}
{"sql_prompt": "Show the IP address associated with the network element named 'CoreSwitch-B4-1'.", "sql": "SELECT T2.\"IP_ADDRESS\" FROM network_elements AS T1 INNER JOIN equipment_ip_address AS T2 ON T1.\"NETWORK_ELEMENT_ID\" = T2.\"NETWORK_ELEMENT_ID\" WHERE T1.\"NODE_NAME\" = 'CoreSwitch-B4-1';", "sql_context": "CREATE TABLE network_elements ( index bigint, \"LOCATION\" text, \"NODE_NAME\" text, \"NETWORK_ELEMENT_ID\" bigint, \"NETWORK_ELEMENT_TYPE_CODE\" text, \"SERIAL_NUMBER\" bigint, \"ACTIVITY_STATUS_CODE\" text, \"MODEL_CODE\" text, \"VENDOR_NAME\" text, \"ELEMENT_CLASS_CODE\" text, \"ELEMENT_CLASS_DESC\" text, \"CARD_TYPE_ID\" double precision, \"SYSTEM_NAME\" text, \"LOCATION_SHORT_NAME\" text );\nCREATE TABLE equipment_ip_address ( index bigint, \"NODE_NAME\" text, \"MODEL_CODE\" text, \"NETWORK_ELEMENT_ID\" bigint, \"CODE\" text, \"IP_ADDRESS\" text );\nINSERT INTO network_elements (\"NODE_NAME\", \"NETWORK_ELEMENT_ID\") VALUES ('CoreSwitch-B4-1', 1001);\nINSERT INTO equipment_ip_address (\"NETWORK_ELEMENT_ID\", \"IP_ADDRESS\") VALUES (1001, '192.168.1.1');\nINSERT INTO equipment_ip_address (\"NETWORK_ELEMENT_ID\", \"IP_ADDRESS\") VALUES (1002, '10.0.0.1');"}
{"sql_prompt": "List alarms with 'Link Failure' as the specific problem, ordered by time raised descending.", "sql": "SELECT id, eqp_name, severity, time_raised FROM alarm WHERE specific_problem = 'Link Failure' ORDER BY time_raised DESC;", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_name, severity, specific_problem, time_raised) VALUES (1701, 'SwitchC', 'Major', 'Link Failure', '2023-10-26 14:00:00');\nINSERT INTO alarm (id, eqp_name, severity, specific_problem, time_raised) VALUES (1702, 'RouterD', 'Critical', 'Link Failure', '2023-10-26 14:05:00');"}
{"sql_prompt": "Get the alarm ID and slogan for alarms associated with domain 'CORE_NETWORK'.", "sql": "SELECT T1.id, T2.slogan FROM alarm AS T1 INNER JOIN alarm_label AS T2 ON T1.id = T2.id WHERE T2.domain_id = 'CORE_NETWORK';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nCREATE TABLE alarm_label (id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250));\nINSERT INTO alarm (id) VALUES (1801);\nINSERT INTO alarm_label (id, domain_id, slogan) VALUES (1801, 'CORE_NETWORK', 'Core Router Link Down');\nINSERT INTO alarm (id) VALUES (1802);\nINSERT INTO alarm_label (id, domain_id, slogan) VALUES (1802, 'ACCESS_NETWORK', 'Access Switch Port Failure');"}
{"sql_prompt": "Show the details (short name, location, description) for equipment with code 'EQP-007'.", "sql": "SELECT \"SHORT_NAME\", \"LOCATION\", \"DESCRIPTION\" FROM equipment_details WHERE \"CODE\" = 'EQP-007';", "sql_context": "CREATE TABLE equipment_details ( index bigint, \"SHORT_NAME\" text, \"LOCATION\" text, \"TRAIL_NAME\" text, \"NUMERO_TD\" text, \"CODE\" text, \"DESCRIPTION\" text );\nINSERT INTO equipment_details (\"SHORT_NAME\", \"LOCATION\", \"CODE\", \"DESCRIPTION\") VALUES ('SBC-Primary', 'DataCenter-A', 'EQP-007', 'Session Border Controller - Primary Unit');\nINSERT INTO equipment_details (\"SHORT_NAME\", \"LOCATION\", \"CODE\", \"DESCRIPTION\") VALUES ('SBC-Secondary', 'DataCenter-B', 'EQP-008', 'Session Border Controller - Secondary Unit');"}
{"sql_prompt": "List all cable system names and their types.", "sql": "SELECT \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\" FROM cable_system;", "sql_context": "CREATE TABLE cable_system ( index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SYSTEM_NAME\" text, \"CABLE_TYPE\" text, \"SITE_A_ID\" text, \"SITE_B_ID\" text );\nINSERT INTO cable_system (\"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\") VALUES ('Trans-Atlantic-1', 'Submarine Fiber');\nINSERT INTO cable_system (\"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\") VALUES ('Metro-Ring-East', 'Terrestrial Fiber');"}
{"sql_prompt": "Find incidents with impact level 1 and urgency level 1.", "sql": "SELECT incident_number, short_description FROM incident WHERE impact = 1 AND urgency = 1;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), assigned_to character varying(100), assignment_count integer, business_service character varying(100), caller character varying(100), category character varying(100), closed timestamp without time zone, configuration_item character varying(100), contact_type character varying(100), correlation_id character varying(100), created_date timestamp without time zone, customer_type character varying(100), description text, domain character varying(100), end_fault timestamp without time zone, end_inefficiency timestamp without time zone, expected_resolution_date timestamp without time zone, first_configuration_item character varying(100), impact integer, in_validation boolean, incident_alert boolean, incident_parent character varying(100), inefficiency boolean, inefficiency_type character varying(100), level1 character varying(100), level2 character varying(100), level3 character varying(100), level4 character varying(100), msisdn character varying(100), network_element_type character varying(100), opened_by character varying(100), originating_system character varying(100), owner_group character varying(100), process_cause character varying(100), product_type character varying(100), reopen_count integer, resolution_code character varying(100), resolution_entity character varying(100), resolved timestamp without time zone, root_cause character varying(100), sequence_id integer, short_description text, source character varying(100), start_fault timestamp without time zone, start_inefficiency timestamp without time zone, status integer, updated timestamp without time zone, updated_by character varying(100), urgency integer, vendor character varying(100), wfm_id character varying(100));\nINSERT INTO incident (incident_number, short_description, impact, urgency) VALUES ('INC00130', 'Critical System Down', 1, 1);\nINSERT INTO incident (incident_number, short_description, impact, urgency) VALUES ('INC00131', 'Minor service degradation', 3, 3);"}
{"sql_prompt": "Show alarms that have associated comments.", "sql": "SELECT id, eqp_name, comments FROM alarm WHERE comments IS NOT NULL AND comments <> '';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_name, comments) VALUES (2201, 'ServerX', 'Investigating intermittent issue.');\nINSERT INTO alarm (id, eqp_name, comments) VALUES (2202, 'SwitchY', NULL);"}
{"sql_prompt": "List the site IDs and start times for outages currently in 'Ongoing' status.", "sql": "SELECT site_id, ts_start_disruption FROM outage WHERE status = 'Ongoing';", "sql_context": "CREATE TABLE outage ( outage_id integer, site_id character varying(50), ts_start_disruption timestamp without time zone, equipment_list character varying(100), status character varying(50), username character varying(100), latitude numeric(9,6), longitude numeric(9,6) );\nINSERT INTO outage (outage_id, site_id, ts_start_disruption, status) VALUES (3, 'SiteC', '2023-10-27 09:00:00', 'Ongoing');\nINSERT INTO outage (outage_id, site_id, ts_start_disruption, status) VALUES (4, 'SiteD', '2023-10-26 15:30:00', 'Resolved');"}
{"sql_prompt": "Show the alarm ID and associated incident number (tt_id) for alarms originating from 'SITE-XYZ'.", "sql": "SELECT id, tt_id FROM alarm WHERE from_site = 'SITE-XYZ';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, tt_id, from_site) VALUES (2401, 'INC99887', 'SITE-XYZ');\nINSERT INTO alarm (id, tt_id, from_site) VALUES (2402, 'INC99888', 'SITE-ABC');"}
{"sql_prompt": "What network elements have an activity status code of 'INACTIVE'?", "sql": "SELECT \"NODE_NAME\", \"MODEL_CODE\" FROM network_elements WHERE \"ACTIVITY_STATUS_CODE\" = 'INACTIVE';", "sql_context": "CREATE TABLE network_elements ( index bigint, \"LOCATION\" text, \"NODE_NAME\" text, \"NETWORK_ELEMENT_ID\" bigint, \"NETWORK_ELEMENT_TYPE_CODE\" text, \"SERIAL_NUMBER\" bigint, \"ACTIVITY_STATUS_CODE\" text, \"MODEL_CODE\" text, \"VENDOR_NAME\" text, \"ELEMENT_CLASS_CODE\" text, \"ELEMENT_CLASS_DESC\" text, \"CARD_TYPE_ID\" double precision, \"SYSTEM_NAME\" text, \"LOCATION_SHORT_NAME\" text );\nINSERT INTO network_elements (\"NODE_NAME\", \"MODEL_CODE\", \"ACTIVITY_STATUS_CODE\") VALUES ('OldRouter-1', 'ModelX', 'INACTIVE');\nINSERT INTO network_elements (\"NODE_NAME\", \"MODEL_CODE\", \"ACTIVITY_STATUS_CODE\") VALUES ('CoreSwitch-1', 'ModelY', 'ACTIVE');"}
{"sql_prompt": "Count the number of incidents per category, only showing categories with more than 5 incidents.", "sql": "SELECT category, COUNT(*) as incident_count FROM incident GROUP BY category HAVING COUNT(*) > 5;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), assigned_to character varying(100), assignment_count integer, business_service character varying(100), caller character varying(100), category character varying(100), closed timestamp without time zone, configuration_item character varying(100), contact_type character varying(100), correlation_id character varying(100), created_date timestamp without time zone, customer_type character varying(100), description text, domain character varying(100), end_fault timestamp without time zone, end_inefficiency timestamp without time zone, expected_resolution_date timestamp without time zone, first_configuration_item character varying(100), impact integer, in_validation boolean, incident_alert boolean, incident_parent character varying(100), inefficiency boolean, inefficiency_type character varying(100), level1 character varying(100), level2 character varying(100), level3 character varying(100), level4 character varying(100), msisdn character varying(100), network_element_type character varying(100), opened_by character varying(100), originating_system character varying(100), owner_group character varying(100), process_cause character varying(100), product_type character varying(100), reopen_count integer, resolution_code character varying(100), resolution_entity character varying(100), resolved timestamp without time zone, root_cause character varying(100), sequence_id integer, short_description text, source character varying(100), start_fault timestamp without time zone, start_inefficiency timestamp without time zone, status integer, updated timestamp without time zone, updated_by character varying(100), urgency integer, vendor character varying(100), wfm_id character varying(100));\nINSERT INTO incident (incident_number, category) VALUES ('INC00201', 'Network'); INSERT INTO incident (incident_number, category) VALUES ('INC00202', 'Network'); INSERT INTO incident (incident_number, category) VALUES ('INC00203', 'Network'); INSERT INTO incident (incident_number, category) VALUES ('INC00204', 'Network'); INSERT INTO incident (incident_number, category) VALUES ('INC00205', 'Network'); INSERT INTO incident (incident_number, category) VALUES ('INC00206', 'Network');\nINSERT INTO incident (incident_number, category) VALUES ('INC00210', 'Software'); INSERT INTO incident (incident_number, category) VALUES ('INC00211', 'Software');"}
{"sql_prompt": "Find the site name and city for site ID 'SITE-123'.", "sql": "SELECT \"SITE_NAME\", \"CITY_NAME\" FROM sites WHERE \"SITE_ID\" = 'SITE-123';", "sql_context": "CREATE TABLE sites ( \"SITE_ID\" text, \"SITE_NAME\" text, \"LONGITUDE\" text, \"LATITUDE\" text, \"DISTRICT\" text, \"ADDRESS\" text, \"CIVICO\" text, \"CITY_NAME\" text, \"SITE_TYPE\" text, \"CUSTOMER\" text, \"SHORT_NAME\" text, \"ALTERNATIVE_NAME\" text, \"PROVINCE\" text, \"BUILDING_UNIQUE_ID\" text, \"CODICE_ISTAT\" double precision, \"REGIONE\" text, \"PROVINCIA\" text );\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"CITY_NAME\") VALUES ('SITE-123', 'Main Exchange', 'Metropolis');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"CITY_NAME\") VALUES ('SITE-456', 'Regional Hub', 'Gotham');"}
{"sql_prompt": "List the equipment name, time raised, and time cleared for alarms cleared by 'ops_team_1'.", "sql": "SELECT eqp_name, time_raised, time_cleared FROM alarm WHERE status = 'Cleared' AND ack_user_id = 'ops_team_1';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_name, time_raised, time_cleared, status, ack_user_id) VALUES (2801, 'RouterG', '2023-10-27 10:00:00', '2023-10-27 11:30:00', 'Cleared', 'ops_team_1');\nINSERT INTO alarm (id, eqp_name, time_raised, time_cleared, status, ack_user_id) VALUES (2802, 'SwitchH', '2023-10-27 10:15:00', NULL, 'Active', 'ops_team_2');"}
{"sql_prompt": "Show incidents related to 'Database Service' that were created after '2023-10-01'.", "sql": "SELECT incident_number, short_description, created_date FROM incident WHERE affected_service = 'Database Service' AND created_date > '2023-10-01 00:00:00';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), assigned_to character varying(100), assignment_count integer, business_service character varying(100), caller character varying(100), category character varying(100), closed timestamp without time zone, configuration_item character varying(100), contact_type character varying(100), correlation_id character varying(100), created_date timestamp without time zone, customer_type character varying(100), description text, domain character varying(100), end_fault timestamp without time zone, end_inefficiency timestamp without time zone, expected_resolution_date timestamp without time zone, first_configuration_item character varying(100), impact integer, in_validation boolean, incident_alert boolean, incident_parent character varying(100), inefficiency boolean, inefficiency_type character varying(100), level1 character varying(100), level2 character varying(100), level3 character varying(100), level4 character varying(100), msisdn character varying(100), network_element_type character varying(100), opened_by character varying(100), originating_system character varying(100), owner_group character varying(100), process_cause character varying(100), product_type character varying(100), reopen_count integer, resolution_code character varying(100), resolution_entity character varying(100), resolved timestamp without time zone, root_cause character varying(100), sequence_id integer, short_description text, source character varying(100), start_fault timestamp without time zone, start_inefficiency timestamp without time zone, status integer, updated timestamp without time zone, updated_by character varying(100), urgency integer, vendor character varying(100), wfm_id character varying(100));\nINSERT INTO incident (incident_number, short_description, affected_service, created_date) VALUES ('INC00301', 'DB connection timeout', 'Database Service', '2023-10-15 14:00:00');\nINSERT INTO incident (incident_number, short_description, affected_service, created_date) VALUES ('INC00302', 'Web server error', 'Web Service', '2023-09-20 10:00:00');"}
{"sql_prompt": "List alarm IDs that have a repeat count greater than 10 and are currently not cleared.", "sql": "SELECT id, eqp_name, repeated_count FROM alarm WHERE repeated_count > 10 AND status <> 'Cleared';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_name, repeated_count, status) VALUES (3001, 'Interface Card 5', 15, 'Active');\nINSERT INTO alarm (id, eqp_name, repeated_count, status) VALUES (3002, 'Power Supply 2', 5, 'Active');\nINSERT INTO alarm (id, eqp_name, repeated_count, status) VALUES (3003, 'Fan Tray 1', 12, 'Cleared');"}
{"sql_prompt": "Show the ID, severity, and equipment name for all alarms.", "sql": "SELECT id, severity, eqp_name FROM alarm;", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), eqp_name character varying(250));\nINSERT INTO alarm (id, severity, eqp_name) VALUES (101, 'Critical', 'Router-A');\nINSERT INTO alarm (id, severity, eqp_name) VALUES (102, 'Major', 'Switch-B');"}
{"sql_prompt": "What are the details for the alarm with ID 55678?", "sql": "SELECT * FROM alarm WHERE id = 55678;", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, severity, eqp_name, time_raised, status) VALUES (55678, 'Minor', 'Server-C', '2023-10-26 10:00:00', 'Active');"}
{"sql_prompt": "Count the number of alarms for each severity level.", "sql": "SELECT severity, COUNT(*) FROM alarm GROUP BY severity;", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250));\nINSERT INTO alarm (id, severity) VALUES (1, 'Critical');\nINSERT INTO alarm (id, severity) VALUES (2, 'Critical');\nINSERT INTO alarm (id, severity) VALUES (3, 'Major');"}
{"sql_prompt": "Find all 'Critical' severity alarms that occurred in the 'North' district.", "sql": "SELECT id, eqp_name, time_raised FROM alarm WHERE severity = 'Critical' AND district = 'North';", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), district character varying(250), eqp_name character varying(250), time_raised timestamp without time zone);\nINSERT INTO alarm (id, severity, district, eqp_name, time_raised) VALUES (201, 'Critical', 'North', 'NE45', '2023-10-26 08:30:00');\nINSERT INTO alarm (id, severity, district, eqp_name, time_raised) VALUES (202, 'Major', 'North', 'NE46', '2023-10-26 09:00:00');\nINSERT INTO alarm (id, severity, district, eqp_name, time_raised) VALUES (203, 'Critical', 'South', 'NE50', '2023-10-26 09:15:00');"}
{"sql_prompt": "List the distinct equipment names (`eqp_name`) associated with alarms.", "sql": "SELECT DISTINCT eqp_name FROM alarm;", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250));\nINSERT INTO alarm (id, eqp_name) VALUES (301, 'Router-X');\nINSERT INTO alarm (id, eqp_name) VALUES (302, 'Switch-Y');\nINSERT INTO alarm (id, eqp_name) VALUES (303, 'Router-X');"}
{"sql_prompt": "Show the alarm ID and the slogan (description) for all alarms using the alarm view.", "sql": "SELECT alarm_id, description FROM v_alarms;", "sql_context": "CREATE TABLE alarm (id bigint);\nCREATE TABLE alarm_label (id bigint, slogan character varying(250));\nCREATE VIEW v_alarms AS SELECT a.id AS alarm_id, l.slogan AS description FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO alarm (id) VALUES (401);\nINSERT INTO alarm_label (id, slogan) VALUES (401, 'Link Down');\nINSERT INTO alarm (id) VALUES (402);\nINSERT INTO alarm_label (id, slogan) VALUES (402, 'High Temperature');"}
{"sql_prompt": "Find the alarm ID, equipment name, and time raised for alarms acknowledged by user 'ops_team_1'.", "sql": "SELECT id, eqp_name, time_raised FROM alarm WHERE ack_user_id = 'ops_team_1';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), eqp_name character varying(250), time_raised timestamp without time zone);\nINSERT INTO alarm (id, ack_user_id, eqp_name, time_raised) VALUES (501, 'ops_team_1', 'Firewall-Main', '2023-10-25 14:00:00');\nINSERT INTO alarm (id, ack_user_id, eqp_name, time_raised) VALUES (502, 'ops_team_2', 'Server-DB', '2023-10-25 15:00:00');"}
{"sql_prompt": "Show the 10 most recently raised alarms.", "sql": "SELECT id, eqp_name, severity, time_raised FROM alarm ORDER BY time_raised DESC LIMIT 10;", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), severity character varying(250), time_raised timestamp without time zone);\nINSERT INTO alarm (id, eqp_name, severity, time_raised) VALUES (601, 'Router-A', 'Major', '2023-10-26 11:00:00');\nINSERT INTO alarm (id, eqp_name, severity, time_raised) VALUES (602, 'Switch-B', 'Critical', '2023-10-26 11:05:00');"}
{"sql_prompt": "List all incident numbers and their short descriptions.", "sql": "SELECT incident_number, short_description FROM incident;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), short_description text);\nINSERT INTO incident (incident_number, short_description) VALUES ('INC0012345', 'Network outage reported in Building A');\nINSERT INTO incident (incident_number, short_description) VALUES ('INC0012346', 'Server performance degradation');"}
{"sql_prompt": "How many incidents are currently assigned to the 'Network Support' group?", "sql": "SELECT COUNT(*) FROM incident WHERE assignment_group = 'Network Support';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), assignment_group character varying(100));\nINSERT INTO incident (incident_number, assignment_group) VALUES ('INC001', 'Network Support');\nINSERT INTO incident (incident_number, assignment_group) VALUES ('INC002', 'Server Support');\nINSERT INTO incident (incident_number, assignment_group) VALUES ('INC003', 'Network Support');"}
{"sql_prompt": "Show incidents created between '2023-10-01' and '2023-10-31'.", "sql": "SELECT incident_number, created_date, short_description FROM incident WHERE created_date BETWEEN '2023-10-01 00:00:00' AND '2023-10-31 23:59:59';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), created_date timestamp without time zone, short_description text);\nINSERT INTO incident (incident_number, created_date, short_description) VALUES ('INC001', '2023-09-28 10:00:00', 'Issue from Sept');\nINSERT INTO incident (incident_number, created_date, short_description) VALUES ('INC002', '2023-10-15 14:30:00', 'Issue in Oct');\nINSERT INTO incident (incident_number, created_date, short_description) VALUES ('INC003', '2023-11-01 09:00:00', 'Issue in Nov');"}
{"sql_prompt": "Find incidents with an impact level greater than 3.", "sql": "SELECT incident_number, short_description, impact FROM incident WHERE impact > 3;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), short_description text, impact integer);\nINSERT INTO incident (incident_number, short_description, impact) VALUES ('INC004', 'Minor issue', 2);\nINSERT INTO incident (incident_number, short_description, impact) VALUES ('INC005', 'Significant issue', 4);\nINSERT INTO incident (incident_number, short_description, impact) VALUES ('INC006', 'Critical issue', 5);"}
{"sql_prompt": "List the site names and their types located in the 'Milan' city.", "sql": "SELECT \"SITE_NAME\", \"SITE_TYPE\" FROM sites WHERE \"CITY_NAME\" = 'Milan';", "sql_context": "CREATE TABLE sites (\"SITE_ID\" text, \"SITE_NAME\" text, \"CITY_NAME\" text, \"SITE_TYPE\" text);\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"CITY_NAME\", \"SITE_TYPE\") VALUES ('S1', 'Milan Central Office', 'Milan', 'CO');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"CITY_NAME\", \"SITE_TYPE\") VALUES ('S2', 'Rome POP', 'Rome', 'POP');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"CITY_NAME\", \"SITE_TYPE\") VALUES ('S3', 'Milan Datacenter', 'Milan', 'DC');"}
{"sql_prompt": "Show the node name, model code, and vendor for network elements located in 'Building 7'.", "sql": "SELECT \"NODE_NAME\", \"MODEL_CODE\", \"VENDOR_NAME\" FROM network_elements WHERE \"LOCATION\" = 'Building 7';", "sql_context": "CREATE TABLE network_elements (index bigint, \"LOCATION\" text, \"NODE_NAME\" text, \"NETWORK_ELEMENT_ID\" bigint, \"MODEL_CODE\" text, \"VENDOR_NAME\" text);\nINSERT INTO network_elements (index, \"LOCATION\", \"NODE_NAME\", \"NETWORK_ELEMENT_ID\", \"MODEL_CODE\", \"VENDOR_NAME\") VALUES (1, 'Building 7', 'Router7A', 1001, 'ASR9K', 'Cisco');\nINSERT INTO network_elements (index, \"LOCATION\", \"NODE_NAME\", \"NETWORK_ELEMENT_ID\", \"MODEL_CODE\", \"VENDOR_NAME\") VALUES (2, 'Building 8', 'Switch8B', 1002, 'NCS5500', 'Cisco');"}
{"sql_prompt": "What is the IP address associated with the network element node named 'CoreRouter-1'?", "sql": "SELECT T2.\"IP_ADDRESS\" FROM network_elements AS T1 INNER JOIN equipment_ip_address AS T2 ON T1.\"NODE_NAME\" = T2.\"NODE_NAME\" WHERE T1.\"NODE_NAME\" = 'CoreRouter-1';", "sql_context": "CREATE TABLE network_elements (index bigint, \"NODE_NAME\" text, \"NETWORK_ELEMENT_ID\" bigint);\nCREATE TABLE equipment_ip_address (index bigint, \"NODE_NAME\" text, \"NETWORK_ELEMENT_ID\" bigint, \"IP_ADDRESS\" text);\nINSERT INTO network_elements (index, \"NODE_NAME\", \"NETWORK_ELEMENT_ID\") VALUES (10, 'CoreRouter-1', 2001);\nINSERT INTO equipment_ip_address (index, \"NODE_NAME\", \"NETWORK_ELEMENT_ID\", \"IP_ADDRESS\") VALUES (20, 'CoreRouter-1', 2001, '10.0.0.1');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"NETWORK_ELEMENT_ID\") VALUES (11, 'EdgeSwitch-2', 2002);\nINSERT INTO equipment_ip_address (index, \"NODE_NAME\", \"NETWORK_ELEMENT_ID\", \"IP_ADDRESS\") VALUES (21, 'EdgeSwitch-2', 2002, '10.0.1.1');"}
{"sql_prompt": "Count the number of active outages.", "sql": "SELECT COUNT(*) FROM outage WHERE status = 'Active';", "sql_context": "CREATE TABLE outage (outage_id integer, site_id character varying(50), status character varying(50));\nINSERT INTO outage (outage_id, site_id, status) VALUES (1, 'SiteA', 'Active');\nINSERT INTO outage (outage_id, site_id, status) VALUES (2, 'SiteB', 'Closed');\nINSERT INTO outage (outage_id, site_id, status) VALUES (3, 'SiteC', 'Active');"}
{"sql_prompt": "Find cable systems connecting Site 'SiteX' to Site 'SiteY'.", "sql": "SELECT \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\" FROM cable_system WHERE (\"SITE_A_ID\" = 'SiteX' AND \"SITE_B_ID\" = 'SiteY') OR (\"SITE_A_ID\" = 'SiteY' AND \"SITE_B_ID\" = 'SiteX');", "sql_context": "CREATE TABLE cable_system (index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SYSTEM_NAME\" text, \"CABLE_TYPE\" text, \"SITE_A_ID\" text, \"SITE_B_ID\" text);\nINSERT INTO cable_system (index, \"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\", \"SITE_A_ID\", \"SITE_B_ID\") VALUES (1, 'CS1', 'Link_X_Y', 'Fiber', 'SiteX', 'SiteY');\nINSERT INTO cable_system (index, \"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\", \"SITE_A_ID\", \"SITE_B_ID\") VALUES (2, 'CS2', 'Link_Y_Z', 'Fiber', 'SiteY', 'SiteZ');"}
{"sql_prompt": "Get the equipment details (short name, location, description) for equipment with code 'EQ123'.", "sql": "SELECT \"SHORT_NAME\", \"LOCATION\", \"DESCRIPTION\" FROM equipment_details WHERE \"CODE\" = 'EQ123';", "sql_context": "CREATE TABLE equipment_details (index bigint, \"SHORT_NAME\" text, \"LOCATION\" text, \"CODE\" text, \"DESCRIPTION\" text);\nINSERT INTO equipment_details (index, \"SHORT_NAME\", \"LOCATION\", \"CODE\", \"DESCRIPTION\") VALUES (1, 'Rack 1 Shelf 2', 'DC-Main', 'EQ123', 'Main Power Distribution Unit');\nINSERT INTO equipment_details (index, \"SHORT_NAME\", \"LOCATION\", \"CODE\", \"DESCRIPTION\") VALUES (2, 'UPS Unit 5', 'DC-Main', 'EQ124', 'Backup Power Supply');"}
{"sql_prompt": "Show alarms that have associated comments.", "sql": "SELECT id, eqp_name, comments FROM alarm WHERE comments IS NOT NULL AND comments <> '';", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), comments text);\nINSERT INTO alarm (id, eqp_name, comments) VALUES (701, 'Router-A', 'Investigating flapping.');\nINSERT INTO alarm (id, eqp_name, comments) VALUES (702, 'Switch-B', NULL);\nINSERT INTO alarm (id, eqp_name, comments) VALUES (703, 'Firewall-C', '');"}
{"sql_prompt": "Find the total number of incidents per category, showing only categories with more than 5 incidents.", "sql": "SELECT category, COUNT(*) as incident_count FROM incident GROUP BY category HAVING COUNT(*) > 5;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), category character varying(100));\nINSERT INTO incident (incident_number, category) VALUES ('INC001', 'Network');INSERT INTO incident (incident_number, category) VALUES ('INC002', 'Network');INSERT INTO incident (incident_number, category) VALUES ('INC003', 'Network');INSERT INTO incident (incident_number, category) VALUES ('INC004', 'Network');INSERT INTO incident (incident_number, category) VALUES ('INC005', 'Network');INSERT INTO incident (incident_number, category) VALUES ('INC006', 'Network');\nINSERT INTO incident (incident_number, category) VALUES ('INC007', 'Software');INSERT INTO incident (incident_number, category) VALUES ('INC008', 'Software');INSERT INTO incident (incident_number, category) VALUES ('INC009', 'Hardware');"}
{"sql_prompt": "What is the average repeated count for 'Link Down' alarms?", "sql": "SELECT AVG(repeated_count) FROM alarm WHERE specific_problem = 'Link Down';", "sql_context": "CREATE TABLE alarm (id bigint, specific_problem character varying(250), repeated_count integer);\nINSERT INTO alarm (id, specific_problem, repeated_count) VALUES (801, 'Link Down', 5);\nINSERT INTO alarm (id, specific_problem, repeated_count) VALUES (802, 'High CPU', 2);\nINSERT INTO alarm (id, specific_problem, repeated_count) VALUES (803, 'Link Down', 15);"}
{"sql_prompt": "List incidents resolved between '2023-10-20 00:00:00' and '2023-10-26 23:59:59'.", "sql": "SELECT incident_number, short_description, resolved FROM incident WHERE resolved >= '2023-10-20 00:00:00' AND resolved <= '2023-10-26 23:59:59';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), short_description text, resolved timestamp without time zone);\nINSERT INTO incident (incident_number, short_description, resolved) VALUES ('INC010', 'Fixed server issue', '2023-10-22 11:00:00');\nINSERT INTO incident (incident_number, short_description, resolved) VALUES ('INC011', 'Router config updated', '2023-10-19 16:00:00');\nINSERT INTO incident (incident_number, short_description, resolved) VALUES ('INC012', 'Port enabled', '2023-10-25 09:30:00');"}
{"sql_prompt": "Show network elements whose element class description contains the word 'ROUTER'.", "sql": "SELECT \"NODE_NAME\", \"MODEL_CODE\", \"ELEMENT_CLASS_DESC\" FROM network_elements WHERE \"ELEMENT_CLASS_DESC\" LIKE '%ROUTER%';", "sql_context": "CREATE TABLE network_elements (index bigint, \"NODE_NAME\" text, \"MODEL_CODE\" text, \"ELEMENT_CLASS_DESC\" text);\nINSERT INTO network_elements (index, \"NODE_NAME\", \"MODEL_CODE\", \"ELEMENT_CLASS_DESC\") VALUES (30, 'CoreRtr1', 'ASR9K', 'CORE IP ROUTER');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"MODEL_CODE\", \"ELEMENT_CLASS_DESC\") VALUES (31, 'EdgeSw1', 'NCS5K', 'EDGE ETHERNET SWITCH');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"MODEL_CODE\", \"ELEMENT_CLASS_DESC\") VALUES (32, 'DistRtr5', 'MX10K', 'DISTRIBUTION ROUTER');"}
{"sql_prompt": "Find the slogan for alarm ID 9876.", "sql": "SELECT slogan FROM alarm_label WHERE id = 9876;", "sql_context": "CREATE TABLE alarm_label (id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250));\nINSERT INTO alarm_label (id, domain_id, slogan, alarmtrigger) VALUES (9876, 'Network', 'Power Supply Failure', 'PSU_FAIL');\nINSERT INTO alarm_label (id, domain_id, slogan, alarmtrigger) VALUES (9877, 'Network', 'Fan Tray Removed', 'FAN_REM');"}
{"sql_prompt": "List all distinct areas recorded in the alarm table.", "sql": "SELECT DISTINCT area FROM alarm;", "sql_context": "CREATE TABLE alarm (id bigint, area character varying(250));\nINSERT INTO alarm (id, area) VALUES (1, 'North');\nINSERT INTO alarm (id, area) VALUES (2, 'South');\nINSERT INTO alarm (id, area) VALUES (3, 'North');\nINSERT INTO alarm (id, area) VALUES (4, 'West');"}
{"sql_prompt": "Show alarms that are currently marked as inhibited.", "sql": "SELECT id, eqp_name, time_raised FROM alarm WHERE inhibit = TRUE;", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), time_raised timestamp without time zone, inhibit boolean);\nINSERT INTO alarm (id, eqp_name, time_raised, inhibit) VALUES (1001, 'ServerX', '2023-10-26 01:00:00', TRUE);\nINSERT INTO alarm (id, eqp_name, time_raised, inhibit) VALUES (1002, 'SwitchY', '2023-10-26 02:00:00', FALSE);\nINSERT INTO alarm (id, eqp_name, time_raised, inhibit) VALUES (1003, 'RouterZ', '2023-10-26 03:00:00', TRUE);"}
{"sql_prompt": "Using the alarms view, show the description, severity, and vendor for alarms related to 'EQP-SITE-005'.", "sql": "SELECT description, severity, vendor FROM v_alarms WHERE eqp_name = 'EQP-SITE-005';", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), eqp_name character varying(250), vendor character varying(250));\nCREATE TABLE alarm_label (id bigint, slogan character varying(250));\nCREATE VIEW v_alarms AS SELECT a.id AS alarm_id, a.severity, a.eqp_name, l.slogan AS description, a.vendor FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO alarm (id, severity, eqp_name, vendor) VALUES (1101, 'Major', 'EQP-SITE-005', 'VendorA');\nINSERT INTO alarm_label (id, slogan) VALUES (1101, 'High Utilization');\nINSERT INTO alarm (id, severity, eqp_name, vendor) VALUES (1102, 'Critical', 'EQP-SITE-006', 'VendorB');\nINSERT INTO alarm_label (id, slogan) VALUES (1102, 'Module Failure');"}
{"sql_prompt": "Find the incident number and associated trouble ticket ID (tt_id) for alarms with severity 'Critical'.", "sql": "SELECT T1.tt_id, T2.incident_number FROM alarm AS T1 INNER JOIN incident AS T2 ON T1.tt_id = T2.incident_number WHERE T1.severity = 'Critical';", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), tt_id character varying(250));\nCREATE TABLE incident (incident_number character varying(50), short_description text);\nINSERT INTO alarm (id, severity, tt_id) VALUES (1201, 'Critical', 'INC998877');\nINSERT INTO alarm (id, severity, tt_id) VALUES (1202, 'Major', 'INC998878');\nINSERT INTO incident (incident_number, short_description) VALUES ('INC998877', 'Critical device down');\nINSERT INTO incident (incident_number, short_description) VALUES ('INC998878', 'Performance issue');"}
{"sql_prompt": "Show the site name and address for sites located in the 'Lazio' region.", "sql": "SELECT \"SITE_NAME\", \"ADDRESS\" FROM sites WHERE \"REGIONE\" = 'Lazio';", "sql_context": "CREATE TABLE sites (\"SITE_ID\" text, \"SITE_NAME\" text, \"ADDRESS\" text, \"REGIONE\" text);\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"ADDRESS\", \"REGIONE\") VALUES ('RM01', 'Roma Tiburtina', 'Via Tiburtina 100', 'Lazio');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"ADDRESS\", \"REGIONE\") VALUES ('MI01', 'Milano Centrale', 'Piazza Duca d Aosta 1', 'Lombardia');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"ADDRESS\", \"REGIONE\") VALUES ('RM02', 'Roma EUR', 'Viale Europa 50', 'Lazio');"}
{"sql_prompt": "List the names of cable segments associated with cable system 'CS-ATLANTIC'.", "sql": "SELECT T2.\"CABLE_SEGMENT_NAME\" FROM cl_clsegm_rel AS T1 INNER JOIN cablesegment AS T2 ON T1.\"CABLE_SEGMENT_ID\" = T2.\"CABLE_SEGMENT_ID\" WHERE T1.\"CABLE_SYSTEM_ID\" = 'CS-ATLANTIC';", "sql_context": "CREATE TABLE cl_clsegm_rel (index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SEGMENT_ID\" text);\nCREATE TABLE cablesegment (index bigint, \"CABLE_SEGMENT_ID\" text, \"CABLE_SEGMENT_NAME\" text);\nINSERT INTO cl_clsegm_rel (index, \"CABLE_SYSTEM_ID\", \"CABLE_SEGMENT_ID\") VALUES (1, 'CS-ATLANTIC', 'SEG-A1');\nINSERT INTO cablesegment (index, \"CABLE_SEGMENT_ID\", \"CABLE_SEGMENT_NAME\") VALUES (10, 'SEG-A1', 'Atlantic Segment 1');\nINSERT INTO cl_clsegm_rel (index, \"CABLE_SYSTEM_ID\", \"CABLE_SEGMENT_ID\") VALUES (2, 'CS-PACIFIC', 'SEG-P1');\nINSERT INTO cablesegment (index, \"CABLE_SEGMENT_ID\", \"CABLE_SEGMENT_NAME\") VALUES (11, 'SEG-P1', 'Pacific Segment 1');"}
{"sql_prompt": "Show me all alarms with 'Critical' severity.", "sql": "SELECT id, eqp_name, severity, time_raised FROM alarm WHERE severity = 'Critical';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_name, severity, time_raised) VALUES (101, 'RouterA', 'Critical', '2023-10-26 10:00:00');\nINSERT INTO alarm (id, eqp_name, severity, time_raised) VALUES (102, 'SwitchB', 'Major', '2023-10-26 11:00:00');"}
{"sql_prompt": "How many alarms are there for each area?", "sql": "SELECT area, COUNT(id) AS alarm_count FROM alarm GROUP BY area;", "sql_context": "CREATE TABLE alarm (id bigint, area character varying(250));\nINSERT INTO alarm (id, area) VALUES (1, 'North');\nINSERT INTO alarm (id, area) VALUES (2, 'South');\nINSERT INTO alarm (id, area) VALUES (3, 'North');"}
{"sql_prompt": "List the 10 most recently raised alarms.", "sql": "SELECT id, eqp_name, time_raised FROM alarm ORDER BY time_raised DESC LIMIT 10;", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), time_raised timestamp without time zone);\nINSERT INTO alarm (id, eqp_name, time_raised) VALUES (1, 'EQP001', '2023-11-01 14:30:00');\nINSERT INTO alarm (id, eqp_name, time_raised) VALUES (2, 'EQP002', '2023-11-01 15:00:00');"}
{"sql_prompt": "Get the details (severity, equipment name, description) for alarm ID 5678.", "sql": "SELECT severity, eqp_name, description FROM v_alarms WHERE alarm_id = 5678;", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), eqp_name character varying(250)); CREATE TABLE alarm_label (id bigint, slogan character varying(250)); CREATE VIEW v_alarms AS SELECT a.id AS alarm_id, a.severity, a.eqp_name, l.slogan AS description FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO alarm (id, severity, eqp_name) VALUES (5678, 'Major', 'CoreSwitch');\nINSERT INTO alarm_label (id, slogan) VALUES (5678, 'Link Down Event');"}
{"sql_prompt": "Which alarms were acknowledged by user 'jsmith'?", "sql": "SELECT id, alarm_primary_key, time_ack FROM alarm WHERE ack_user_id = 'jsmith';", "sql_context": "CREATE TABLE alarm (id bigint, alarm_primary_key character varying(250), ack_user_id character varying(250), time_ack timestamp without time zone);\nINSERT INTO alarm (id, alarm_primary_key, ack_user_id, time_ack) VALUES (201, 'ALM-PRI-201', 'jsmith', '2023-10-27 09:15:00');\nINSERT INTO alarm (id, alarm_primary_key, ack_user_id, time_ack) VALUES (202, 'ALM-PRI-202', 'abrown', '2023-10-27 09:20:00');"}
{"sql_prompt": "Show all 'Critical' alarms that are currently unacknowledged.", "sql": "SELECT id, eqp_name, time_raised FROM alarm WHERE severity = 'Critical' AND base_alarm_ack_state = 'Unacknowledged';", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), severity character varying(250), base_alarm_ack_state character varying(250), time_raised timestamp without time zone);\nINSERT INTO alarm (id, eqp_name, severity, base_alarm_ack_state, time_raised) VALUES (301, 'ServerX', 'Critical', 'Unacknowledged', '2023-11-01 08:00:00');\nINSERT INTO alarm (id, eqp_name, severity, base_alarm_ack_state, time_raised) VALUES (302, 'ServerY', 'Critical', 'Acknowledged', '2023-11-01 07:30:00');"}
{"sql_prompt": "List all incidents categorized as 'Network Outage'.", "sql": "SELECT incident_number, short_description, created_date FROM incident WHERE category = 'Network Outage';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), category character varying(100), short_description text, created_date timestamp without time zone);\nINSERT INTO incident (incident_number, category, short_description, created_date) VALUES ('INC00123', 'Network Outage', 'Core router failure', '2023-10-25 14:00:00');\nINSERT INTO incident (incident_number, category, short_description, created_date) VALUES ('INC00124', 'Software Issue', 'Application login error', '2023-10-25 15:00:00');"}
{"sql_prompt": "Count the number of incidents for each status.", "sql": "SELECT status, COUNT(incident_number) AS incident_count FROM incident GROUP BY status;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), status integer);\nINSERT INTO incident (incident_number, status) VALUES ('INC001', 2);\nINSERT INTO incident (incident_number, status) VALUES ('INC002', 6);\nINSERT INTO incident (incident_number, status) VALUES ('INC003', 2);"}
{"sql_prompt": "Show incidents that were closed within the last 7 days.", "sql": "SELECT incident_number, short_description, closed FROM incident WHERE closed >= NOW() - interval '7 days';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), short_description text, closed timestamp without time zone);\nINSERT INTO incident (incident_number, short_description, closed) VALUES ('INC00500', 'Issue resolved', NOW() - interval '3 days');\nINSERT INTO incident (incident_number, short_description, closed) VALUES ('INC00499', 'Old issue', NOW() - interval '10 days');"}
{"sql_prompt": "Find incidents with an impact level greater than 3.", "sql": "SELECT incident_number, short_description, impact FROM incident WHERE impact > 3;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), short_description text, impact integer);\nINSERT INTO incident (incident_number, short_description, impact) VALUES ('INC00601', 'Major service down', 4);\nINSERT INTO incident (incident_number, short_description, impact) VALUES ('INC00602', 'Minor login issue', 2);"}
{"sql_prompt": "What is the location of the equipment with short name 'EQP-SITEA-RTR1'?", "sql": "SELECT \"LOCATION\", \"DESCRIPTION\" FROM equipment_details WHERE \"SHORT_NAME\" = 'EQP-SITEA-RTR1';", "sql_context": "CREATE TABLE equipment_details (index bigint, \"SHORT_NAME\" text, \"LOCATION\" text, \"TRAIL_NAME\" text, \"NUMERO_TD\" text, \"CODE\" text, \"DESCRIPTION\" text);\nINSERT INTO equipment_details (index, \"SHORT_NAME\", \"LOCATION\", \"DESCRIPTION\") VALUES (1, 'EQP-SITEA-RTR1', 'Site A - Rack 2', 'Primary Edge Router');\nINSERT INTO equipment_details (index, \"SHORT_NAME\", \"LOCATION\", \"DESCRIPTION\") VALUES (2, 'EQP-SITEB-SW1', 'Site B - Rack 1', 'Access Switch');"}
{"sql_prompt": "List all network elements provided by 'Vendor A'.", "sql": "SELECT \"NODE_NAME\", \"MODEL_CODE\", \"ACTIVITY_STATUS_CODE\" FROM network_elements WHERE \"VENDOR_NAME\" = 'Vendor A';", "sql_context": "CREATE TABLE network_elements (index bigint, \"NODE_NAME\" text, \"MODEL_CODE\" text, \"VENDOR_NAME\" text, \"ACTIVITY_STATUS_CODE\" text, \"NETWORK_ELEMENT_ID\" bigint, \"NETWORK_ELEMENT_TYPE_CODE\" text, \"SERIAL_NUMBER\" bigint, \"ELEMENT_CLASS_CODE\" text, \"ELEMENT_CLASS_DESC\" text, \"CARD_TYPE_ID\" double precision, \"SYSTEM_NAME\" text, \"LOCATION_SHORT_NAME\" text, \"LOCATION\" text);\nINSERT INTO network_elements (index, \"NODE_NAME\", \"MODEL_CODE\", \"VENDOR_NAME\", \"ACTIVITY_STATUS_CODE\") VALUES (10, 'Node1', 'ModelX', 'Vendor A', 'ACTIVE');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"MODEL_CODE\", \"VENDOR_NAME\", \"ACTIVITY_STATUS_CODE\") VALUES (11, 'Node2', 'ModelY', 'Vendor B', 'ACTIVE');"}
{"sql_prompt": "Provide the site name and address for site ID 'SITE00123'.", "sql": "SELECT \"SITE_NAME\", \"ADDRESS\", \"CITY_NAME\" FROM sites WHERE \"SITE_ID\" = 'SITE00123';", "sql_context": "CREATE TABLE sites (\"SITE_ID\" text, \"SITE_NAME\" text, \"ADDRESS\" text, \"CITY_NAME\" text, \"DISTRICT\" text, \"LONGITUDE\" text, \"LATITUDE\" text, \"CIVICO\" text, \"SITE_TYPE\" text, \"CUSTOMER\" text, \"SHORT_NAME\" text, \"ALTERNATIVE_NAME\" text, \"PROVINCE\" text, \"BUILDING_UNIQUE_ID\" text, \"CODICE_ISTAT\" double precision, \"REGIONE\" text, \"PROVINCIA\" text);\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"ADDRESS\", \"CITY_NAME\") VALUES ('SITE00123', 'Main Datacenter', '123 Tech Road', 'Metroville');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"ADDRESS\", \"CITY_NAME\") VALUES ('SITE00456', 'Branch Office West', '456 Business Ave', 'Westtown');"}
{"sql_prompt": "How many sites are located in each district?", "sql": "SELECT \"DISTRICT\", COUNT(\"SITE_ID\") AS site_count FROM sites GROUP BY \"DISTRICT\";", "sql_context": "CREATE TABLE sites (\"SITE_ID\" text, \"DISTRICT\" text);\nINSERT INTO sites (\"SITE_ID\", \"DISTRICT\") VALUES ('S1', 'Central');\nINSERT INTO sites (\"SITE_ID\", \"DISTRICT\") VALUES ('S2', 'North');\nINSERT INTO sites (\"SITE_ID\", \"DISTRICT\") VALUES ('S3', 'Central');"}
{"sql_prompt": "Show the alarm ID, equipment name, and slogan for all alarms.", "sql": "SELECT a.id, a.eqp_name, l.slogan FROM alarm a JOIN alarm_label l ON a.id = l.id;", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250)); CREATE TABLE alarm_label (id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250));\nINSERT INTO alarm (id, eqp_name) VALUES (1, 'EQP1');\nINSERT INTO alarm (id, eqp_name) VALUES (2, 'EQP2');\nINSERT INTO alarm_label (id, slogan) VALUES (1, 'High Temperature');\nINSERT INTO alarm_label (id, slogan) VALUES (2, 'Link Failure');"}
{"sql_prompt": "List alarms from vendor 'VendorX' including their description.", "sql": "SELECT alarm_id, eqp_name, description FROM v_alarms WHERE vendor = 'VendorX';", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), eqp_name character varying(250), vendor character varying(250)); CREATE TABLE alarm_label (id bigint, slogan character varying(250)); CREATE VIEW v_alarms AS SELECT a.id AS alarm_id, a.severity, a.eqp_name, l.slogan AS description, a.vendor FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO alarm (id, severity, eqp_name, vendor) VALUES (77, 'Warning', 'DeviceA', 'VendorX');\nINSERT INTO alarm (id, severity, eqp_name, vendor) VALUES (78, 'Minor', 'DeviceB', 'VendorY');\nINSERT INTO alarm_label (id, slogan) VALUES (77, 'Power Supply Issue');\nINSERT INTO alarm_label (id, slogan) VALUES (78, 'Interface Down');"}
{"sql_prompt": "Find alarms that were raised but have not yet been cleared.", "sql": "SELECT id, eqp_name, time_raised FROM alarm WHERE time_cleared IS NULL;", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), time_raised timestamp without time zone, time_cleared timestamp without time zone);\nINSERT INTO alarm (id, eqp_name, time_raised, time_cleared) VALUES (801, 'RouterZ', '2023-11-02 10:00:00', NULL);\nINSERT INTO alarm (id, eqp_name, time_raised, time_cleared) VALUES (802, 'SwitchY', '2023-11-02 09:00:00', '2023-11-02 09:30:00');"}
{"sql_prompt": "Show alarms that have comments recorded.", "sql": "SELECT id, eqp_name, comments FROM alarm WHERE comments IS NOT NULL AND comments <> '';", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), comments text);\nINSERT INTO alarm (id, eqp_name, comments) VALUES (901, 'FirewallA', 'Investigating spike in traffic.');\nINSERT INTO alarm (id, eqp_name, comments) VALUES (902, 'ServerB', NULL);"}
{"sql_prompt": "Which alarms are associated with trouble ticket 'TT12345'?", "sql": "SELECT id, alarm_primary_key, severity FROM alarm WHERE tt_id = 'TT12345';", "sql_context": "CREATE TABLE alarm (id bigint, alarm_primary_key character varying(250), severity character varying(250), tt_id character varying(250));\nINSERT INTO alarm (id, alarm_primary_key, severity, tt_id) VALUES (1001, 'ALM-PRI-1001', 'Major', 'TT12345');\nINSERT INTO alarm (id, alarm_primary_key, severity, tt_id) VALUES (1002, 'ALM-PRI-1002', 'Warning', 'TT54321');"}
{"sql_prompt": "Get the details for the cable system named 'SUBSEA-LINK-1'.", "sql": "SELECT \"CABLE_SYSTEM_ID\", \"CABLE_TYPE\", \"SITE_A_ID\", \"SITE_B_ID\" FROM cable_system WHERE \"CABLE_SYSTEM_NAME\" = 'SUBSEA-LINK-1';", "sql_context": "CREATE TABLE cable_system (index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SYSTEM_NAME\" text, \"CABLE_TYPE\" text, \"SITE_A_ID\" text, \"SITE_B_ID\" text);\nINSERT INTO cable_system (index, \"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\", \"SITE_A_ID\", \"SITE_B_ID\") VALUES (1, 'CS001', 'SUBSEA-LINK-1', 'Fiber', 'LANDA', 'LANDB');\nINSERT INTO cable_system (index, \"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\", \"SITE_A_ID\", \"SITE_B_ID\") VALUES (2, 'CS002', 'METRO-RING-A', 'Fiber', 'SITEA', 'SITEB');"}
{"sql_prompt": "Show all cable segments that have a status value of 1.0.", "sql": "SELECT \"CABLE_SEGMENT_ID\", \"CABLE_SEGMENT_NAME\", \"SYNTHETIC_NAME\" FROM cablesegment WHERE \"STATUS\" = 1.0;", "sql_context": "CREATE TABLE cablesegment (index bigint, \"CABLE_SEGMENT_ID\" text, \"CABLE_SEGMENT_NAME\" text, \"CABLE_TYPE\" text, \"STATUS\" double precision, \"SITE_CABINET_A_ID\" text, \"SITE_CABINET_B_ID\" text, \"SYNTHETIC_NAME\" text);\nINSERT INTO cablesegment (index, \"CABLE_SEGMENT_ID\", \"CABLE_SEGMENT_NAME\", \"STATUS\") VALUES (1, 'SEG001', 'Segment A-B', 1.0);\nINSERT INTO cablesegment (index, \"CABLE_SEGMENT_ID\", \"CABLE_SEGMENT_NAME\", \"STATUS\") VALUES (2, 'SEG002', 'Segment B-C', 0.0);"}
{"sql_prompt": "List all services currently in 'Active' status.", "sql": "SELECT \"SERVICE_ID\", \"SERVICE_NAME\", \"A_NETWORK_ADDRESS\", \"B_NETWORK_ADDRESS\" FROM service WHERE \"STATUS\" = 'Active';", "sql_context": "CREATE TABLE service (\"SERVICE_ID\" text, \"HIERARCHY_ID\" double precision, \"SERVICE_NAME\" text, \"STATUS\" text, \"A_NETWORK_ADDRESS\" text, \"B_NETWORK_ADDRESS\" text, \"V52_NUMBER\" double precision, \"LINK_ID\" double precision, \"NA_IMA_GROUP\" text, \"CIRCUIT_COUNT\" bigint, \"CHANNEL_COUNT\" double precision, \"MARKET_DESTINATION\" text, \"ACCESS_TYPE\" text, \"ASSOCIATED_SERVICE\" text, \"PROVISIONING_STATUS\" text, \"CLI\" text, \"DOMAIN\" bigint);\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"STATUS\") VALUES ('SVC100', 'Customer VPN A', 'Active');\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"STATUS\") VALUES ('SVC101', 'Customer Backup Link B', 'Inactive');"}
{"sql_prompt": "Show the site ID and start time for ongoing outages (status 'Ongoing').", "sql": "SELECT outage_id, site_id, ts_start_disruption FROM outage WHERE status = 'Ongoing';", "sql_context": "CREATE TABLE outage (outage_id integer, site_id character varying(50), ts_start_disruption timestamp without time zone, equipment_list character varying(100), status character varying(50), username character varying(100), latitude numeric(9,6), longitude numeric(9,6));\nINSERT INTO outage (outage_id, site_id, ts_start_disruption, status) VALUES (1, 'SITE_A', '2023-11-02 11:00:00', 'Ongoing');\nINSERT INTO outage (outage_id, site_id, ts_start_disruption, status) VALUES (2, 'SITE_B', '2023-11-01 15:00:00', 'Closed');"}
{"sql_prompt": "What is the IP address associated with the node named 'CORE-RTR-01'?", "sql": "SELECT \"IP_ADDRESS\" FROM equipment_ip_address WHERE \"NODE_NAME\" = 'CORE-RTR-01';", "sql_context": "CREATE TABLE equipment_ip_address (index bigint, \"NODE_NAME\" text, \"MODEL_CODE\" text, \"NETWORK_ELEMENT_ID\" bigint, \"CODE\" text, \"IP_ADDRESS\" text);\nINSERT INTO equipment_ip_address (index, \"NODE_NAME\", \"IP_ADDRESS\") VALUES (1, 'CORE-RTR-01', '10.0.0.1');\nINSERT INTO equipment_ip_address (index, \"NODE_NAME\", \"IP_ADDRESS\") VALUES (2, 'EDGE-SW-05', '192.168.1.1');"}
{"sql_prompt": "Count the total number of alarms for each device type.", "sql": "SELECT device_type, COUNT(*) AS total_alarms FROM alarm GROUP BY device_type;", "sql_context": "CREATE TABLE alarm (id bigint, device_type character varying(250));\nINSERT INTO alarm (id, device_type) VALUES (1, 'Router');\nINSERT INTO alarm (id, device_type) VALUES (2, 'Switch');\nINSERT INTO alarm (id, device_type) VALUES (3, 'Router');"}
{"sql_prompt": "List incidents assigned to the 'Network Support Tier 2' group, ordered by the creation date (newest first).", "sql": "SELECT incident_number, short_description, created_date FROM incident WHERE assignment_group = 'Network Support Tier 2' ORDER BY created_date DESC;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), assignment_group character varying(100), short_description text, created_date timestamp without time zone);\nINSERT INTO incident (incident_number, assignment_group, short_description, created_date) VALUES ('INC00701', 'Network Support Tier 2', 'High latency issue', '2023-11-02 09:00:00');\nINSERT INTO incident (incident_number, assignment_group, short_description, created_date) VALUES ('INC00702', 'Service Desk', 'Password reset request', '2023-11-02 09:15:00');\nINSERT INTO incident (incident_number, assignment_group, short_description, created_date) VALUES ('INC00703', 'Network Support Tier 2', 'Port flapping investigation', '2023-11-02 08:30:00');"}
{"sql_prompt": "Show the top 5 oldest active alarms (alarms that have not been cleared).", "sql": "SELECT id, eqp_name, time_raised FROM alarm WHERE time_cleared IS NULL ORDER BY time_raised ASC LIMIT 5;", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), time_raised timestamp without time zone, time_cleared timestamp without time zone);\nINSERT INTO alarm (id, eqp_name, time_raised, time_cleared) VALUES (1, 'EQP_OLD1', '2023-10-01 10:00:00', NULL);\nINSERT INTO alarm (id, eqp_name, time_raised, time_cleared) VALUES (2, 'EQP_OLD2', '2023-10-05 12:00:00', NULL);\nINSERT INTO alarm (id, eqp_name, time_raised, time_cleared) VALUES (3, 'EQP_NEW1', '2023-11-01 08:00:00', NULL);\nINSERT INTO alarm (id, eqp_name, time_raised, time_cleared) VALUES (4, 'EQP_CLEARED', '2023-10-15 09:00:00', '2023-10-15 10:00:00');"}
{"sql_prompt": "For alarms originating from the 'West Area', display the alarm ID and the corresponding site name and district.", "sql": "SELECT a.id AS alarm_id, s.\"SITE_NAME\", s.\"DISTRICT\" FROM alarm a JOIN sites s ON a.from_site = s.\"SITE_ID\" WHERE a.area = 'West Area';", "sql_context": "CREATE TABLE alarm (id bigint, area character varying(250), from_site character varying(250)); CREATE TABLE sites (\"SITE_ID\" text, \"SITE_NAME\" text, \"DISTRICT\" text);\nINSERT INTO alarm (id, area, from_site) VALUES (1, 'West Area', 'SITEW1');\nINSERT INTO alarm (id, area, from_site) VALUES (2, 'East Area', 'SITEE1');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"DISTRICT\") VALUES ('SITEW1', 'West Site Alpha', 'Western District');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"DISTRICT\") VALUES ('SITEE1', 'East Site Beta', 'Eastern District');"}
{"sql_prompt": "Find alarms where the additional text contains the word 'power'.", "sql": "SELECT id, eqp_name, additional_text FROM alarm WHERE additional_text ILIKE '%power%';", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), additional_text character varying(250));\nINSERT INTO alarm (id, eqp_name, additional_text) VALUES (1, 'Device 1', 'Primary power supply failure detected.');\nINSERT INTO alarm (id, eqp_name, additional_text) VALUES (2, 'Device 2', 'Interface G0/1 down.');\nINSERT INTO alarm (id, eqp_name, additional_text) VALUES (3, 'Device 3', 'Secondary POWER offline.');"}
{"sql_prompt": "Show all 'Critical' or 'Major' severity alarms from vendor 'Vendor Z' that were acknowledged after November 1st, 2023.", "sql": "SELECT id, severity, vendor, time_ack FROM alarm WHERE severity IN ('Critical', 'Major') AND vendor = 'Vendor Z' AND time_ack > '2023-11-01 00:00:00';", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), vendor character varying(250), time_ack timestamp without time zone);\nINSERT INTO alarm (id, severity, vendor, time_ack) VALUES (1, 'Critical', 'Vendor Z', '2023-11-02 10:00:00');\nINSERT INTO alarm (id, severity, vendor, time_ack) VALUES (2, 'Major', 'Vendor Z', '2023-10-31 11:00:00');\nINSERT INTO alarm (id, severity, vendor, time_ack) VALUES (3, 'Warning', 'Vendor Z', '2023-11-03 09:00:00');\nINSERT INTO alarm (id, severity, vendor, time_ack) VALUES (4, 'Critical', 'Vendor X', '2023-11-02 11:00:00');"}
{"sql_prompt": "List all alarms with critical severity.", "sql": "SELECT id, eqp_name, time_raised, severity FROM alarm WHERE severity = 'Critical';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_name, time_raised, severity) VALUES (101, 'RouterA', '2023-10-26 10:00:00', 'Critical');\nINSERT INTO alarm (id, eqp_name, time_raised, severity) VALUES (102, 'SwitchB', '2023-10-26 11:00:00', 'Major');"}
{"sql_prompt": "How many alarms are currently active (status is not 'Cleared')?", "sql": "SELECT COUNT(*) FROM alarm WHERE status <> 'Cleared';", "sql_context": "CREATE TABLE alarm (id bigint, status character varying(250), severity character varying(250));\nINSERT INTO alarm (id, status, severity) VALUES (201, 'Active', 'Major');\nINSERT INTO alarm (id, status, severity) VALUES (202, 'Cleared', 'Minor');\nINSERT INTO alarm (id, status, severity) VALUES (203, 'Active', 'Critical');"}
{"sql_prompt": "Show the details of incidents assigned to 'Network Team Alpha'.", "sql": "SELECT incident_number, short_description, created_date, status FROM incident WHERE assignment_group = 'Network Team Alpha';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), assignment_group character varying(100), short_description text, created_date timestamp without time zone, status integer);\nINSERT INTO incident (incident_number, assignment_group, short_description, created_date, status) VALUES ('INC00123', 'Network Team Alpha', 'Router outage', '2023-10-26 09:30:00', 2);\nINSERT INTO incident (incident_number, assignment_group, short_description, created_date, status) VALUES ('INC00124', 'Server Team', 'Disk space low', '2023-10-26 10:00:00', 1);"}
{"sql_prompt": "What are the distinct device types reported in the alarms?", "sql": "SELECT DISTINCT device_type FROM alarm;", "sql_context": "CREATE TABLE alarm (id bigint, device_type character varying(250));\nINSERT INTO alarm (id, device_type) VALUES (301, 'Router');\nINSERT INTO alarm (id, device_type) VALUES (302, 'Switch');\nINSERT INTO alarm (id, device_type) VALUES (303, 'Router');"}
{"sql_prompt": "Find all alarms raised between 2023-10-25 00:00:00 and 2023-10-25 23:59:59.", "sql": "SELECT id, eqp_name, severity, time_raised FROM alarm WHERE time_raised BETWEEN '2023-10-25 00:00:00' AND '2023-10-25 23:59:59';", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), severity character varying(250), time_raised timestamp without time zone);\nINSERT INTO alarm (id, eqp_name, severity, time_raised) VALUES (401, 'ServerX', 'Major', '2023-10-25 14:00:00');\nINSERT INTO alarm (id, eqp_name, severity, time_raised) VALUES (402, 'FirewallY', 'Minor', '2023-10-26 08:00:00');"}
{"sql_prompt": "List the top 5 most frequent probable alarm causes.", "sql": "SELECT base_probable_alarm_cause, COUNT(*) as frequency FROM alarm GROUP BY base_probable_alarm_cause ORDER BY frequency DESC LIMIT 5;", "sql_context": "CREATE TABLE alarm (id bigint, base_probable_alarm_cause character varying(250));\nINSERT INTO alarm (id, base_probable_alarm_cause) VALUES (501, 'Link Down');\nINSERT INTO alarm (id, base_probable_alarm_cause) VALUES (502, 'High CPU');\nINSERT INTO alarm (id, base_probable_alarm_cause) VALUES (503, 'Link Down');\nINSERT INTO alarm (id, base_probable_alarm_cause) VALUES (504, 'Power Supply Failure');\nINSERT INTO alarm (id, base_probable_alarm_cause) VALUES (505, 'Link Down');"}
{"sql_prompt": "Show the alarm details and their descriptions using the v_alarms view.", "sql": "SELECT alarm_id, severity, eqp_name, description FROM v_alarms LIMIT 10;", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), eqp_name character varying(250), from_site character varying(250), remote_eqp_name character varying(250), time_up timestamp without time zone, time_down timestamp without time zone, additional_text character varying(250), vendor character varying(250), raw_alarm_type character varying(250), device_name character varying(250), device_type character varying(250), tt_id character varying(250), ems_name character varying(250), time_cleared timestamp without time zone);\nCREATE TABLE alarm_label (id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250));\nCREATE VIEW v_alarms AS SELECT a.id AS alarm_id, a.severity, a.eqp_name, a.from_site, a.remote_eqp_name, a.time_up, a.time_down, l.slogan AS description, a.additional_text, a.vendor, a.raw_alarm_type AS alarm_type, a.device_name, a.device_type, l.domain_id AS domain, a.tt_id, a.ems_name, a.time_cleared AS ts_cleared FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO alarm (id, severity, eqp_name) VALUES (601, 'Major', 'EQP001');\nINSERT INTO alarm_label (id, slogan, domain_id) VALUES (601, 'Equipment Failure Detected', 'DomainA');\nINSERT INTO alarm (id, severity, eqp_name) VALUES (602, 'Minor', 'EQP002');\nINSERT INTO alarm_label (id, slogan, domain_id) VALUES (602, 'Performance Degradation', 'DomainB');"}
{"sql_prompt": "Which network elements are located in 'Building 7'?", "sql": "SELECT \"NODE_NAME\", \"MODEL_CODE\", \"VENDOR_NAME\" FROM network_elements WHERE \"LOCATION\" = 'Building 7';", "sql_context": "CREATE TABLE network_elements (index bigint, \"LOCATION\" text, \"NODE_NAME\" text, \"NETWORK_ELEMENT_ID\" bigint, \"NETWORK_ELEMENT_TYPE_CODE\" text, \"SERIAL_NUMBER\" bigint, \"ACTIVITY_STATUS_CODE\" text, \"MODEL_CODE\" text, \"VENDOR_NAME\" text, \"ELEMENT_CLASS_CODE\" text, \"ELEMENT_CLASS_DESC\" text, \"CARD_TYPE_ID\" double precision, \"SYSTEM_NAME\" text, \"LOCATION_SHORT_NAME\" text);\nINSERT INTO network_elements (\"LOCATION\", \"NODE_NAME\", \"MODEL_CODE\", \"VENDOR_NAME\") VALUES ('Building 7', 'RouterCore1', 'XYZ-1000', 'VendorX');\nINSERT INTO network_elements (\"LOCATION\", \"NODE_NAME\", \"MODEL_CODE\", \"VENDOR_NAME\") VALUES ('Building 5', 'SwitchEdge2', 'ABC-200', 'VendorY');"}
{"sql_prompt": "Find incidents that are currently marked as 'inefficiency'.", "sql": "SELECT incident_number, description, inefficiency_type FROM incident WHERE inefficiency = TRUE;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), description text, inefficiency boolean, inefficiency_type character varying(100));\nINSERT INTO incident (incident_number, description, inefficiency, inefficiency_type) VALUES ('INC00200', 'Slow response time', TRUE, 'Performance');\nINSERT INTO incident (incident_number, description, inefficiency, inefficiency_type) VALUES ('INC00201', 'System down', FALSE, NULL);"}
{"sql_prompt": "What is the average assignment count for incidents?", "sql": "SELECT AVG(assignment_count) FROM incident;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), assignment_count integer);\nINSERT INTO incident (incident_number, assignment_count) VALUES ('INC00301', 3);\nINSERT INTO incident (incident_number, assignment_count) VALUES ('INC00302', 1);\nINSERT INTO incident (incident_number, assignment_count) VALUES ('INC00303', 5);"}
{"sql_prompt": "List all sites located in the 'North' district.", "sql": "SELECT \"SITE_ID\", \"SITE_NAME\", \"ADDRESS\" FROM sites WHERE \"DISTRICT\" = 'North';", "sql_context": "CREATE TABLE sites (\"SITE_ID\" text, \"SITE_NAME\" text, \"LONGITUDE\" text, \"LATITUDE\" text, \"DISTRICT\" text, \"ADDRESS\" text, \"CITY_NAME\" text);\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"DISTRICT\", \"ADDRESS\", \"CITY_NAME\") VALUES ('NRT001', 'North Site 1', 'North', '123 North St', 'Northville');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"DISTRICT\", \"ADDRESS\", \"CITY_NAME\") VALUES ('SOU001', 'South Site 1', 'South', '456 South Ave', 'Southtown');"}
{"sql_prompt": "Show alarms acknowledged by user 'j.doe'.", "sql": "SELECT id, eqp_name, time_ack FROM alarm WHERE ack_user_id = 'j.doe';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), eqp_name character varying(250), time_ack timestamp without time zone);\nINSERT INTO alarm (id, ack_user_id, eqp_name, time_ack) VALUES (1101, 'j.doe', 'RouterWest', '2023-10-26 15:00:00');\nINSERT INTO alarm (id, ack_user_id, eqp_name, time_ack) VALUES (1102, 'a.smith', 'SwitchEast', '2023-10-26 15:05:00');"}
{"sql_prompt": "Count the number of alarms per vendor.", "sql": "SELECT vendor, COUNT(*) as alarm_count FROM alarm GROUP BY vendor;", "sql_context": "CREATE TABLE alarm (id bigint, vendor character varying(250));\nINSERT INTO alarm (id, vendor) VALUES (1201, 'VendorA');\nINSERT INTO alarm (id, vendor) VALUES (1202, 'VendorB');\nINSERT INTO alarm (id, vendor) VALUES (1203, 'VendorA');"}
{"sql_prompt": "Find equipment details for items with code 'EQP-ROUTER-CORE'.", "sql": "SELECT \"SHORT_NAME\", \"LOCATION\", \"DESCRIPTION\" FROM equipment_details WHERE \"CODE\" = 'EQP-ROUTER-CORE';", "sql_context": "CREATE TABLE equipment_details (index bigint, \"SHORT_NAME\" text, \"LOCATION\" text, \"TRAIL_NAME\" text, \"NUMERO_TD\" text, \"CODE\" text, \"DESCRIPTION\" text);\nINSERT INTO equipment_details (\"SHORT_NAME\", \"LOCATION\", \"CODE\", \"DESCRIPTION\") VALUES ('RTR-CORE-01', 'DataCenter1', 'EQP-ROUTER-CORE', 'Main Core Router');\nINSERT INTO equipment_details (\"SHORT_NAME\", \"LOCATION\", \"CODE\", \"DESCRIPTION\") VALUES ('SW-ACCESS-05', 'Floor 3', 'EQP-SWITCH-ACC', 'Access Switch F3');"}
{"sql_prompt": "List alarms that have an associated trouble ticket (TT ID is not null).", "sql": "SELECT id, eqp_name, severity, tt_id FROM alarm WHERE tt_id IS NOT NULL;", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), severity character varying(250), tt_id character varying(250));\nINSERT INTO alarm (id, eqp_name, severity, tt_id) VALUES (1401, 'ServerDB1', 'Critical', 'TT00567');\nINSERT INTO alarm (id, eqp_name, severity, tt_id) VALUES (1402, 'UPS-Main', 'Major', NULL);"}
{"sql_prompt": "Show the IP address for the network element 'CoreRouter-1'.", "sql": "SELECT T1.\"NODE_NAME\", T1.\"IP_ADDRESS\" FROM equipment_ip_address AS T1 WHERE T1.\"NODE_NAME\" = 'CoreRouter-1';", "sql_context": "CREATE TABLE equipment_ip_address (index bigint, \"NODE_NAME\" text, \"MODEL_CODE\" text, \"NETWORK_ELEMENT_ID\" bigint, \"CODE\" text, \"IP_ADDRESS\" text);\nINSERT INTO equipment_ip_address (\"NODE_NAME\", \"IP_ADDRESS\") VALUES ('CoreRouter-1', '10.0.0.1');\nINSERT INTO equipment_ip_address (\"NODE_NAME\", \"IP_ADDRESS\") VALUES ('AccessSwitch-5', '10.1.5.1');"}
{"sql_prompt": "Find the description of the alarm with ID 789.", "sql": "SELECT T2.slogan FROM alarm AS T1 INNER JOIN alarm_label AS T2 ON T1.id = T2.id WHERE T1.id = 789;", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250));\nCREATE TABLE alarm_label (id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250));\nINSERT INTO alarm (id, severity) VALUES (789, 'Warning');\nINSERT INTO alarm_label (id, slogan) VALUES (789, 'Temperature Threshold Exceeded');\nINSERT INTO alarm (id, severity) VALUES (790, 'Minor');\nINSERT INTO alarm_label (id, slogan) VALUES (790, 'Fan Speed Low');"}
{"sql_prompt": "List all outages that occurred at site 'SITE-ABC'.", "sql": "SELECT outage_id, ts_start_disruption, status FROM outage WHERE site_id = 'SITE-ABC';", "sql_context": "CREATE TABLE outage (outage_id integer, site_id character varying(50), ts_start_disruption timestamp without time zone, equipment_list character varying(100), status character varying(50), username character varying(100), latitude numeric(9,6), longitude numeric(9,6));\nINSERT INTO outage (outage_id, site_id, ts_start_disruption, status) VALUES (1, 'SITE-ABC', '2023-10-20 08:00:00', 'Resolved');\nINSERT INTO outage (outage_id, site_id, ts_start_disruption, status) VALUES (2, 'SITE-XYZ', '2023-10-21 10:00:00', 'Active');"}
{"sql_prompt": "Show the node name and serial number for network elements of type 'ROUTER'.", "sql": "SELECT \"NODE_NAME\", \"SERIAL_NUMBER\" FROM network_elements WHERE \"NETWORK_ELEMENT_TYPE_CODE\" = 'ROUTER';", "sql_context": "CREATE TABLE network_elements (index bigint, \"LOCATION\" text, \"NODE_NAME\" text, \"NETWORK_ELEMENT_ID\" bigint, \"NETWORK_ELEMENT_TYPE_CODE\" text, \"SERIAL_NUMBER\" bigint, \"ACTIVITY_STATUS_CODE\" text, \"MODEL_CODE\" text, \"VENDOR_NAME\" text, \"ELEMENT_CLASS_CODE\" text, \"ELEMENT_CLASS_DESC\" text, \"CARD_TYPE_ID\" double precision, \"SYSTEM_NAME\" text, \"LOCATION_SHORT_NAME\" text);\nINSERT INTO network_elements (\"NODE_NAME\", \"SERIAL_NUMBER\", \"NETWORK_ELEMENT_TYPE_CODE\") VALUES ('Router-NY-01', 123456789, 'ROUTER');\nINSERT INTO network_elements (\"NODE_NAME\", \"SERIAL_NUMBER\", \"NETWORK_ELEMENT_TYPE_CODE\") VALUES ('Switch-LA-02', 987654321, 'SWITCH');"}
{"sql_prompt": "Which incidents have been reopened?", "sql": "SELECT incident_number, short_description, reopen_count FROM incident WHERE reopen_count > 0;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), short_description text, reopen_count integer);\nINSERT INTO incident (incident_number, short_description, reopen_count) VALUES ('INC00500', 'Issue recurred', 1);\nINSERT INTO incident (incident_number, short_description, reopen_count) VALUES ('INC00501', 'Initial report', 0);"}
{"sql_prompt": "Find the alarm ID, equipment name, and trouble ticket ID for alarms that are currently active and have 'Critical' severity.", "sql": "SELECT id, eqp_name, tt_id FROM alarm WHERE status <> 'Cleared' AND severity = 'Critical';", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), severity character varying(250), status character varying(250), tt_id character varying(250));\nINSERT INTO alarm (id, eqp_name, severity, status, tt_id) VALUES (2001, 'CoreSwitch', 'Critical', 'Active', 'TT00888');\nINSERT INTO alarm (id, eqp_name, severity, status, tt_id) VALUES (2002, 'EdgeRouter', 'Critical', 'Cleared', 'TT00889');\nINSERT INTO alarm (id, eqp_name, severity, status, tt_id) VALUES (2003, 'Firewall', 'Major', 'Active', 'TT00890');"}
{"sql_prompt": "List the services with status 'Active'.", "sql": "SELECT \"SERVICE_ID\", \"SERVICE_NAME\", \"ACCESS_TYPE\" FROM service WHERE \"STATUS\" = 'Active';", "sql_context": "CREATE TABLE service (\"SERVICE_ID\" text, \"HIERARCHY_ID\" double precision, \"SERVICE_NAME\" text, \"STATUS\" text, \"A_NETWORK_ADDRESS\" text, \"B_NETWORK_ADDRESS\" text, \"V52_NUMBER\" double precision, \"LINK_ID\" double precision, \"NA_IMA_GROUP\" text, \"CIRCUIT_COUNT\" bigint, \"CHANNEL_COUNT\" double precision, \"MARKET_DESTINATION\" text, \"ACCESS_TYPE\" text, \"ASSOCIATED_SERVICE\" text, \"PROVISIONING_STATUS\" text, \"CLI\" text, \"DOMAIN\" bigint);\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"STATUS\", \"ACCESS_TYPE\") VALUES ('SVC001', 'VPN-ClientA', 'Active', 'Fiber');\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"STATUS\", \"ACCESS_TYPE\") VALUES ('SVC002', 'Internet-ClientB', 'Inactive', 'DSL');"}
{"sql_prompt": "What are the different types of cables used in cable segments?", "sql": "SELECT DISTINCT \"CABLE_TYPE\" FROM cablesegment;", "sql_context": "CREATE TABLE cablesegment (index bigint, \"CABLE_SEGMENT_ID\" text, \"CABLE_SEGMENT_NAME\" text, \"CABLE_TYPE\" text, \"STATUS\" double precision, \"SITE_CABINET_A_ID\" text, \"SITE_CABINET_B_ID\" text, \"SYNTHETIC_NAME\" text);\nINSERT INTO cablesegment (\"CABLE_SEGMENT_ID\", \"CABLE_TYPE\") VALUES ('SEG001', 'Fiber Optic');\nINSERT INTO cablesegment (\"CABLE_SEGMENT_ID\", \"CABLE_TYPE\") VALUES ('SEG002', 'Copper');\nINSERT INTO cablesegment (\"CABLE_SEGMENT_ID\", \"CABLE_TYPE\") VALUES ('SEG003', 'Fiber Optic');"}
{"sql_prompt": "Show the trail name and description for synthetic names starting with 'TRM-'.", "sql": "SELECT \"TRAIL_NAME\", \"TRAIL_DESCRIPTION\" FROM synthetic_name_trail WHERE \"TRANSMEDIA_NAME\" LIKE 'TRM-%';", "sql_context": "CREATE TABLE synthetic_name_trail (\"TRANSMEDIA_NAME\" text, \"TRATTA\" text, \"TRAIL_NAME\" text, \"ACTIVITY_STATUS_TRAIL\" text, \"TRAIL_DESCRIPTION\" text, \"FUNCTION_CODE\" text);\nINSERT INTO synthetic_name_trail (\"TRANSMEDIA_NAME\", \"TRAIL_NAME\", \"TRAIL_DESCRIPTION\") VALUES ('TRM-001', 'Trail Alpha', 'Primary Route');\nINSERT INTO synthetic_name_trail (\"TRANSMEDIA_NAME\", \"TRAIL_NAME\", \"TRAIL_DESCRIPTION\") VALUES ('OTH-002', 'Trail Beta', 'Secondary Route');"}
{"sql_prompt": "Find incidents created today.", "sql": "SELECT incident_number, short_description, affected_service FROM incident WHERE created_date >= date_trunc('day', CURRENT_TIMESTAMP) AND created_date < date_trunc('day', CURRENT_TIMESTAMP + interval '1 day');", "sql_context": "CREATE TABLE incident (incident_number character varying(50), affected_service character varying(100), short_description text, created_date timestamp without time zone);\nINSERT INTO incident (incident_number, short_description, affected_service, created_date) VALUES ('INC00998', 'Service unavailable', 'VPN', CURRENT_TIMESTAMP - interval '2 hours');\nINSERT INTO incident (incident_number, short_description, affected_service, created_date) VALUES ('INC00997', 'Login issue', 'Email', CURRENT_TIMESTAMP - interval '3 days');"}
{"sql_prompt": "List the distinct areas where alarms have occurred.", "sql": "SELECT DISTINCT area FROM alarm WHERE area IS NOT NULL;", "sql_context": "CREATE TABLE alarm (id bigint, area character varying(250));\nINSERT INTO alarm (id, area) VALUES (2501, 'NorthWest');\nINSERT INTO alarm (id, area) VALUES (2502, 'SouthEast');\nINSERT INTO alarm (id, area) VALUES (2503, 'NorthWest');\nINSERT INTO alarm (id, area) VALUES (2504, NULL);"}
{"sql_prompt": "Show the equipment name and comments for alarms with comments.", "sql": "SELECT eqp_name, comments FROM alarm WHERE comments IS NOT NULL AND comments <> '';", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), comments text);\nINSERT INTO alarm (id, eqp_name, comments) VALUES (2601, 'EQP-A1', 'Investigating flapping');\nINSERT INTO alarm (id, eqp_name, comments) VALUES (2602, 'EQP-B2', NULL);\nINSERT INTO alarm (id, eqp_name, comments) VALUES (2603, 'EQP-C3', '');"}
{"sql_prompt": "Find the incident number and description for incidents related to 'Configuration Item XYZ'.", "sql": "SELECT incident_number, description FROM incident WHERE configuration_item = 'Configuration Item XYZ';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), configuration_item character varying(100), description text);\nINSERT INTO incident (incident_number, configuration_item, description) VALUES ('INC11223', 'Configuration Item XYZ', 'Failed to apply update');\nINSERT INTO incident (incident_number, configuration_item, description) VALUES ('INC11224', 'Configuration Item ABC', 'Service stopped responding');"}
{"sql_prompt": "Show the latest 5 alarms based on the time they were raised.", "sql": "SELECT id, eqp_name, severity, time_raised FROM alarm ORDER BY time_raised DESC LIMIT 5;", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), severity character varying(250), time_raised timestamp without time zone);\nINSERT INTO alarm (id, eqp_name, severity, time_raised) VALUES (2801, 'DeviceA', 'Major', '2023-10-27 10:00:00');\nINSERT INTO alarm (id, eqp_name, severity, time_raised) VALUES (2802, 'DeviceB', 'Critical', '2023-10-27 11:00:00');\nINSERT INTO alarm (id, eqp_name, severity, time_raised) VALUES (2803, 'DeviceC', 'Minor', '2023-10-27 09:00:00');"}
{"sql_prompt": "Count how many distinct sites exist in the sites table.", "sql": "SELECT COUNT(DISTINCT \"SITE_ID\") FROM sites;", "sql_context": "CREATE TABLE sites (\"SITE_ID\" text, \"SITE_NAME\" text, \"CITY_NAME\" text);\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"CITY_NAME\") VALUES ('SITE01', 'Site Alpha', 'CityA');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"CITY_NAME\") VALUES ('SITE02', 'Site Beta', 'CityB');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"CITY_NAME\") VALUES ('SITE01', 'Site Alpha Prime', 'CityA');"}
{"sql_prompt": "Show the 10 most recent critical alarms.", "sql": "SELECT alarm_primary_key, eqp_name, time_raised, severity FROM alarm WHERE severity = 'Critical' ORDER BY time_raised DESC LIMIT 10;", "sql_context": "CREATE TABLE alarm ( alarm_primary_key character varying(250), eqp_name character varying(250), time_raised timestamp without time zone, severity character varying(250) );\nINSERT INTO alarm (alarm_primary_key, eqp_name, time_raised, severity) VALUES ('ALM1001', 'EQP_A', '2023-10-26 10:00:00', 'Critical');\nINSERT INTO alarm (alarm_primary_key, eqp_name, time_raised, severity) VALUES ('ALM1002', 'EQP_B', '2023-10-26 11:00:00', 'Critical');"}
{"sql_prompt": "List all unique device types present in the alarms table.", "sql": "SELECT DISTINCT device_type FROM alarm WHERE device_type IS NOT NULL;", "sql_context": "CREATE TABLE alarm ( device_type character varying(250) );\nINSERT INTO alarm (device_type) VALUES ('Router');\nINSERT INTO alarm (device_type) VALUES ('Switch');\nINSERT INTO alarm (device_type) VALUES ('Router');"}
{"sql_prompt": "Count the number of alarms for each severity level.", "sql": "SELECT severity, COUNT(*) AS alarm_count FROM alarm GROUP BY severity ORDER BY alarm_count DESC;", "sql_context": "CREATE TABLE alarm ( id bigint, severity character varying(250) );\nINSERT INTO alarm (id, severity) VALUES (1, 'Critical');\nINSERT INTO alarm (id, severity) VALUES (2, 'Major');\nINSERT INTO alarm (id, severity) VALUES (3, 'Critical');"}
{"sql_prompt": "Find alarms related to 'EQP_XYZ' that are still active (not cleared).", "sql": "SELECT id, alarm_primary_key, time_raised, severity FROM alarm WHERE eqp_name = 'EQP_XYZ' AND time_cleared IS NULL;", "sql_context": "CREATE TABLE alarm ( id bigint, alarm_primary_key character varying(250), time_raised timestamp without time zone, severity character varying(250), eqp_name character varying(250), time_cleared timestamp without time zone );\nINSERT INTO alarm (id, alarm_primary_key, time_raised, severity, eqp_name, time_cleared) VALUES (5, 'ALM005', '2023-10-25 08:00:00', 'Major', 'EQP_XYZ', NULL);\nINSERT INTO alarm (id, alarm_primary_key, time_raised, severity, eqp_name, time_cleared) VALUES (6, 'ALM006', '2023-10-24 09:00:00', 'Critical', 'EQP_XYZ', '2023-10-24 11:00:00');"}
{"sql_prompt": "Show the description and severity for alarms associated with trouble ticket 'TT12345'.", "sql": "SELECT description, severity FROM v_alarms WHERE tt_id = 'TT12345';", "sql_context": "CREATE TABLE alarm ( id bigint, severity character varying(250), tt_id character varying(250) );\nCREATE TABLE alarm_label ( id bigint, slogan character varying(250) );\nCREATE VIEW v_alarms AS SELECT a.id AS alarm_id, a.severity, l.slogan AS description, a.tt_id FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO alarm (id, severity, tt_id) VALUES (10, 'Major', 'TT12345');\nINSERT INTO alarm_label (id, slogan) VALUES (10, 'Link Down');\nINSERT INTO alarm (id, severity, tt_id) VALUES (11, 'Minor', 'TT67890');\nINSERT INTO alarm_label (id, slogan) VALUES (11, 'High Temperature');"}
{"sql_prompt": "List all incidents assigned to the 'Network Operations' group that were created in the last 7 days.", "sql": "SELECT incident_number, short_description, created_date FROM incident WHERE assignment_group = 'Network Operations' AND created_date >= NOW() - interval '7 days';", "sql_context": "CREATE TABLE incident ( incident_number character varying(50), short_description text, created_date timestamp without time zone, assignment_group character varying(100) );\nINSERT INTO incident (incident_number, short_description, created_date, assignment_group) VALUES ('INC001', 'Router down', NOW() - interval '2 days', 'Network Operations');\nINSERT INTO incident (incident_number, short_description, created_date, assignment_group) VALUES ('INC002', 'Firewall issue', NOW() - interval '10 days', 'Network Operations');"}
{"sql_prompt": "What is the average assignment count for incidents categorized as 'Hardware'?", "sql": "SELECT AVG(assignment_count) FROM incident WHERE category = 'Hardware';", "sql_context": "CREATE TABLE incident ( incident_number character varying(50), category character varying(100), assignment_count integer );\nINSERT INTO incident (incident_number, category, assignment_count) VALUES ('INC101', 'Hardware', 3);\nINSERT INTO incident (incident_number, category, assignment_count) VALUES ('INC102', 'Hardware', 5);"}
{"sql_prompt": "Show the network elements located in 'Site A', including their type and vendor.", "sql": "SELECT \"NODE_NAME\", \"NETWORK_ELEMENT_TYPE_CODE\", \"VENDOR_NAME\" FROM network_elements WHERE \"LOCATION\" = 'Site A';", "sql_context": "CREATE TABLE network_elements ( index bigint, \"LOCATION\" text, \"NODE_NAME\" text, \"NETWORK_ELEMENT_TYPE_CODE\" text, \"VENDOR_NAME\" text );\nINSERT INTO network_elements (index, \"LOCATION\", \"NODE_NAME\", \"NETWORK_ELEMENT_TYPE_CODE\", \"VENDOR_NAME\") VALUES (1, 'Site A', 'Router1-A', 'ROUTER', 'VendorX');\nINSERT INTO network_elements (index, \"LOCATION\", \"NODE_NAME\", \"NETWORK_ELEMENT_TYPE_CODE\", \"VENDOR_NAME\") VALUES (2, 'Site B', 'Switch1-B', 'SWITCH', 'VendorY');"}
{"sql_prompt": "Find the IP address for the network element with NODE_NAME 'CoreRouter-1'.", "sql": "SELECT \"IP_ADDRESS\" FROM equipment_ip_address WHERE \"NODE_NAME\" = 'CoreRouter-1';", "sql_context": "CREATE TABLE equipment_ip_address ( index bigint, \"NODE_NAME\" text, \"IP_ADDRESS\" text );\nINSERT INTO equipment_ip_address (index, \"NODE_NAME\", \"IP_ADDRESS\") VALUES (1, 'CoreRouter-1', '10.0.0.1');\nINSERT INTO equipment_ip_address (index, \"NODE_NAME\", \"IP_ADDRESS\") VALUES (2, 'EdgeRouter-2', '192.168.1.1');"}
{"sql_prompt": "List all cable systems of type 'Submarine'.", "sql": "SELECT \"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\" FROM cable_system WHERE \"CABLE_TYPE\" = 'Submarine';", "sql_context": "CREATE TABLE cable_system ( index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SYSTEM_NAME\" text, \"CABLE_TYPE\" text );\nINSERT INTO cable_system (index, \"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\") VALUES (1, 'CS001', 'Atlantic Link', 'Submarine');\nINSERT INTO cable_system (index, \"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\") VALUES (2, 'CS002', 'Metro Fiber Ring', 'Terrestrial');"}
{"sql_prompt": "Show sites located in the 'Lombardia' region.", "sql": "SELECT \"SITE_ID\", \"SITE_NAME\", \"ADDRESS\" FROM sites WHERE \"REGIONE\" = 'Lombardia';", "sql_context": "CREATE TABLE sites ( \"SITE_ID\" text, \"SITE_NAME\" text, \"ADDRESS\" text, \"REGIONE\" text );\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"ADDRESS\", \"REGIONE\") VALUES ('SIT001', 'Milano Centrale', 'Piazza Duca d Aosta, 1', 'Lombardia');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"ADDRESS\", \"REGIONE\") VALUES ('SIT002', 'Roma Termini', 'Piazza dei Cinquecento', 'Lazio');"}
{"sql_prompt": "Find the alarm details (severity, description) for equipment 'NE40E' which originated from 'EMS-Central'.", "sql": "SELECT severity, description FROM v_alarms WHERE eqp_name = 'NE40E' AND ems_name = 'EMS-Central';", "sql_context": "CREATE TABLE alarm ( id bigint, severity character varying(250), eqp_name character varying(250), ems_name character varying(250) );\nCREATE TABLE alarm_label ( id bigint, slogan character varying(250) );\nCREATE VIEW v_alarms AS SELECT a.id AS alarm_id, a.severity, a.eqp_name, a.ems_name, l.slogan AS description FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO alarm (id, severity, eqp_name, ems_name) VALUES (20, 'Critical', 'NE40E', 'EMS-Central');\nINSERT INTO alarm_label (id, slogan) VALUES (20, 'Board Failure');\nINSERT INTO alarm (id, severity, eqp_name, ems_name) VALUES (21, 'Major', 'NE40E', 'EMS-West');\nINSERT INTO alarm_label (id, slogan) VALUES (21, 'Fan Speed Low');"}
{"sql_prompt": "Which alarms have comments added by 'user_admin'?", "sql": "SELECT alarm_primary_key, comments, time_comment FROM alarm WHERE comment_user_id = 'user_admin';", "sql_context": "CREATE TABLE alarm ( alarm_primary_key character varying(250), comments text, time_comment timestamp without time zone, comment_user_id character varying(250) );\nINSERT INTO alarm (alarm_primary_key, comments, time_comment, comment_user_id) VALUES ('ALM-X1', 'Checked logs, issue persists.', '2023-10-26 14:30:00', 'user_admin');\nINSERT INTO alarm (alarm_primary_key, comments, time_comment, comment_user_id) VALUES ('ALM-Y2', 'Monitoring performance.', '2023-10-26 15:00:00', 'user_ops');"}
{"sql_prompt": "List the top 5 vendors with the most active alarms (not cleared).", "sql": "SELECT vendor, COUNT(*) as active_alarm_count FROM alarm WHERE time_cleared IS NULL AND vendor IS NOT NULL GROUP BY vendor ORDER BY active_alarm_count DESC LIMIT 5;", "sql_context": "CREATE TABLE alarm ( id bigint, vendor character varying(250), time_cleared timestamp without time zone );\nINSERT INTO alarm (id, vendor, time_cleared) VALUES (1, 'VendorA', NULL);\nINSERT INTO alarm (id, vendor, time_cleared) VALUES (2, 'VendorB', NULL);\nINSERT INTO alarm (id, vendor, time_cleared) VALUES (3, 'VendorA', NULL);\nINSERT INTO alarm (id, vendor, time_cleared) VALUES (4, 'VendorA', '2023-10-25 10:00:00');\nINSERT INTO alarm (id, vendor, time_cleared) VALUES (5, 'VendorC', NULL);"}
{"sql_prompt": "Show the PE Name and Status for logical link ID 12345.", "sql": "SELECT \"PE_NAME\", \"PE_STATUS\" FROM mobile_pe WHERE \"LOGICAL_LINK_ID\" = 12345;", "sql_context": "CREATE TABLE mobile_pe ( index bigint, \"LOGICAL_LINK_ID\" double precision, \"PE_NAME\" text, \"PE_STATUS\" text );\nINSERT INTO mobile_pe (index, \"LOGICAL_LINK_ID\", \"PE_NAME\", \"PE_STATUS\") VALUES (1, 12345, 'PE-Milan-1', 'Active');\nINSERT INTO mobile_pe (index, \"LOGICAL_LINK_ID\", \"PE_NAME\", \"PE_STATUS\") VALUES (2, 67890, 'PE-Rome-2', 'Maintenance');"}
{"sql_prompt": "What services have status 'Inactive'?", "sql": "SELECT \"SERVICE_ID\", \"SERVICE_NAME\" FROM service WHERE \"STATUS\" = 'Inactive';", "sql_context": "CREATE TABLE service ( \"SERVICE_ID\" text, \"SERVICE_NAME\" text, \"STATUS\" text );\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"STATUS\") VALUES ('SVC001', 'VPN Gold', 'Active');\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"STATUS\") VALUES ('SVC002', 'Internet Basic', 'Inactive');"}
{"sql_prompt": "Find outages reported by 'operator_jane' that are still open.", "sql": "SELECT outage_id, site_id, ts_start_disruption FROM outage WHERE username = 'operator_jane' AND status = 'Open';", "sql_context": "CREATE TABLE outage ( outage_id integer, site_id character varying(50), ts_start_disruption timestamp without time zone, status character varying(50), username character varying(100) );\nINSERT INTO outage (outage_id, site_id, ts_start_disruption, status, username) VALUES (101, 'SITE_A', '2023-10-26 09:00:00', 'Open', 'operator_jane');\nINSERT INTO outage (outage_id, site_id, ts_start_disruption, status, username) VALUES (102, 'SITE_B', '2023-10-25 11:00:00', 'Closed', 'operator_jane');"}
{"sql_prompt": "Show the equipment name and corresponding location for alarms with severity 'Major' or 'Critical' raised in the 'West' district.", "sql": "SELECT T1.eqp_name, T2.\"LOCATION\" FROM alarm AS T1 INNER JOIN network_elements AS T2 ON T1.eqp_name = T2.\"NODE_NAME\" WHERE T1.severity IN ('Major', 'Critical') AND T1.district = 'West';", "sql_context": "CREATE TABLE alarm ( id bigint, eqp_name character varying(250), severity character varying(250), district character varying(250) );\nCREATE TABLE network_elements ( index bigint, \"NODE_NAME\" text, \"LOCATION\" text );\nINSERT INTO alarm (id, eqp_name, severity, district) VALUES (30, 'RouterWest1', 'Major', 'West');\nINSERT INTO alarm (id, eqp_name, severity, district) VALUES (31, 'SwitchEast2', 'Critical', 'East');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"LOCATION\") VALUES (50, 'RouterWest1', 'West Datacenter');\nINSERT INTO network_elements (index, \"NODE_NAME\", \"LOCATION\") VALUES (51, 'SwitchEast2', 'East Office');"}
{"sql_prompt": "List the incidents that have a high impact (impact level 1) and high urgency (urgency level 1).", "sql": "SELECT incident_number, short_description, affected_service FROM incident WHERE impact = 1 AND urgency = 1;", "sql_context": "CREATE TABLE incident ( incident_number character varying(50), short_description text, affected_service character varying(100), impact integer, urgency integer );\nINSERT INTO incident (incident_number, short_description, affected_service, impact, urgency) VALUES ('INC201', 'Core network outage', 'All Services', 1, 1);\nINSERT INTO incident (incident_number, short_description, affected_service, impact, urgency) VALUES ('INC202', 'Email delay', 'Email Service', 3, 2);"}
{"sql_prompt": "Which equipment models (MODEL_CODE) are associated with IP address '10.20.30.40'?", "sql": "SELECT DISTINCT T1.\"MODEL_CODE\" FROM network_elements AS T1 JOIN equipment_ip_address AS T2 ON T1.\"NETWORK_ELEMENT_ID\" = T2.\"NETWORK_ELEMENT_ID\" WHERE T2.\"IP_ADDRESS\" = '10.20.30.40';", "sql_context": "CREATE TABLE network_elements ( index bigint, \"NETWORK_ELEMENT_ID\" bigint, \"MODEL_CODE\" text );\nCREATE TABLE equipment_ip_address ( index bigint, \"NETWORK_ELEMENT_ID\" bigint, \"IP_ADDRESS\" text );\nINSERT INTO network_elements (index, \"NETWORK_ELEMENT_ID\", \"MODEL_CODE\") VALUES (10, 1001, 'ModelX');\nINSERT INTO network_elements (index, \"NETWORK_ELEMENT_ID\", \"MODEL_CODE\") VALUES (11, 1002, 'ModelY');\nINSERT INTO equipment_ip_address (index, \"NETWORK_ELEMENT_ID\", \"IP_ADDRESS\") VALUES (20, 1001, '10.20.30.40');\nINSERT INTO equipment_ip_address (index, \"NETWORK_ELEMENT_ID\", \"IP_ADDRESS\") VALUES (21, 1002, '10.20.30.50');"}
{"sql_prompt": "Show the path ethernet name and status for VLAN ID 500.", "sql": "SELECT \"NAME\", \"PATH_ETHERNET_STATUS\" FROM path_ethernet WHERE \"VLAN_ID\" = 500;", "sql_context": "CREATE TABLE path_ethernet ( index bigint, \"VLAN_ID\" bigint, \"NAME\" text, \"PATH_ETHERNET_STATUS\" text );\nINSERT INTO path_ethernet (index, \"VLAN_ID\", \"NAME\", \"PATH_ETHERNET_STATUS\") VALUES (1, 500, 'Path-CustomerA-VLAN500', 'UP');\nINSERT INTO path_ethernet (index, \"VLAN_ID\", \"NAME\", \"PATH_ETHERNET_STATUS\") VALUES (2, 600, 'Path-Backbone-VLAN600', 'DOWN');"}
{"sql_prompt": "Find the cable segments associated with cable system 'CS_METRO_RING'.", "sql": "SELECT T1.\"CABLE_SEGMENT_ID\", T1.\"CABLE_SEGMENT_NAME\", T1.\"STATUS\" FROM cablesegment AS T1 JOIN cl_clsegm_rel AS T2 ON T1.\"CABLE_SEGMENT_ID\" = T2.\"CABLE_SEGMENT_ID\" JOIN cable_system AS T3 ON T2.\"CABLE_SYSTEM_ID\" = T3.\"CABLE_SYSTEM_ID\" WHERE T3.\"CABLE_SYSTEM_NAME\" = 'CS_METRO_RING';", "sql_context": "CREATE TABLE cable_system ( index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SYSTEM_NAME\" text );\nCREATE TABLE cablesegment ( index bigint, \"CABLE_SEGMENT_ID\" text, \"CABLE_SEGMENT_NAME\" text, \"STATUS\" double precision );\nCREATE TABLE cl_clsegm_rel ( index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SEGMENT_ID\" text );\nINSERT INTO cable_system (index, \"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\") VALUES (1, 'CS01', 'CS_METRO_RING');\nINSERT INTO cablesegment (index, \"CABLE_SEGMENT_ID\", \"CABLE_SEGMENT_NAME\", \"STATUS\") VALUES (10, 'SEG01A', 'Segment A', 1.0);\nINSERT INTO cablesegment (index, \"CABLE_SEGMENT_ID\", \"CABLE_SEGMENT_NAME\", \"STATUS\") VALUES (11, 'SEG01B', 'Segment B', 1.0);\nINSERT INTO cl_clsegm_rel (index, \"CABLE_SYSTEM_ID\", \"CABLE_SEGMENT_ID\") VALUES (100, 'CS01', 'SEG01A');\nINSERT INTO cl_clsegm_rel (index, \"CABLE_SYSTEM_ID\", \"CABLE_SEGMENT_ID\") VALUES (101, 'CS01', 'SEG01B');"}
{"sql_prompt": "List alarms acknowledged by users whose ID starts with 'ops_'.", "sql": "SELECT alarm_primary_key, ack_user_id, time_ack FROM alarm WHERE ack_user_id LIKE 'ops_%' ORDER BY time_ack DESC;", "sql_context": "CREATE TABLE alarm ( alarm_primary_key character varying(250), ack_user_id character varying(250), time_ack timestamp without time zone );\nINSERT INTO alarm (alarm_primary_key, ack_user_id, time_ack) VALUES ('ALM-Z1', 'ops_team_lead', '2023-10-26 10:05:00');\nINSERT INTO alarm (alarm_primary_key, ack_user_id, time_ack) VALUES ('ALM-Z2', 'support_agent1', '2023-10-26 11:15:00');"}
{"sql_prompt": "Show the count of distinct equipment names (eqp_name) for each vendor in the alarm table.", "sql": "SELECT vendor, COUNT(DISTINCT eqp_name) as distinct_equipment_count FROM alarm WHERE vendor IS NOT NULL AND eqp_name IS NOT NULL GROUP BY vendor;", "sql_context": "CREATE TABLE alarm ( id bigint, vendor character varying(250), eqp_name character varying(250) );\nINSERT INTO alarm (id, vendor, eqp_name) VALUES (1, 'VendorX', 'EQP1');\nINSERT INTO alarm (id, vendor, eqp_name) VALUES (2, 'VendorX', 'EQP1');\nINSERT INTO alarm (id, vendor, eqp_name) VALUES (3, 'VendorX', 'EQP2');\nINSERT INTO alarm (id, vendor, eqp_name) VALUES (4, 'VendorY', 'EQP3');"}
{"sql_prompt": "Get the equipment name, additional text, and proposed repair actions for alarms where the base probable cause is 'Power Failure'.", "sql": "SELECT eqp_name, additional_text, proposed_repair_actions FROM alarm WHERE base_probable_alarm_cause = 'Power Failure';", "sql_context": "CREATE TABLE alarm ( id bigint, eqp_name character varying(250), additional_text character varying(250), proposed_repair_actions text, base_probable_alarm_cause character varying(250) );\nINSERT INTO alarm (id, eqp_name, additional_text, proposed_repair_actions, base_probable_alarm_cause) VALUES (40, 'SiteRouterA', 'UPS Battery low', 'Check site power source, replace UPS battery if needed.', 'Power Failure');\nINSERT INTO alarm (id, eqp_name, additional_text, proposed_repair_actions, base_probable_alarm_cause) VALUES (41, 'CoreSwitchB', 'PSU 1 Failed', 'Replace Power Supply Unit 1.', 'Equipment Malfunction');"}
{"sql_prompt": "Find the card type and status for cards located in 'Shelf 3' of node 'CoreSwitch-1'.", "sql": "SELECT \"CARD_TYPE\", \"CARD_STATUS_CODE\" FROM rmm_equipment_details WHERE \"NODE_NAME\" = 'CoreSwitch-1' AND \"SHELF_NAME\" = 'Shelf 3';", "sql_context": "CREATE TABLE rmm_equipment_details ( \"NODE_NAME\" text, \"SHELF_NAME\" text, \"CARD_TYPE\" text, \"CARD_STATUS_CODE\" text );\nINSERT INTO rmm_equipment_details (\"NODE_NAME\", \"SHELF_NAME\", \"CARD_TYPE\", \"CARD_STATUS_CODE\") VALUES ('CoreSwitch-1', 'Shelf 3', 'Line Card 10G', 'Active');\nINSERT INTO rmm_equipment_details (\"NODE_NAME\", \"SHELF_NAME\", \"CARD_TYPE\", \"CARD_STATUS_CODE\") VALUES ('CoreSwitch-1', 'Shelf 1', 'Mgmt Card', 'Active');"}
{"sql_prompt": "What is the description and location of leased line 'LL-12345'?", "sql": "SELECT \"DESCRIPTION\", \"LOCATION\" FROM leased_lines WHERE \"SHORT_NAME\" = 'LL-12345';", "sql_context": "CREATE TABLE leased_lines ( index bigint, \"SHORT_NAME\" text, \"LOCATION\" text, \"DESCRIPTION\" text );\nINSERT INTO leased_lines (index, \"SHORT_NAME\", \"LOCATION\", \"DESCRIPTION\") VALUES (1, 'LL-12345', 'London Office', 'Primary Leased Line to DC');\nINSERT INTO leased_lines (index, \"SHORT_NAME\", \"LOCATION\", \"DESCRIPTION\") VALUES (2, 'LL-67890', 'Paris Branch', 'Backup Circuit');"}
{"sql_prompt": "Show incidents closed within the last 24 hours.", "sql": "SELECT incident_number, short_description, resolved FROM incident WHERE closed >= NOW() - interval '24 hours';", "sql_context": "CREATE TABLE incident ( incident_number character varying(50), short_description text, resolved timestamp without time zone, closed timestamp without time zone );\nINSERT INTO incident (incident_number, short_description, resolved, closed) VALUES ('INC501', 'Minor config change', '2023-10-26 10:00:00', NOW() - interval '5 hours');\nINSERT INTO incident (incident_number, short_description, resolved, closed) VALUES ('INC502', 'User access issue', '2023-10-24 15:00:00', '2023-10-24 16:00:00');"}
{"sql_prompt": "List distinct 'area' values associated with alarms that have a 'planned_work' identifier.", "sql": "SELECT DISTINCT area FROM alarm WHERE planned_work IS NOT NULL;", "sql_context": "CREATE TABLE alarm ( id bigint, area character varying(250), planned_work character varying(250) );\nINSERT INTO alarm (id, area, planned_work) VALUES (1, 'North', 'PW123');\nINSERT INTO alarm (id, area, planned_work) VALUES (2, 'South', NULL);\nINSERT INTO alarm (id, area, planned_work) VALUES (3, 'North', 'PW456');"}
{"sql_prompt": "Find the name and trail description for synthetic name 'SYNTH-001'.", "sql": "SELECT \"TRAIL_NAME\", \"TRAIL_DESCRIPTION\" FROM synthetic_name_trail WHERE \"TRANSMEDIA_NAME\" = 'SYNTH-001';", "sql_context": "CREATE TABLE synthetic_name_trail ( \"TRANSMEDIA_NAME\" text, \"TRAIL_NAME\" text, \"TRAIL_DESCRIPTION\" text );\nINSERT INTO synthetic_name_trail (\"TRANSMEDIA_NAME\", \"TRAIL_NAME\", \"TRAIL_DESCRIPTION\") VALUES ('SYNTH-001', 'FiberPath-A', 'Main fiber route section 1');\nINSERT INTO synthetic_name_trail (\"TRANSMEDIA_NAME\", \"TRAIL_NAME\", \"TRAIL_DESCRIPTION\") VALUES ('SYNTH-002', 'MicrowaveLink-B', 'Backup microwave link zone 2');"}
{"sql_prompt": "Show the IDs and severities of all critical alarms.", "sql": "SELECT id, severity FROM alarm WHERE severity = 'Critical';", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250));\nINSERT INTO alarm (id, severity) VALUES (101, 'Critical');\nINSERT INTO alarm (id, severity) VALUES (102, 'Major');\nINSERT INTO alarm (id, severity) VALUES (103, 'Critical');"}
{"sql_prompt": "List the incident numbers and descriptions for incidents assigned to the 'Network Team'.", "sql": "SELECT incident_number, description FROM incident WHERE assignment_group = 'Network Team';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), description text, assignment_group character varying(100));\nINSERT INTO incident (incident_number, description, assignment_group) VALUES ('INC001', 'Router down', 'Network Team');\nINSERT INTO incident (incident_number, description, assignment_group) VALUES ('INC002', 'Application issue', 'App Support');\nINSERT INTO incident (incident_number, description, assignment_group) VALUES ('INC003', 'Switch port flapping', 'Network Team');"}
{"sql_prompt": "How many alarms are there for each severity level?", "sql": "SELECT severity, COUNT(*) FROM alarm GROUP BY severity;", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250));\nINSERT INTO alarm (id, severity) VALUES (101, 'Critical');\nINSERT INTO alarm (id, severity) VALUES (102, 'Major');\nINSERT INTO alarm (id, severity) VALUES (103, 'Critical');\nINSERT INTO alarm (id, severity) VALUES (104, 'Minor');\nINSERT INTO alarm (id, severity) VALUES (105, 'Major');"}
{"sql_prompt": "Get the alarm ID, severity, equipment name, and description (slogan) for all alarms using the alarm view.", "sql": "SELECT alarm_id, severity, eqp_name, description FROM v_alarms;", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), eqp_name character varying(250));\nCREATE TABLE alarm_label (id bigint, slogan character varying(250), domain_id character varying(250));\nCREATE VIEW v_alarms AS SELECT a.id AS alarm_id, a.severity, a.eqp_name, l.slogan AS description, l.domain_id AS domain FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO alarm (id, severity, eqp_name) VALUES (201, 'Major', 'Router-A');\nINSERT INTO alarm_label (id, slogan, domain_id) VALUES (201, 'Link Down', 'Network');\nINSERT INTO alarm (id, severity, eqp_name) VALUES (202, 'Warning', 'Server-X');\nINSERT INTO alarm_label (id, slogan, domain_id) VALUES (202, 'High CPU', 'Compute');"}
{"sql_prompt": "Show alarms raised after January 1st, 2024.", "sql": "SELECT id, eqp_name, time_raised FROM alarm WHERE time_raised > '2024-01-01 00:00:00';", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), time_raised timestamp without time zone);\nINSERT INTO alarm (id, eqp_name, time_raised) VALUES (301, 'Device1', '2023-12-31 10:00:00');\nINSERT INTO alarm (id, eqp_name, time_raised) VALUES (302, 'Device2', '2024-01-02 11:30:00');\nINSERT INTO alarm (id, eqp_name, time_raised) VALUES (303, 'Device3', '2024-01-05 09:15:00');"}
{"sql_prompt": "Find the IP addresses for all network elements with the model code 'ASR9K'.", "sql": "SELECT T1.\"NODE_NAME\", T1.\"IP_ADDRESS\" FROM equipment_ip_address AS T1 INNER JOIN network_elements AS T2 ON T1.\"NETWORK_ELEMENT_ID\" = T2.\"NETWORK_ELEMENT_ID\" WHERE T2.\"MODEL_CODE\" = 'ASR9K';", "sql_context": "CREATE TABLE equipment_ip_address (index bigint, \"NODE_NAME\" text, \"NETWORK_ELEMENT_ID\" bigint, \"IP_ADDRESS\" text);\nCREATE TABLE network_elements (index bigint, \"NETWORK_ELEMENT_ID\" bigint, \"MODEL_CODE\" text, \"NODE_NAME\" text);\nINSERT INTO equipment_ip_address (index, \"NODE_NAME\", \"NETWORK_ELEMENT_ID\", \"IP_ADDRESS\") VALUES (1, 'Router1-Core', 1001, '10.0.0.1');\nINSERT INTO network_elements (index, \"NETWORK_ELEMENT_ID\", \"MODEL_CODE\", \"NODE_NAME\") VALUES (1, 1001, 'ASR9K', 'Router1-Core');\nINSERT INTO equipment_ip_address (index, \"NODE_NAME\", \"NETWORK_ELEMENT_ID\", \"IP_ADDRESS\") VALUES (2, 'Router2-Edge', 1002, '10.0.1.1');\nINSERT INTO network_elements (index, \"NETWORK_ELEMENT_ID\", \"MODEL_CODE\", \"NODE_NAME\") VALUES (2, 1002, 'NCS5K', 'Router2-Edge');\nINSERT INTO equipment_ip_address (index, \"NODE_NAME\", \"NETWORK_ELEMENT_ID\", \"IP_ADDRESS\") VALUES (3, 'Router3-Core', 1003, '10.0.0.2');\nINSERT INTO network_elements (index, \"NETWORK_ELEMENT_ID\", \"MODEL_CODE\", \"NODE_NAME\") VALUES (3, 1003, 'ASR9K', 'Router3-Core');"}
{"sql_prompt": "What is the count of incidents for each category?", "sql": "SELECT category, COUNT(*) FROM incident GROUP BY category;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), category character varying(100));\nINSERT INTO incident (incident_number, category) VALUES ('INC001', 'Network');\nINSERT INTO incident (incident_number, category) VALUES ('INC002', 'Software');\nINSERT INTO incident (incident_number, category) VALUES ('INC003', 'Network');\nINSERT INTO incident (incident_number, category) VALUES ('INC004', 'Hardware');\nINSERT INTO incident (incident_number, category) VALUES ('INC005', 'Network');"}
{"sql_prompt": "Find critical alarms in the 'West' district that were acknowledged by 'jdoe'.", "sql": "SELECT id, eqp_name, time_ack FROM alarm WHERE severity = 'Critical' AND district = 'West' AND ack_user_id = 'jdoe';", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), district character varying(250), ack_user_id character varying(250), eqp_name character varying(250), time_ack timestamp without time zone);\nINSERT INTO alarm (id, severity, district, ack_user_id, eqp_name, time_ack) VALUES (401, 'Critical', 'West', 'jdoe', 'Router-W1', '2024-02-01 10:00:00');\nINSERT INTO alarm (id, severity, district, ack_user_id, eqp_name, time_ack) VALUES (402, 'Major', 'West', 'jdoe', 'Switch-W2', '2024-02-01 11:00:00');\nINSERT INTO alarm (id, severity, district, ack_user_id, eqp_name, time_ack) VALUES (403, 'Critical', 'East', 'jdoe', 'Router-E1', '2024-02-01 12:00:00');\nINSERT INTO alarm (id, severity, district, ack_user_id, eqp_name, time_ack) VALUES (404, 'Critical', 'West', 'asmith', 'Server-W3', '2024-02-01 13:00:00');\nINSERT INTO alarm (id, severity, district, ack_user_id, eqp_name, time_ack) VALUES (405, 'Critical', 'West', 'jdoe', 'Firewall-W4', '2024-02-01 14:00:00');"}
{"sql_prompt": "Search for alarms containing 'Power Failure' in the additional text field.", "sql": "SELECT id, eqp_name, additional_text FROM alarm WHERE additional_text LIKE '%Power Failure%';", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), additional_text character varying(250));\nINSERT INTO alarm (id, eqp_name, additional_text) VALUES (501, 'SiteA-Gen', 'Primary Power Failure');\nINSERT INTO alarm (id, eqp_name, additional_text) VALUES (502, 'SiteB-UPS', 'Low Battery');\nINSERT INTO alarm (id, eqp_name, additional_text) VALUES (503, 'SiteC-PDU', 'Input Power Failure - Phase A');"}
{"sql_prompt": "List all site IDs and the total number of outages recorded for each site.", "sql": "SELECT site_id, COUNT(*) AS outage_count FROM outage GROUP BY site_id;", "sql_context": "CREATE TABLE outage (outage_id integer, site_id character varying(50));\nINSERT INTO outage (outage_id, site_id) VALUES (1, 'SiteA');\nINSERT INTO outage (outage_id, site_id) VALUES (2, 'SiteB');\nINSERT INTO outage (outage_id, site_id) VALUES (3, 'SiteA');\nINSERT INTO outage (outage_id, site_id) VALUES (4, 'SiteC');\nINSERT INTO outage (outage_id, site_id) VALUES (5, 'SiteA');"}
{"sql_prompt": "Show the 5 most recently raised alarms, including their ID, equipment name, and time raised.", "sql": "SELECT id, eqp_name, time_raised FROM alarm ORDER BY time_raised DESC LIMIT 5;", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), time_raised timestamp without time zone);\nINSERT INTO alarm (id, eqp_name, time_raised) VALUES (601, 'Device1', '2024-03-10 10:00:00');\nINSERT INTO alarm (id, eqp_name, time_raised) VALUES (602, 'Device2', '2024-03-10 11:00:00');\nINSERT INTO alarm (id, eqp_name, time_raised) VALUES (603, 'Device3', '2024-03-10 09:00:00');\nINSERT INTO alarm (id, eqp_name, time_raised) VALUES (604, 'Device4', '2024-03-10 11:30:00');\nINSERT INTO alarm (id, eqp_name, time_raised) VALUES (605, 'Device5', '2024-03-10 10:30:00');\nINSERT INTO alarm (id, eqp_name, time_raised) VALUES (606, 'Device6', '2024-03-10 11:15:00');"}
{"sql_prompt": "Get the names of cable segments that belong to cable systems of type 'Submarine'.", "sql": "SELECT T2.\"CABLE_SEGMENT_NAME\" FROM cable_system AS T1 INNER JOIN cl_clsegm_rel AS T3 ON T1.\"CABLE_SYSTEM_ID\" = T3.\"CABLE_SYSTEM_ID\" INNER JOIN cablesegment AS T2 ON T3.\"CABLE_SEGMENT_ID\" = T2.\"CABLE_SEGMENT_ID\" WHERE T1.\"CABLE_TYPE\" = 'Submarine';", "sql_context": "CREATE TABLE cable_system (index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SYSTEM_NAME\" text, \"CABLE_TYPE\" text);\nCREATE TABLE cablesegment (index bigint, \"CABLE_SEGMENT_ID\" text, \"CABLE_SEGMENT_NAME\" text);\nCREATE TABLE cl_clsegm_rel (index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SEGMENT_ID\" text);\nINSERT INTO cable_system (index, \"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\") VALUES (1, 'SYS01', 'Atlantic Link', 'Submarine');\nINSERT INTO cable_system (index, \"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\") VALUES (2, 'SYS02', 'Metro Ring', 'Terrestrial');\nINSERT INTO cablesegment (index, \"CABLE_SEGMENT_ID\", \"CABLE_SEGMENT_NAME\") VALUES (1, 'SEG01A', 'ShoreEnd-A');\nINSERT INTO cablesegment (index, \"CABLE_SEGMENT_ID\", \"CABLE_SEGMENT_NAME\") VALUES (2, 'SEG01B', 'DeepWater-1');\nINSERT INTO cablesegment (index, \"CABLE_SEGMENT_ID\", \"CABLE_SEGMENT_NAME\") VALUES (3, 'SEG02A', 'CityLoop-East');\nINSERT INTO cl_clsegm_rel (index, \"CABLE_SYSTEM_ID\", \"CABLE_SEGMENT_ID\") VALUES (1, 'SYS01', 'SEG01A');\nINSERT INTO cl_clsegm_rel (index, \"CABLE_SYSTEM_ID\", \"CABLE_SEGMENT_ID\") VALUES (2, 'SYS01', 'SEG01B');\nINSERT INTO cl_clsegm_rel (index, \"CABLE_SYSTEM_ID\", \"CABLE_SEGMENT_ID\") VALUES (3, 'SYS02', 'SEG02A');"}
{"sql_prompt": "Find incident numbers for incidents currently marked as causing inefficiency.", "sql": "SELECT incident_number FROM incident WHERE inefficiency = TRUE;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), inefficiency boolean);\nINSERT INTO incident (incident_number, inefficiency) VALUES ('INC100', TRUE);\nINSERT INTO incident (incident_number, inefficiency) VALUES ('INC101', FALSE);\nINSERT INTO incident (incident_number, inefficiency) VALUES ('INC102', TRUE);"}
{"sql_prompt": "Find alarms that were cleared before they were acknowledged.", "sql": "SELECT id, eqp_name, time_cleared, time_ack FROM alarm WHERE time_cleared < time_ack;", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), time_cleared timestamp without time zone, time_ack timestamp without time zone);\nINSERT INTO alarm (id, eqp_name, time_cleared, time_ack) VALUES (701, 'DeviceX', '2024-03-01 10:00:00', '2024-03-01 10:05:00');\nINSERT INTO alarm (id, eqp_name, time_cleared, time_ack) VALUES (702, 'DeviceY', '2024-03-01 11:10:00', '2024-03-01 11:05:00');\nINSERT INTO alarm (id, eqp_name, time_cleared, time_ack) VALUES (703, 'DeviceZ', '2024-03-01 12:00:00', '2024-03-01 12:30:00');"}
{"sql_prompt": "Using the alarm view, find the alarm ID and equipment name for alarms from the vendor 'Cisco'.", "sql": "SELECT alarm_id, eqp_name FROM v_alarms WHERE vendor = 'Cisco';", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), eqp_name character varying(250), vendor character varying(250));\nCREATE TABLE alarm_label (id bigint, slogan character varying(250), domain_id character varying(250));\nCREATE VIEW v_alarms AS SELECT a.id AS alarm_id, a.severity, a.eqp_name, l.slogan AS description, l.domain_id AS domain, a.vendor FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO alarm (id, severity, eqp_name, vendor) VALUES (801, 'Major', 'Router-A', 'Cisco');\nINSERT INTO alarm_label (id, slogan, domain_id) VALUES (801, 'Link Down', 'Network');\nINSERT INTO alarm (id, severity, eqp_name, vendor) VALUES (802, 'Warning', 'Server-X', 'Dell');\nINSERT INTO alarm_label (id, slogan, domain_id) VALUES (802, 'High CPU', 'Compute');\nINSERT INTO alarm (id, severity, eqp_name, vendor) VALUES (803, 'Critical', 'Switch-B', 'Cisco');\nINSERT INTO alarm_label (id, slogan, domain_id) VALUES (803, 'Port Error', 'Network');"}
{"sql_prompt": "Count the number of acknowledged 'Major' severity alarms for each device type.", "sql": "SELECT device_type, COUNT(*) FROM alarm WHERE severity = 'Major' AND base_alarm_ack_state = 'Acknowledged' GROUP BY device_type;", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), device_type character varying(250), base_alarm_ack_state character varying(250));\nINSERT INTO alarm (id, severity, device_type, base_alarm_ack_state) VALUES (901, 'Major', 'Router', 'Acknowledged');\nINSERT INTO alarm (id, severity, device_type, base_alarm_ack_state) VALUES (902, 'Critical', 'Router', 'Acknowledged');\nINSERT INTO alarm (id, severity, device_type, base_alarm_ack_state) VALUES (903, 'Major', 'Switch', 'Unacknowledged');\nINSERT INTO alarm (id, severity, device_type, base_alarm_ack_state) VALUES (904, 'Major', 'Router', 'Acknowledged');\nINSERT INTO alarm (id, severity, device_type, base_alarm_ack_state) VALUES (905, 'Major', 'Firewall', 'Acknowledged');"}
{"sql_prompt": "Find the names and model codes of network elements located at sites within the 'North' district.", "sql": "SELECT T1.\"NODE_NAME\", T1.\"MODEL_CODE\" FROM network_elements AS T1 WHERE T1.\"LOCATION\" IN (SELECT T2.\"SITE_NAME\" FROM sites AS T2 WHERE T2.\"DISTRICT\" = 'North');", "sql_context": "CREATE TABLE network_elements (index bigint, \"LOCATION\" text, \"NODE_NAME\" text, \"MODEL_CODE\" text);\nCREATE TABLE sites (\"SITE_ID\" text, \"SITE_NAME\" text, \"DISTRICT\" text);\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"DISTRICT\") VALUES ('S101', 'North-Hub', 'North');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"DISTRICT\") VALUES ('S102', 'North-Edge', 'North');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"DISTRICT\") VALUES ('S201', 'South-Core', 'South');\nINSERT INTO network_elements (index, \"LOCATION\", \"NODE_NAME\", \"MODEL_CODE\") VALUES (1, 'North-Hub', 'Core-Rtr-1', 'NCS5500');\nINSERT INTO network_elements (index, \"LOCATION\", \"NODE_NAME\", \"MODEL_CODE\") VALUES (2, 'South-Core', 'Core-Rtr-2', 'NCS5500');\nINSERT INTO network_elements (index, \"LOCATION\", \"NODE_NAME\", \"MODEL_CODE\") VALUES (3, 'North-Edge', 'Edge-Sw-1', 'CAT9K');"}
{"sql_prompt": "What are the names of cable systems classified as 'Submarine' type?", "sql": "SELECT \"CABLE_SYSTEM_NAME\" FROM cable_system WHERE \"CABLE_TYPE\" = 'Submarine';", "sql_context": "CREATE TABLE cable_system (index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SYSTEM_NAME\" text, \"CABLE_TYPE\" text);\nINSERT INTO cable_system (index, \"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\") VALUES (1, 'SYS01', 'Atlantic Link 1', 'Submarine');\nINSERT INTO cable_system (index, \"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\") VALUES (2, 'SYS02', 'Metro Ring', 'Terrestrial');\nINSERT INTO cable_system (index, \"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\") VALUES (3, 'SYS03', 'Pacific Connect', 'Submarine');"}
{"sql_prompt": "Find the card type installed in the network element with IP address '192.168.1.1'.", "sql": "SELECT T3.\"CARD_TYPE\" FROM equipment_ip_address AS T1 INNER JOIN network_elements AS T2 ON T1.\"NETWORK_ELEMENT_ID\" = T2.\"NETWORK_ELEMENT_ID\" INNER JOIN rmm_equipment_details AS T3 ON T2.\"NODE_NAME\" = T3.\"NODE_NAME\" WHERE T1.\"IP_ADDRESS\" = '192.168.1.1';", "sql_context": "CREATE TABLE equipment_ip_address (index bigint, \"NODE_NAME\" text, \"NETWORK_ELEMENT_ID\" bigint, \"IP_ADDRESS\" text);\nCREATE TABLE network_elements (index bigint, \"NETWORK_ELEMENT_ID\" bigint, \"NODE_NAME\" text);\nCREATE TABLE rmm_equipment_details (\"NODE_NAME\" text, \"CARD_TYPE\" text);\nINSERT INTO equipment_ip_address (index, \"NODE_NAME\", \"NETWORK_ELEMENT_ID\", \"IP_ADDRESS\") VALUES (1, 'Router-A', 2001, '192.168.1.1');\nINSERT INTO network_elements (index, \"NETWORK_ELEMENT_ID\", \"NODE_NAME\") VALUES (1, 2001, 'Router-A');\nINSERT INTO rmm_equipment_details (\"NODE_NAME\", \"CARD_TYPE\") VALUES ('Router-A', 'Line Card X');\nINSERT INTO equipment_ip_address (index, \"NODE_NAME\", \"NETWORK_ELEMENT_ID\", \"IP_ADDRESS\") VALUES (2, 'Switch-B', 2002, '192.168.1.2');\nINSERT INTO network_elements (index, \"NETWORK_ELEMENT_ID\", \"NODE_NAME\") VALUES (2, 2002, 'Switch-B');\nINSERT INTO rmm_equipment_details (\"NODE_NAME\", \"CARD_TYPE\") VALUES ('Switch-B', 'Supervisor Y');"}
{"sql_prompt": "List incident numbers and their creation dates for incidents created between March 1st, 2024 and March 7th, 2024.", "sql": "SELECT incident_number, created_date FROM incident WHERE created_date >= '2024-03-01 00:00:00' AND created_date < '2024-03-08 00:00:00';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), created_date timestamp without time zone);\nINSERT INTO incident (incident_number, created_date) VALUES ('INC200', '2024-02-29 15:00:00');\nINSERT INTO incident (incident_number, created_date) VALUES ('INC201', '2024-03-02 09:30:00');\nINSERT INTO incident (incident_number, created_date) VALUES ('INC202', '2024-03-05 11:00:00');\nINSERT INTO incident (incident_number, created_date) VALUES ('INC203', '2024-03-08 08:00:00');"}
{"sql_prompt": "Show the ID and equipment name for alarms that have not yet been cleared.", "sql": "SELECT id, eqp_name FROM alarm WHERE time_cleared IS NULL;", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), time_cleared timestamp without time zone);\nINSERT INTO alarm (id, eqp_name, time_cleared) VALUES (1001, 'DeviceA', '2024-03-10 10:00:00');\nINSERT INTO alarm (id, eqp_name, time_cleared) VALUES (1002, 'DeviceB', NULL);\nINSERT INTO alarm (id, eqp_name, time_cleared) VALUES (1003, 'DeviceC', NULL);"}
{"sql_prompt": "Which equipment names (eqp_name) have generated more than 5 critical alarms?", "sql": "SELECT eqp_name, COUNT(*) FROM alarm WHERE severity = 'Critical' GROUP BY eqp_name HAVING COUNT(*) > 5;", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), eqp_name character varying(250));\nINSERT INTO alarm (id, severity, eqp_name) VALUES (1101, 'Critical', 'Router1');\nINSERT INTO alarm (id, severity, eqp_name) VALUES (1102, 'Critical', 'Router1');\nINSERT INTO alarm (id, severity, eqp_name) VALUES (1103, 'Critical', 'Router1');\nINSERT INTO alarm (id, severity, eqp_name) VALUES (1104, 'Critical', 'Router1');\nINSERT INTO alarm (id, severity, eqp_name) VALUES (1105, 'Critical', 'Router1');\nINSERT INTO alarm (id, severity, eqp_name) VALUES (1106, 'Critical', 'Router1');\nINSERT INTO alarm (id, severity, eqp_name) VALUES (1107, 'Major', 'Router1');\nINSERT INTO alarm (id, severity, eqp_name) VALUES (1108, 'Critical', 'SwitchA');\nINSERT INTO alarm (id, severity, eqp_name) VALUES (1109, 'Critical', 'SwitchA');"}
{"sql_prompt": "Show the ID, equipment name and comment time for the 10 most recently commented alarms.", "sql": "SELECT id, eqp_name, time_comment FROM alarm ORDER BY time_comment DESC LIMIT 10;", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), time_comment timestamp without time zone);\nINSERT INTO alarm (id, eqp_name, time_comment) VALUES (1201, 'EQP1', '2024-03-10 10:00:00');\nINSERT INTO alarm (id, eqp_name, time_comment) VALUES (1202, 'EQP2', '2024-03-11 11:00:00');\nINSERT INTO alarm (id, eqp_name, time_comment) VALUES (1203, 'EQP3', '2024-03-09 09:00:00');\nINSERT INTO alarm (id, eqp_name, time_comment) VALUES (1204, 'EQP4', '2024-03-11 11:30:00');\nINSERT INTO alarm (id, eqp_name, time_comment) VALUES (1205, 'EQP5', '2024-03-10 10:30:00');\nINSERT INTO alarm (id, eqp_name, time_comment) VALUES (1206, 'EQP6', '2024-03-11 11:15:00');"}
{"sql_prompt": "Get the names of services located at sites in the city 'Milan'.", "sql": "SELECT T1.\"SERVICE_NAME\" FROM service AS T1 INNER JOIN sites AS T2 ON T1.\"A_NETWORK_ADDRESS\" = T2.\"SITE_NAME\" OR T1.\"B_NETWORK_ADDRESS\" = T2.\"SITE_NAME\" WHERE T2.\"CITY_NAME\" = 'Milan';", "sql_context": "CREATE TABLE service (\"SERVICE_ID\" text, \"SERVICE_NAME\" text, \"A_NETWORK_ADDRESS\" text, \"B_NETWORK_ADDRESS\" text);\nCREATE TABLE sites (\"SITE_ID\" text, \"SITE_NAME\" text, \"CITY_NAME\" text);\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"CITY_NAME\") VALUES ('SITE_MIL1', 'Milan-POP1', 'Milan');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"CITY_NAME\") VALUES ('SITE_ROM1', 'Rome-POP1', 'Rome');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"CITY_NAME\") VALUES ('SITE_MIL2', 'Milan-Edge', 'Milan');\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"A_NETWORK_ADDRESS\", \"B_NETWORK_ADDRESS\") VALUES ('SVC001', 'Milan-Rome Link', 'Milan-POP1', 'Rome-POP1');\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"A_NETWORK_ADDRESS\", \"B_NETWORK_ADDRESS\") VALUES ('SVC002', 'Milan Local Loop', 'Milan-POP1', 'Milan-Edge');\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"A_NETWORK_ADDRESS\", \"B_NETWORK_ADDRESS\") VALUES ('SVC003', 'Rome Metro', 'Rome-POP1', 'Rome-POP1');"}
{"sql_prompt": "Count the number of alarms per domain using the v_alarms view.", "sql": "SELECT domain, COUNT(*) FROM v_alarms GROUP BY domain;", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), eqp_name character varying(250));\nCREATE TABLE alarm_label (id bigint, slogan character varying(250), domain_id character varying(250));\nCREATE VIEW v_alarms AS SELECT a.id AS alarm_id, a.severity, a.eqp_name, l.slogan AS description, l.domain_id AS domain FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO alarm (id, severity, eqp_name) VALUES (1301, 'Major', 'Router-A');\nINSERT INTO alarm_label (id, slogan, domain_id) VALUES (1301, 'Link Down', 'Network');\nINSERT INTO alarm (id, severity, eqp_name) VALUES (1302, 'Warning', 'Server-X');\nINSERT INTO alarm_label (id, slogan, domain_id) VALUES (1302, 'High CPU', 'Compute');\nINSERT INTO alarm (id, severity, eqp_name) VALUES (1303, 'Critical', 'Switch-B');\nINSERT INTO alarm_label (id, slogan, domain_id) VALUES (1303, 'Port Error', 'Network');"}
{"sql_prompt": "Find the IDs and equipment names of alarms that currently have 'ACTIVE' status.", "sql": "SELECT id, eqp_name FROM alarm WHERE status = 'ACTIVE';", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), status character varying(250));\nINSERT INTO alarm (id, eqp_name, status) VALUES (1401, 'EQP1', 'ACTIVE');\nINSERT INTO alarm (id, eqp_name, status) VALUES (1402, 'EQP2', 'CLEARED');\nINSERT INTO alarm (id, eqp_name, status) VALUES (1403, 'EQP3', 'ACTIVE');"}
{"sql_prompt": "What are the alarm IDs (primary keys) associated with the incident number 'INC00123'?", "sql": "SELECT alarm_primary_key FROM alarm WHERE tt_id = 'INC00123';", "sql_context": "CREATE TABLE alarm (id bigint, alarm_primary_key character varying(250), tt_id character varying(250));\nINSERT INTO alarm (id, alarm_primary_key, tt_id) VALUES (1501, 'ALM-XYZ-1', 'INC00123');\nINSERT INTO alarm (id, alarm_primary_key, tt_id) VALUES (1502, 'ALM-ABC-2', 'INC00456');\nINSERT INTO alarm (id, alarm_primary_key, tt_id) VALUES (1503, 'ALM-XYZ-5', 'INC00123');"}
{"sql_prompt": "List the outage IDs and site IDs for outages at locations with latitude greater than 45.0 degrees.", "sql": "SELECT outage_id, site_id FROM outage WHERE latitude > 45.0;", "sql_context": "CREATE TABLE outage (outage_id integer, site_id character varying(50), latitude numeric(9,6));\nINSERT INTO outage (outage_id, site_id, latitude) VALUES (1, 'SiteN', 45.512345);\nINSERT INTO outage (outage_id, site_id, latitude) VALUES (2, 'SiteS', 41.890123);\nINSERT INTO outage (outage_id, site_id, latitude) VALUES (3, 'SiteN2', 46.056789);"}
{"sql_prompt": "Find the names of Ethernet paths associated with VLAN ID 100.", "sql": "SELECT \"NAME\" FROM path_ethernet WHERE \"VLAN_ID\" = 100;", "sql_context": "CREATE TABLE path_ethernet (index bigint, \"VLAN_ID\" bigint, \"PATH_ETHERNET_ID\" bigint, \"NAME\" text);\nINSERT INTO path_ethernet (index, \"VLAN_ID\", \"PATH_ETHERNET_ID\", \"NAME\") VALUES (1, 100, 5001, 'CustomerA-Path1');\nINSERT INTO path_ethernet (index, \"VLAN_ID\", \"PATH_ETHERNET_ID\", \"NAME\") VALUES (2, 200, 5002, 'Backbone-PathX');\nINSERT INTO path_ethernet (index, \"VLAN_ID\", \"PATH_ETHERNET_ID\", \"NAME\") VALUES (3, 100, 5003, 'CustomerB-Path2');"}
{"sql_prompt": "Show the node name and location for 'Huawei' network elements that have an 'ACTIVE' activity status and are located in 'Rome'.", "sql": "SELECT \"NODE_NAME\", \"LOCATION\" FROM network_elements WHERE \"VENDOR_NAME\" = 'Huawei' AND \"ACTIVITY_STATUS_CODE\" = 'ACTIVE' AND \"LOCATION\" = 'Rome';", "sql_context": "CREATE TABLE network_elements (index bigint, \"LOCATION\" text, \"NODE_NAME\" text, \"ACTIVITY_STATUS_CODE\" text, \"VENDOR_NAME\" text);\nINSERT INTO network_elements (index, \"LOCATION\", \"NODE_NAME\", \"ACTIVITY_STATUS_CODE\", \"VENDOR_NAME\") VALUES (1, 'Rome', 'Huawei-Rtr-1', 'ACTIVE', 'Huawei');\nINSERT INTO network_elements (index, \"LOCATION\", \"NODE_NAME\", \"ACTIVITY_STATUS_CODE\", \"VENDOR_NAME\") VALUES (2, 'Milan', 'Cisco-Sw-1', 'ACTIVE', 'Cisco');\nINSERT INTO network_elements (index, \"LOCATION\", \"NODE_NAME\", \"ACTIVITY_STATUS_CODE\", \"VENDOR_NAME\") VALUES (3, 'Rome', 'Huawei-Opt-2', 'INACTIVE', 'Huawei');\nINSERT INTO network_elements (index, \"LOCATION\", \"NODE_NAME\", \"ACTIVITY_STATUS_CODE\", \"VENDOR_NAME\") VALUES (4, 'Rome', 'Huawei-Fwl-3', 'ACTIVE', 'Huawei');"}
{"sql_prompt": "Show the ID, severity, and equipment name for all critical alarms.", "sql": "SELECT id, severity, eqp_name FROM alarm WHERE severity = 'Critical';", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250), eqp_name character varying(250));\nINSERT INTO alarm (id, severity, eqp_name) VALUES (101, 'Critical', 'Router-A1'), (102, 'Major', 'Switch-B2'), (103, 'Critical', 'Server-C3');"}
{"sql_prompt": "List all distinct device types present in the alarm table.", "sql": "SELECT DISTINCT device_type FROM alarm;", "sql_context": "CREATE TABLE alarm (id bigint, device_type character varying(250));\nINSERT INTO alarm (id, device_type) VALUES (201, 'Router'), (202, 'Switch'), (203, 'Router'), (204, 'Firewall');"}
{"sql_prompt": "Find the alarm details for the equipment named 'CoreSwitch-01'.", "sql": "SELECT * FROM alarm WHERE eqp_name = 'CoreSwitch-01';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), additional_text character varying(250), alarm_primary_key character varying(250), area character varying(250), base_alarm_ack_state character varying(250), base_probable_alarm_cause character varying(250), comments text, detail text, device_name character varying(250), device_type character varying(250), district character varying(250), ems_name character varying(250), eqp_name character varying(250), from_site character varying(250), keyword character varying(250), notification_id character varying(250), origin character varying(250), outcome character varying(250), proposed_repair_actions text, raw_probable_alarm_cause integer, remote_eqp_name character varying(250), repeated_count integer, severity character varying(250), specific_problem character varying(250), status character varying(250), time_ack timestamp without time zone, time_cleared timestamp without time zone, time_down timestamp without time zone, time_raised timestamp without time zone, time_up timestamp without time zone, time_update timestamp without time zone, type character varying(250), vendor character varying(250), parent_alarm_primary_key character varying(250), tt_id character varying(250), module_name character varying(250), inhibit boolean, comment_user_id character varying(250), raw_alarm_type character varying(250), time_comment timestamp without time zone, tt_status character varying(250), time_tt_last_update timestamp without time zone, planned_work character varying(250), access_id character varying(250), access_type character varying(250), action_code character varying(10), element_status integer, eqp_name2 character varying(250), eqp_type character varying(250), topology character varying(250), tt_association_type character varying(250));\nINSERT INTO alarm (id, eqp_name, severity, time_raised) VALUES (301, 'CoreSwitch-01', 'Major', '2023-10-27 09:00:00');\nINSERT INTO alarm (id, eqp_name, severity, time_raised) VALUES (302, 'EdgeRouter-02', 'Critical', '2023-10-27 10:00:00');"}
{"sql_prompt": "How many alarms occurred in the 'West' district?", "sql": "SELECT COUNT(*) FROM alarm WHERE district = 'West';", "sql_context": "CREATE TABLE alarm (id bigint, district character varying(250));\nINSERT INTO alarm (id, district) VALUES (401, 'North'), (402, 'West'), (403, 'West');"}
{"sql_prompt": "Show the incident number and description for incidents related to 'Network' category.", "sql": "SELECT incident_number, description FROM incident WHERE category = 'Network';", "sql_context": "CREATE TABLE incident (incident_number character varying(50), category character varying(100), description text);\nINSERT INTO incident (incident_number, category, description) VALUES ('INC001', 'Network', 'Router down'), ('INC002', 'Software', 'Application error'), ('INC003', 'Network', 'High latency');"}
{"sql_prompt": "List the 5 most recently created incidents.", "sql": "SELECT incident_number, created_date, short_description FROM incident ORDER BY created_date DESC LIMIT 5;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), created_date timestamp without time zone, short_description text);\nINSERT INTO incident (incident_number, created_date, short_description) VALUES ('INC001', '2023-10-26 10:00:00', 'Issue A'), ('INC002', '2023-10-27 11:00:00', 'Issue B'), ('INC003', '2023-10-25 09:00:00', 'Issue C');"}
{"sql_prompt": "What are the different vendors associated with network elements?", "sql": "SELECT DISTINCT \"VENDOR_NAME\" FROM network_elements;", "sql_context": "CREATE TABLE network_elements (index bigint, \"VENDOR_NAME\" text);\nINSERT INTO network_elements (index, \"VENDOR_NAME\") VALUES (1, 'Cisco'), (2, 'Juniper'), (3, 'Cisco');"}
{"sql_prompt": "Find the site name and address for site ID 'SITE00123'.", "sql": "SELECT \"SITE_NAME\", \"ADDRESS\", \"CITY_NAME\" FROM sites WHERE \"SITE_ID\" = 'SITE00123';", "sql_context": "CREATE TABLE sites (\"SITE_ID\" text, \"SITE_NAME\" text, \"ADDRESS\" text, \"CITY_NAME\" text);\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"ADDRESS\", \"CITY_NAME\") VALUES ('SITE00123', 'Central Office A', '123 Main St', 'Metropolis');\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"ADDRESS\", \"CITY_NAME\") VALUES ('SITE00456', 'Data Center B', '456 Oak Ave', 'Gotham');"}
{"sql_prompt": "Show the alarm ID, severity, and description (slogan) for all alarms, using the alarm view.", "sql": "SELECT alarm_id, severity, description FROM v_alarms;", "sql_context": "CREATE TABLE alarm ( id bigint, severity character varying(250), eqp_name character varying(250), from_site character varying(250), remote_eqp_name character varying(250), time_up timestamp without time zone, time_down timestamp without time zone, additional_text character varying(250), vendor character varying(250), raw_alarm_type character varying(250), device_name character varying(250), device_type character varying(250), tt_id character varying(250), ems_name character varying(250), time_cleared timestamp without time zone );\nCREATE TABLE alarm_label ( id bigint, domain_id character varying(250), slogan character varying(250), alarmtrigger character varying(250) );\nCREATE VIEW v_alarms AS SELECT a.id AS alarm_id, a.severity, a.eqp_name, a.from_site, a.remote_eqp_name, a.time_up, a.time_down, l.slogan AS description, a.additional_text, a.vendor, a.raw_alarm_type AS alarm_type, a.device_name, a.device_type, l.domain_id AS domain, a.tt_id, a.ems_name, a.time_cleared AS ts_cleared FROM (alarm a JOIN alarm_label l ON ((a.id = l.id)));\nINSERT INTO alarm (id, severity, eqp_name) VALUES (501, 'Critical', 'Router-X1'), (502, 'Warning', 'Server-Y2');\nINSERT INTO alarm_label (id, slogan) VALUES (501, 'Device Unreachable'), (502, 'CPU Load High');"}
{"sql_prompt": "Count the number of alarms for each severity level.", "sql": "SELECT severity, COUNT(*) as alarm_count FROM alarm GROUP BY severity ORDER BY alarm_count DESC;", "sql_context": "CREATE TABLE alarm (id bigint, severity character varying(250));\nINSERT INTO alarm (id, severity) VALUES (601, 'Critical'), (602, 'Major'), (603, 'Critical'), (604, 'Minor'), (605, 'Major');"}
{"sql_prompt": "Show incidents assigned to 'John Doe' that are not yet closed.", "sql": "SELECT incident_number, short_description, created_date FROM incident WHERE assigned_to = 'John Doe' AND closed IS NULL;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), assigned_to character varying(100), closed timestamp without time zone, short_description text, created_date timestamp without time zone);\nINSERT INTO incident (incident_number, assigned_to, closed, short_description, created_date) VALUES ('INC100', 'John Doe', NULL, 'Network issue', '2023-10-27 08:00:00'), ('INC101', 'Jane Smith', NULL, 'Software bug', '2023-10-27 09:00:00'), ('INC102', 'John Doe', '2023-10-26 17:00:00', 'Resolved hardware fault', '2023-10-26 14:00:00');"}
{"sql_prompt": "List the network elements located in 'Building 5', showing their node name and model code.", "sql": "SELECT \"NODE_NAME\", \"MODEL_CODE\" FROM network_elements WHERE \"LOCATION\" = 'Building 5';", "sql_context": "CREATE TABLE network_elements (index bigint, \"LOCATION\" text, \"NODE_NAME\" text, \"MODEL_CODE\" text);\nINSERT INTO network_elements (index, \"LOCATION\", \"NODE_NAME\", \"MODEL_CODE\") VALUES (1, 'Building 5', 'Router5-A', 'CISCO-ASR9K'), (2, 'Building 7', 'Switch7-B', 'JUNIPER-EX4300'), (3, 'Building 5', 'Firewall5-C', 'PALOALTO-5220');"}
{"sql_prompt": "What is the IP address associated with the network element having ID 123456789?", "sql": "SELECT T2.\"IP_ADDRESS\" FROM network_elements AS T1 INNER JOIN equipment_ip_address AS T2 ON T1.\"NETWORK_ELEMENT_ID\" = T2.\"NETWORK_ELEMENT_ID\" WHERE T1.\"NETWORK_ELEMENT_ID\" = 123456789;", "sql_context": "CREATE TABLE network_elements (index bigint, \"NETWORK_ELEMENT_ID\" bigint);\nCREATE TABLE equipment_ip_address (index bigint, \"NETWORK_ELEMENT_ID\" bigint, \"IP_ADDRESS\" text);\nINSERT INTO network_elements (index, \"NETWORK_ELEMENT_ID\") VALUES (1, 123456789), (2, 987654321);\nINSERT INTO equipment_ip_address (index, \"NETWORK_ELEMENT_ID\", \"IP_ADDRESS\") VALUES (10, 123456789, '10.1.1.1'), (11, 987654321, '10.2.2.2');"}
{"sql_prompt": "Show all outages with their site ID and start time.", "sql": "SELECT outage_id, site_id, ts_start_disruption FROM outage;", "sql_context": "CREATE TABLE outage (outage_id integer, site_id character varying(50), ts_start_disruption timestamp without time zone);\nINSERT INTO outage (outage_id, site_id, ts_start_disruption) VALUES (1, 'SiteA', '2023-10-26 14:30:00'), (2, 'SiteB', '2023-10-27 02:00:00');"}
{"sql_prompt": "Find the description for leased line code 'LL-500'.", "sql": "SELECT \"DESCRIPTION\" FROM leased_lines WHERE \"CODE\" = 'LL-500';", "sql_context": "CREATE TABLE leased_lines (index bigint, \"CODE\" text, \"DESCRIPTION\" text);\nINSERT INTO leased_lines (index, \"CODE\", \"DESCRIPTION\") VALUES (1, 'LL-500', 'Primary leased line circuit'), (2, 'LL-600', 'Backup circuit');"}
{"sql_prompt": "List the PE name and status for all Mobile PE entries with VLAN ID 100.", "sql": "SELECT \"PE_NAME\", \"PE_STATUS\" FROM mobile_pe WHERE \"VLAN_ID\" = 100;", "sql_context": "CREATE TABLE mobile_pe (index bigint, \"VLAN_ID\" double precision, \"PE_NAME\" text, \"PE_STATUS\" text);\nINSERT INTO mobile_pe (index, \"VLAN_ID\", \"PE_NAME\", \"PE_STATUS\") VALUES (1, 100, 'PE-Router-1', 'Active'), (2, 200, 'PE-Router-2', 'Active'), (3, 100, 'PE-Router-3', 'Maintenance');"}
{"sql_prompt": "Get the cable system name and type for cable system ID 'CSYS-001'.", "sql": "SELECT \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\" FROM cable_system WHERE \"CABLE_SYSTEM_ID\" = 'CSYS-001';", "sql_context": "CREATE TABLE cable_system (index bigint, \"CABLE_SYSTEM_ID\" text, \"CABLE_SYSTEM_NAME\" text, \"CABLE_TYPE\" text);\nINSERT INTO cable_system (index, \"CABLE_SYSTEM_ID\", \"CABLE_SYSTEM_NAME\", \"CABLE_TYPE\") VALUES (1, 'CSYS-001', 'Metro Ring A', 'Fiber Optic'), (2, 'CSYS-002', 'Backbone Link B', 'Fiber Optic');"}
{"sql_prompt": "Show the service name and status for services associated with domain 5.", "sql": "SELECT \"SERVICE_NAME\", \"STATUS\" FROM service WHERE \"DOMAIN\" = 5;", "sql_context": "CREATE TABLE service (\"SERVICE_ID\" text, \"SERVICE_NAME\" text, \"STATUS\" text, \"DOMAIN\" bigint);\nINSERT INTO service (\"SERVICE_ID\", \"SERVICE_NAME\", \"STATUS\", \"DOMAIN\") VALUES ('SVC001', 'VPN-CustomerX', 'Active', 5), ('SVC002', 'Internet-BranchY', 'Provisioning', 6), ('SVC003', 'VoIP-CustomerZ', 'Active', 5);"}
{"sql_prompt": "Find alarms that were raised between '2023-10-25 00:00:00' and '2023-10-26 00:00:00'.", "sql": "SELECT id, eqp_name, severity, time_raised FROM alarm WHERE time_raised >= '2023-10-25 00:00:00' AND time_raised < '2023-10-26 00:00:00';", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), severity character varying(250), time_raised timestamp without time zone);\nINSERT INTO alarm (id, eqp_name, severity, time_raised) VALUES (701, 'RouterA', 'Major', '2023-10-25 10:30:00'), (702, 'SwitchB', 'Minor', '2023-10-26 08:00:00'), (703, 'ServerC', 'Critical', '2023-10-25 23:59:59');"}
{"sql_prompt": "List all distinct assignment groups from the incident table.", "sql": "SELECT DISTINCT assignment_group FROM incident;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), assignment_group character varying(100));\nINSERT INTO incident (incident_number, assignment_group) VALUES ('INC200', 'Network Ops'), ('INC201', 'Server Admins'), ('INC202', 'Network Ops'), ('INC203', 'Database Admins');"}
{"sql_prompt": "Show the equipment name and severity for alarms associated with trouble ticket 'TT12345'.", "sql": "SELECT eqp_name, severity FROM alarm WHERE tt_id = 'TT12345';", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), severity character varying(250), tt_id character varying(250));\nINSERT INTO alarm (id, eqp_name, severity, tt_id) VALUES (801, 'Router-Z1', 'Critical', 'TT12345'), (802, 'Switch-Y2', 'Major', 'TT67890'), (803, 'Firewall-X3', 'Minor', 'TT12345');"}
{"sql_prompt": "Find the total number of incidents with an impact level greater than 3.", "sql": "SELECT COUNT(*) FROM incident WHERE impact > 3;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), impact integer);\nINSERT INTO incident (incident_number, impact) VALUES ('INC300', 2), ('INC301', 4), ('INC302', 5), ('INC303', 3);"}
{"sql_prompt": "Show the site name and province for all sites located in the 'Milan' city.", "sql": "SELECT \"SITE_NAME\", \"PROVINCE\" FROM sites WHERE \"CITY_NAME\" = 'Milan';", "sql_context": "CREATE TABLE sites (\"SITE_ID\" text, \"SITE_NAME\" text, \"CITY_NAME\" text, \"PROVINCE\" text);\nINSERT INTO sites (\"SITE_ID\", \"SITE_NAME\", \"CITY_NAME\", \"PROVINCE\") VALUES ('SITE-M1', 'Milan Central', 'Milan', 'MI'), ('SITE-R1', 'Rome DC', 'Rome', 'RM'), ('SITE-M2', 'Milan West', 'Milan', 'MI');"}
{"sql_prompt": "List alarms acknowledged by user 'admin01', showing the alarm ID and acknowledgement time.", "sql": "SELECT id, time_ack FROM alarm WHERE ack_user_id = 'admin01';", "sql_context": "CREATE TABLE alarm (id bigint, ack_user_id character varying(250), time_ack timestamp without time zone);\nINSERT INTO alarm (id, ack_user_id, time_ack) VALUES (901, 'admin01', '2023-10-27 10:05:00'), (902, 'tech02', '2023-10-27 11:10:00'), (903, 'admin01', '2023-10-27 12:15:00');"}
{"sql_prompt": "Find the NODE_NAME and IP_ADDRESS from the ports table where the MODEL_CODE is 'XYZ-1000'.", "sql": "SELECT \"NODE_NAME\", \"IP_ADDRESS\" FROM ports WHERE \"MODEL_CODE\" = 'XYZ-1000';", "sql_context": "CREATE TABLE ports (index bigint, \"NODE_NAME\" text, \"MODEL_CODE\" text, \"IP_ADDRESS\" text);\nINSERT INTO ports (index, \"NODE_NAME\", \"MODEL_CODE\", \"IP_ADDRESS\") VALUES (1, 'NodeA', 'XYZ-1000', '192.168.1.1'), (2, 'NodeB', 'ABC-500', '192.168.2.1'), (3, 'NodeC', 'XYZ-1000', '192.168.1.2');"}
{"sql_prompt": "Show the cable segment name and status for segments of type 'Single Mode Fiber'.", "sql": "SELECT \"CABLE_SEGMENT_NAME\", \"STATUS\" FROM cablesegment WHERE \"CABLE_TYPE\" = 'Single Mode Fiber';", "sql_context": "CREATE TABLE cablesegment (index bigint, \"CABLE_SEGMENT_NAME\" text, \"CABLE_TYPE\" text, \"STATUS\" double precision);\nINSERT INTO cablesegment (index, \"CABLE_SEGMENT_NAME\", \"CABLE_TYPE\", \"STATUS\") VALUES (1, 'Seg-A-B', 'Single Mode Fiber', 1.0), (2, 'Seg-B-C', 'Multi Mode Fiber', 1.0), (3, 'Seg-C-D', 'Single Mode Fiber', 0.0);"}
{"sql_prompt": "List the card name and status for cards in shelf 'Shelf 3' from RMM equipment details.", "sql": "SELECT \"CARD_NAME\", \"CARD_STATUS_CODE\" FROM rmm_equipment_details WHERE \"SHELF_NAME\" = 'Shelf 3';", "sql_context": "CREATE TABLE rmm_equipment_details (\"SHELF_NAME\" text, \"CARD_NAME\" text, \"CARD_STATUS_CODE\" text);\nINSERT INTO rmm_equipment_details (\"SHELF_NAME\", \"CARD_NAME\", \"CARD_STATUS_CODE\") VALUES ('Shelf 1', 'Line Card 1', 'Active'), ('Shelf 3', 'Processor Card A', 'Active'), ('Shelf 3', 'Interface Card B', 'Standby');"}
{"sql_prompt": "Find the Ethernet path name and status for paths with VLAN ID 50.", "sql": "SELECT \"NAME\", \"PATH_ETHERNET_STATUS\" FROM path_ethernet WHERE \"VLAN_ID\" = 50;", "sql_context": "CREATE TABLE path_ethernet (index bigint, \"VLAN_ID\" bigint, \"PATH_ETHERNET_ID\" bigint, \"PATH_ETHERNET_STATUS\" text, \"NAME\" text);\nINSERT INTO path_ethernet (index, \"VLAN_ID\", \"PATH_ETHERNET_ID\", \"PATH_ETHERNET_STATUS\", \"NAME\") VALUES (1, 50, 1001, 'UP', 'Path_CustomerX_VLAN50'), (2, 60, 1002, 'UP', 'Path_CustomerY_VLAN60'), (3, 50, 1003, 'DOWN', 'Path_CustomerZ_VLAN50');"}
{"sql_prompt": "Show the top 10 alarms with the highest repeated count.", "sql": "SELECT id, eqp_name, repeated_count FROM alarm ORDER BY repeated_count DESC NULLS LAST LIMIT 10;", "sql_context": "CREATE TABLE alarm (id bigint, eqp_name character varying(250), repeated_count integer);\nINSERT INTO alarm (id, eqp_name, repeated_count) VALUES (1001, 'RouterA', 50), (1002, 'SwitchB', 120), (1003, 'ServerC', 10), (1004, 'RouterD', 150);"}
{"sql_prompt": "List the incident number, category, and root cause for all resolved incidents.", "sql": "SELECT incident_number, category, root_cause FROM incident WHERE resolved IS NOT NULL;", "sql_context": "CREATE TABLE incident (incident_number character varying(50), category character varying(100), resolved timestamp without time zone, root_cause character varying(100));\nINSERT INTO incident (incident_number, category, resolved, root_cause) VALUES ('INC501', 'Network', '2023-10-26 10:00:00', 'Configuration Error'), ('INC502', 'Hardware', NULL, NULL), ('INC503', 'Software', '2023-10-27 11:00:00', 'Software Bug');"}
